{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        { field: 'country', rowGroup: true, hide: true },\n        { field: 'year', rowGroup: true, hide: true },\n        { field: 'gold' },\n        { field: 'silver' },\n        { field: 'bronze' },\n        { headerName: 'Gold*pi', field: 'goldPi', minWidth: 200 },\n        { headerName: 'Silver*pi', field: 'silverPi', minWidth: 200 },\n        { headerName: 'Bronze*pi', field: 'bronzePi', minWidth: 200 },\n    ],\n    defaultColDef: {\n        flex: 1,\n        minWidth: 150,\n        filter: true,\n    },\n    autoGroupColumnDef: {\n        headerName: 'Athlete',\n        field: 'athlete',\n        minWidth: 250,\n    },\n    sideBar: true,\n    getGroupRowAgg: getGroupRowAgg,\n};\n\nfunction getGroupRowAgg(params) {\n    const result = {\n        gold: 0,\n        silver: 0,\n        bronze: 0,\n        goldPi: 0,\n        silverPi: 0,\n        bronzePi: 0,\n    };\n\n    params.nodes.forEach((node) => {\n        const data = node.group ? node.aggData : node.data;\n\n        if (typeof data.gold === 'number') {\n            result.gold += data.gold;\n            result.goldPi += data.gold * Math.PI;\n        }\n\n        if (typeof data.silver === 'number') {\n            result.silver += data.silver;\n            result.silverPi += data.silver * Math.PI;\n        }\n\n        if (typeof data.bronze === 'number') {\n            result.bronze += data.bronze;\n            result.bronzePi += data.bronze * Math.PI;\n        }\n    });\n\n    return result;\n}\n\nfunction expandAll() {\n    gridApi.expandAll();\n}\n\nfunction collapseAll() {\n    gridApi.collapseAll();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', () => {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => gridApi.setGridOption('rowData', data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px\">\n        <button onclick=\"expandAll()\">Expand All</button>\n        <button onclick=\"collapseAll()\">Collapse All</button>\n    </div>\n\n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}