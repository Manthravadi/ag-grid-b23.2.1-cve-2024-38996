{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.ts","mainFileName":"app.component.ts","styleFiles":[],"files":{"style.css":"#wrapper {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    box-sizing: border-box;\n}\n\n#top {\n    display: flex;\n    gap: 10px;\n    min-height: 300px;\n    max-height: 300px;\n}\n\n#columnChart {\n    flex: 2;\n    height: 100%;\n}\n\n#pieChart {\n    flex: 2;\n    height: 100%;\n}\n\n#barChart {\n    min-height: 250px;\n    max-height: 250px;\n}\n\n#myGrid {\n    flex: 1;\n    height: 25%;\n}\n\n.my-chart {\n    background: #fff;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    padding: 10px;\n    box-sizing: border-box;\n}\n","data.ts":"export const getData = async (delay = 100): Promise<any[]> =>\n    new Promise((resolve) => setTimeout(() => resolve(generateData()), delay));\n\nconst generateData = () => {\n    const numRows = 500;\n    const names = [\n        'Aden Moreno',\n        'Alton Watson',\n        'Caleb Scott',\n        'Cathy Wilkins',\n        'Charlie Dodd',\n        'Jermaine Price',\n        'Reis Vasquez',\n    ];\n    const phones = [\n        { handset: 'Huawei P40', price: 599 },\n        { handset: 'Google Pixel 5', price: 589 },\n        { handset: 'Apple iPhone 12', price: 849 },\n        { handset: 'Samsung Galaxy S10', price: 499 },\n        { handset: 'Motorola Edge', price: 549 },\n        { handset: 'Sony Xperia', price: 279 },\n    ];\n\n    return Array.from({ length: numRows }, () => {\n        const phone = phones[getRandomNumber(0, phones.length - 1)];\n        const saleDate = randomDate(new Date(2020, 0, 1), new Date(2020, 11, 31));\n        const quarter = `Q${Math.floor((saleDate.getMonth() + 3) / 3)}`;\n\n        return {\n            salesRep: names[getRandomNumber(0, names.length - 1)],\n            handset: phone.handset,\n            sale: phone.price,\n            saleDate,\n            quarter,\n        };\n    });\n};\n\nconst getRandomNumber = (min: number, max: number): number => Math.floor(Math.random() * (max - min + 1) + min);\n\nconst randomDate = (start: Date, end: Date): Date =>\n    new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n","main.ts":"import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent);\n","app.component.ts":"\nimport { Component } from '@angular/core';\nimport { AgGridAngular } from '@ag-grid-community/angular';\n// NOTE: Angular CLI does not support component CSS imports: angular-cli/issues/23273\nimport '@ag-grid-community/styles/ag-grid.css';\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nimport './style.css';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { AgChartThemeOverrides, ColDef, ColGroupDef, FirstDataRenderedEvent, GridApi, GridOptions, GridReadyEvent, ModuleRegistry, ValueFormatterParams, createGrid } from '@ag-grid-community/core';\nimport { GridChartsModule } from '@ag-grid-enterprise/charts-enterprise';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { FiltersToolPanelModule } from '@ag-grid-enterprise/filter-tool-panel';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { MultiFilterModule } from '@ag-grid-enterprise/multi-filter';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { getData } from './data';\nModuleRegistry.registerModules([\n    ClientSideRowModelModule,\n    ColumnsToolPanelModule,\n    FiltersToolPanelModule,\n    GridChartsModule,\n    MenuModule,\n    MultiFilterModule,\n    SetFilterModule,\n]);\n\n\n\n@Component({\n    selector: 'my-app',\n    standalone: true,\n    imports: [AgGridAngular],\n    template: `<div id=\"wrapper\">\n    <div id=\"top\">\n        <div id=\"columnChart\" class=\"ag-theme-quartz my-chart\"></div>\n        <div id=\"pieChart\" class=\"ag-theme-quartz my-chart\"></div>\n    </div>\n    <div id=\"barChart\" class=\"ag-theme-quartz my-chart\"></div>\n    <ag-grid-angular\n    \n    style=\"width: 100%; height: 100%;\"\n    [columnDefs]=\"columnDefs\"\n    [defaultColDef]=\"defaultColDef\"\n    [enableCharts]=\"true\"\n    [chartThemeOverrides]=\"chartThemeOverrides\"\n    [rowData]=\"rowData\"\n    [class]=\"themeClass\"\n    (firstDataRendered)=\"onFirstDataRendered($event)\"\n    (gridReady)=\"onGridReady($event)\"\n     />\n</div>\n`\n})\n\nexport class AppComponent {\n\n    \n    public columnDefs: ColDef[] = [\n    { field: 'salesRep', chartDataType: 'category' },\n    { field: 'handset', chartDataType: 'category' },\n    {\n        headerName: 'Sale Price',\n        field: 'sale',\n        maxWidth: 160,\n        aggFunc: 'sum',\n        filter: 'agNumberColumnFilter',\n        chartDataType: 'series',\n    },\n    {\n        field: 'saleDate',\n        chartDataType: 'category',\n        filter: 'agSetColumnFilter',\n        filterParams: {\n            valueFormatter: (params: ValueFormatterParams) => `${params.value}`,\n        },\n    },\n    {\n        field: 'quarter',\n        maxWidth: 160,\n        filter: 'agSetColumnFilter',\n        chartDataType: 'category',\n    },\n];\npublic defaultColDef: ColDef = {\n    flex: 1,\n    editable: true,\n    filter: 'agMultiColumnFilter',\n    floatingFilter: true,\n};\npublic chartThemeOverrides: AgChartThemeOverrides = {\n    bar: {\n        axes: {\n            category: {\n                label: {\n                    rotation: 0,\n                },\n            },\n        },\n    },\n};\npublic rowData!: any[];;\npublic themeClass: string = /** DARK MODE START **/document.documentElement?.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/;\n\n\n    onFirstDataRendered(params: FirstDataRenderedEvent) {\n    createQuarterlySalesChart(params.api);\n    createSalesByRefChart(params.api);\n    createHandsetSalesChart(params.api);\n}\n\nonGridReady(params: GridReadyEvent) {\n            /** DARK INTEGRATED START **/\n        const isInitialModeDark = (): boolean => {\n            const attr: string | null = document.documentElement.getAttribute('data-default-theme');\n            return attr ? attr.endsWith('-dark') : false;\n        };\n                  \n        // update chart themes based on dark mode status\n        const updateChartThemes = (isDark: boolean): void => {\n            const themes: string[] = ['ag-default', 'ag-material', 'ag-sheets', 'ag-polychroma', 'ag-vivid'];            \n            const currentThemes = params.api.getGridOption('chartThemes');    \n            const customTheme = currentThemes && currentThemes.some(theme => theme.startsWith('my-custom-theme'));\n            \n            let modifiedThemes: string[] = customTheme\n                ? (isDark ? ['my-custom-theme-dark', 'my-custom-theme-light'] : ['my-custom-theme-light', 'my-custom-theme-dark'])\n                : Array.from(new Set(themes.map((theme) => theme + (isDark ? '-dark' : ''))));                      \n\n            // updating the 'chartThemes' grid option will cause the chart to reactively update!\n            params.api.setGridOption('chartThemes', modifiedThemes);\n        };\n        \n        // update chart themes when example first loads\n        updateChartThemes(isInitialModeDark());\n                      \n        interface ColorSchemeChangeEventDetail {\n            darkMode: boolean;\n        }\n        \n        // event handler for color scheme changes\n        const handleColorSchemeChange = (event: CustomEvent<ColorSchemeChangeEventDetail>): void => {\n            const { darkMode } = event.detail;\n            updateChartThemes(darkMode);\n        }\n        \n        // listen for user-triggered dark mode changes (not removing listener is fine here!)\n        document.addEventListener('color-scheme-change', handleColorSchemeChange as EventListener);                \n    /** DARK INTEGRATED END **/ \n            \n\n        \n    getData().then((rowData) => params.api.setGridOption('rowData', rowData));\n\n        }\n}\n\n\n\nfunction createQuarterlySalesChart(api: GridApi) {\n    api.createCrossFilterChart({\n        chartType: 'column',\n        cellRange: {\n            columns: ['quarter', 'sale'],\n        },\n        aggFunc: 'sum',\n        chartThemeOverrides: {\n            common: {\n                title: {\n                    enabled: true,\n                    text: 'Quarterly Sales ($)',\n                },\n                legend: { enabled: false },\n                axes: {\n                    category: {\n                        label: {\n                            rotation: 0,\n                        },\n                    },\n                    number: {\n                        label: {\n                            formatter: (params: any) => {\n                                return params.value / 1000 + 'k';\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        chartContainer: document.querySelector('#columnChart') as any,\n    });\n}\nfunction createSalesByRefChart(api: GridApi) {\n    api.createCrossFilterChart({\n        chartType: 'pie',\n        cellRange: {\n            columns: ['salesRep', 'sale'],\n        },\n        aggFunc: 'sum',\n        chartThemeOverrides: {\n            common: {\n                title: {\n                    enabled: true,\n                    text: 'Sales by Representative ($)',\n                },\n            },\n            pie: {\n                series: {\n                    title: {\n                        enabled: false,\n                    },\n                    calloutLabel: {\n                        enabled: false,\n                    },\n                },\n                legend: {\n                    position: 'right',\n                },\n            },\n        },\n        chartContainer: document.querySelector('#pieChart') as any,\n    });\n}\nfunction createHandsetSalesChart(api: GridApi) {\n    api.createCrossFilterChart({\n        chartType: 'bar',\n        cellRange: {\n            columns: ['handset', 'sale'],\n        },\n        aggFunc: 'count',\n        chartThemeOverrides: {\n            common: {\n                title: {\n                    enabled: true,\n                    text: 'Handsets Sold (Units)',\n                },\n                legend: { enabled: false },\n            },\n        },\n        chartContainer: document.querySelector('#barChart') as any,\n    });\n}\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","main.ts":"import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent);\n","systemjs.config.dev.js":"(function (global) {\n    var ANGULAR_VERSION = '^17';\n    window.ENABLE_PROD_MODE = false;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            '@ag-grid-community/angular': {\n                main: './fesm2022/ag-grid-community-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n","systemjs.config.js":"(function (global) {\n    var ANGULAR_VERSION = '^17';\n    window.ENABLE_PROD_MODE = true;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            '@ag-grid-community/angular': {\n                main: './fesm2022/ag-grid-community-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-modules","dependencies":{"@angular/core":"^17","@angular/common":"^17","@angular/forms":"^17","@angular/platform-browser":"^17","@ag-grid-community/angular":"^31.3.1","@ag-grid-community/core":"^31.3.1","@ag-grid-community/styles":"^31.3.1","@ag-grid-community/client-side-row-model":"^31.3.1","@ag-grid-community/infinite-row-model":"^31.3.1","@ag-grid-community/csv-export":"^31.3.1","@ag-grid-enterprise/core":"^31.3.1","@ag-grid-enterprise/charts-enterprise":"^31.3.1","@ag-grid-enterprise/sparklines":"^31.3.1","@ag-grid-enterprise/clipboard":"^31.3.1","@ag-grid-enterprise/column-tool-panel":"^31.3.1","@ag-grid-enterprise/excel-export":"^31.3.1","@ag-grid-enterprise/filter-tool-panel":"^31.3.1","@ag-grid-enterprise/master-detail":"^31.3.1","@ag-grid-enterprise/menu":"^31.3.1","@ag-grid-enterprise/range-selection":"^31.3.1","@ag-grid-enterprise/rich-select":"^31.3.1","@ag-grid-enterprise/row-grouping":"^31.3.1","@ag-grid-enterprise/server-side-row-model":"^31.3.1","@ag-grid-enterprise/set-filter":"^31.3.1","@ag-grid-enterprise/multi-filter":"^31.3.1","@ag-grid-enterprise/advanced-filter":"^31.3.1","@ag-grid-enterprise/side-bar":"^31.3.1","@ag-grid-enterprise/status-bar":"^31.3.1","@ag-grid-enterprise/viewport-row-model":"^31.3.1"}}}