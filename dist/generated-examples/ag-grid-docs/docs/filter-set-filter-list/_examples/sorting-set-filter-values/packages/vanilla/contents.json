{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"var filterParams = {\n    comparator: (a, b) => {\n        var valA = a == null ? 0 : parseInt(a);\n        var valB = b == null ? 0 : parseInt(b);\n        if (valA === valB) return 0;\n        return valA > valB ? 1 : -1;\n    },\n};\n\nlet gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        {\n            headerName: 'Age (No Comparator)',\n            field: 'age',\n            filter: 'agSetColumnFilter',\n        },\n        {\n            headerName: 'Age (With Comparator)',\n            field: 'age',\n            filter: 'agSetColumnFilter',\n            filterParams: filterParams,\n        },\n    ],\n    defaultColDef: {\n        flex: 1,\n        filter: true,\n        cellDataType: false,\n    },\n    rowData: getRowData(),\n    sideBar: 'filters',\n    onGridReady: (params) => {\n        params.api.getToolPanelInstance('filters').expandFilters();\n    },\n};\n\nfunction getRowData() {\n    var rows = [];\n    for (var i = 1; i < 117; i++) {\n        rows.push({ age: i });\n    }\n    return rows;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n});\n","index.html":"<div id=\"myGrid\" class=\"ag-theme-quartz\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}