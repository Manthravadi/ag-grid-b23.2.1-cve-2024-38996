{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["style.css"],"files":{"style.css":".chart-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 410px;\n    overflow: hidden;\n    margin-top: 0.5rem;\n    border: 1px solid var(--ag-border-color);\n}\n\n.chart-wrapper-top {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\n.chart-wrapper-body {\n    border-top: 1px solid var(--ag-border-color);\n    height: 100%;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        { field: 'athlete', width: 150, chartDataType: 'category' },\n        { field: 'gold', chartDataType: 'series' },\n        { field: 'silver', chartDataType: 'series' },\n        { field: 'bronze', chartDataType: 'series' },\n        { field: 'total', chartDataType: 'series' },\n    ],\n    defaultColDef: { flex: 1 },\n    enableRangeSelection: true,\n    enableCharts: true,\n    popupParent: document.body,\n    createChartContainer,\n};\n\n// Function for creating the chart container\nfunction createChartContainer(chartRef) {\n    const eChart = chartRef.chartElement;\n    const themeName = document.documentElement?.getAttribute('data-default-theme') || 'ag-theme-quartz';\n    const eParent = document.querySelector('#container') ;\n\n    const chartWrapperHTML = `\n    <div class=\"chart-wrapper ${themeName}\">\n      <div class=\"chart-wrapper-top\">\n        <h2 class=\"chart-wrapper-title\">Chart created ${getFormattedDate()}</h2>\n        <button class=\"chart-wrapper-close\">Destroy Chart</button>\n      </div>\n      <div class=\"chart-wrapper-body\"></div>\n    </div>\n  `;\n\n    eParent.insertAdjacentHTML('beforeend', chartWrapperHTML);\n    const eChartWrapper = eParent.lastElementChild ;\n\n    eChartWrapper.querySelector('.chart-wrapper-body').appendChild(eChart);\n    eChartWrapper.querySelector('.chart-wrapper-close').addEventListener('click', () => {\n        chartRef.destroyChart();\n        eParent.removeChild(eChartWrapper);\n    });\n}\n\nfunction getFormattedDate() {\n    return new Intl.DateTimeFormat('en', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        hour12: true,\n        timeZone: 'UTC',\n    }).format(new Date());\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); /** DARK INTEGRATED START **/\n    const isInitialModeDark = () => {\n            const attr = document.documentElement.getAttribute('data-default-theme');\n            return attr ? attr.endsWith('-dark') : false;\n        };\n      \n        const updateChartThemes = (isDark) => {           \n            const themes = ['ag-default', 'ag-material', 'ag-sheets', 'ag-polychroma', 'ag-vivid'];            \n            const currentThemes = gridApi.getGridOption('chartThemes');                    \n            const customTheme = currentThemes && currentThemes.some(theme => theme.startsWith('my-custom-theme'));\n            \n            let modifiedThemes = customTheme\n                ? (isDark ? ['my-custom-theme-dark', 'my-custom-theme-light'] : ['my-custom-theme-light', 'my-custom-theme-dark'])\n                : Array.from(new Set(themes.map((theme) => theme + (isDark ? '-dark' : ''))));                      \n\n            // updating the 'chartThemes' grid option will cause the chart to reactively update!\n            gridApi.setGridOption('chartThemes', modifiedThemes);\n        };\n\n        // update chart themes when example first loads\n        updateChartThemes(isInitialModeDark());\n\n        const handleColorSchemeChange = (event) => {\n            const { darkMode } = event.detail;\n            updateChartThemes(darkMode);\n        }\n\n        // listen for user-triggered dark mode changes (not removing listener is fine here!)\n        document.addEventListener('color-scheme-change', handleColorSchemeChange);\n    /** DARK INTEGRATED END **/\n\n    fetch('https://www.ag-grid.com/example-assets/wide-spread-of-sports.json')\n        .then((response) => response.json())\n        .then(function (data) {\n            gridApi.setGridOption('rowData', data);\n        });\n});\n","index.html":"<div id=\"container\">\n    <div id=\"myGrid\" style=\"height: 300px\" class=\"ag-theme-quartz\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}