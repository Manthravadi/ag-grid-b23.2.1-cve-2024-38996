{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","styleFiles":[],"files":{"style.css":".ag-row-level-0 {\n    font-weight: bold;\n}\n\n.number-cell {\n    text-align: right;\n}\n\n.parent-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.top-container button {\n    margin-bottom: 4px;\n    margin-right: 4px;\n}\n\n.center-container {\n    min-height: 10px;\n    flex: 1 1 auto;\n}\n","main.js":"\nimport { createApp, onBeforeMount, ref, shallowRef } from 'vue';\nimport { AgGridVue } from '@ag-grid-community/vue3';\nimport '@ag-grid-community/styles/ag-grid.css';\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nimport './style.css';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { ModuleRegistry } from '@ag-grid-community/core';\nimport { RowGroupingModule } from '@ag-grid-enterprise/row-grouping';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nModuleRegistry.registerModules([ClientSideRowModelModule, RowGroupingModule, SetFilterModule]);\n\n\n\nconst VueExample = {\n    template: `\n        <div style=\"height: 100%\">\n                <div class=\"parent-container\">\n      <div class=\"top-container\">\n        <button v-on:click=\"updateOneRecord()\">Update One Value</button>\n        <button v-on:click=\"updateUsingTransaction()\">Update Using Transaction</button>\n        <button v-on:click=\"removeUsingTransaction()\">Remove Using Transaction</button>\n        <button v-on:click=\"addUsingTransaction()\">Add Using Transaction</button>\n        <button v-on:click=\"changeGroupUsingTransaction()\">Change Group Using Transaction</button>\n      </div>\n      <div class=\"center-container\">\n        <ag-grid-vue\n          style=\"width: 100%; height: 100%;\"\n          :class=\"themeClass\"\n          :columnDefs=\"columnDefs\"\n          @grid-ready=\"onGridReady\"\n          :defaultColDef=\"defaultColDef\"\n          :autoGroupColumnDef=\"autoGroupColumnDef\"\n          :columnTypes=\"columnTypes\"\n          :aggregateOnlyChangedColumns=\"true\"\n          :aggFuncs=\"aggFuncs\"\n          :groupDefaultExpanded=\"groupDefaultExpanded\"\n          :suppressAggFuncInHeader=\"true\"\n          :getRowId=\"getRowId\"></ag-grid-vue>\n        </div>\n      </div>\n        </div>\n    `,\n    components: {\n        'ag-grid-vue': AgGridVue,\n        \n    },\n    setup(props) {\n        const columnDefs = ref([{field:\"topGroup\",\nrowGroup:true,\nhide:true},{field:\"group\",\nrowGroup:true,\nhide:true},{headerName:\"ID\",\nfield:\"id\",\ncellClass:\"number-cell\",\nmaxWidth:70},{field:\"a\",\ntype:\"valueColumn\"},{field:\"b\",\ntype:\"valueColumn\"},{field:\"c\",\ntype:\"valueColumn\"},{field:\"d\",\ntype:\"valueColumn\"},{headerName:\"Total\",\ntype:\"totalColumn\",\nminWidth:120,\nvalueGetter:\"getValue('a') + getValue('b') + getValue('c') + getValue('d')\"}]);\n        const gridApi = shallowRef();\n        const defaultColDef = ref({\n    flex: 1,\n});\n        const autoGroupColumnDef = ref(null);\nconst columnTypes = ref(null);\nconst aggFuncs = ref(null);\nconst groupDefaultExpanded = ref(null);\nconst getRowId = ref(null)\n        \n        onBeforeMount(() => {\n            autoGroupColumnDef.value = {\n    minWidth: 180,\n};\ncolumnTypes.value = {\n    valueColumn: {\n        minWidth: 90,\n        editable: true,\n        aggFunc: 'sum',\n        cellClass: 'number-cell',\n        cellRenderer: 'agAnimateShowChangeCellRenderer',\n        filter: 'agNumberColumnFilter',\n        valueParser: numberValueParser,\n    },\n    totalColumn: {\n        cellRenderer: 'agAnimateShowChangeCellRenderer',\n        cellClass: 'number-cell',\n    },\n};\naggFuncs.value = {\n    sum: (params) => {\n        var values = params && params.values ? params.values : [];\n        var result = 0;\n        if (values) {\n            values.forEach((value) => {\n                if (typeof value === 'number') {\n                    result += value;\n                }\n            });\n        }\n        callCount++;\n        console.log(callCount + ' aggregation: sum([' + values.join(',') + ']) = ' + result);\n        return result;\n    },\n};\ngroupDefaultExpanded.value = 1;\ngetRowId.value = (params) => String(params.data.id)            \n        });\n        \n        const updateOneRecord = () => {\n    var rowNodeToUpdate = pickExistingRowNodeAtRandom(gridApi.value);\n    if (!rowNodeToUpdate)\n        return;\n    var randomValue = createRandomNumber();\n    var randomColumnId = pickRandomColumn();\n    console.log('updating ' + randomColumnId + ' to ' + randomValue + ' on ', rowNodeToUpdate.data);\n    rowNodeToUpdate.setDataValue(randomColumnId, randomValue);\n};\nconst updateUsingTransaction = () => {\n    var itemToUpdate = pickExistingRowItemAtRandom(gridApi.value);\n    if (!itemToUpdate) {\n        return;\n    }\n    console.log('updating - before', itemToUpdate);\n    itemToUpdate[pickRandomColumn()] = createRandomNumber();\n    itemToUpdate[pickRandomColumn()] = createRandomNumber();\n    var transaction = {\n        update: [itemToUpdate],\n    };\n    console.log('updating - after', itemToUpdate);\n    gridApi.value.applyTransaction(transaction);\n};\nconst removeUsingTransaction = () => {\n    var itemToRemove = pickExistingRowItemAtRandom(gridApi.value);\n    if (!itemToRemove) {\n        return;\n    }\n    var transaction = {\n        remove: [itemToRemove],\n    };\n    console.log('removing', itemToRemove);\n    gridApi.value.applyTransaction(transaction);\n};\nconst addUsingTransaction = () => {\n    var i = Math.floor(Math.random() * 2);\n    var j = Math.floor(Math.random() * 5);\n    var k = Math.floor(Math.random() * 3);\n    var newItem = createRowItem(i, j, k);\n    var transaction = {\n        add: [newItem],\n    };\n    console.log('adding', newItem);\n    gridApi.value.applyTransaction(transaction);\n};\nconst changeGroupUsingTransaction = () => {\n    var itemToUpdate = pickExistingRowItemAtRandom(gridApi.value);\n    if (!itemToUpdate) {\n        return;\n    }\n    itemToUpdate.topGroup = itemToUpdate.topGroup === 'Top' ? 'Bottom' : 'Top';\n    var transaction = {\n        update: [itemToUpdate],\n    };\n    console.log('updating', itemToUpdate);\n    gridApi.value.applyTransaction(transaction);\n};\nconst onGridReady = (params) => {\n        \n        gridApi.value = params.api;\n        \n\n        \n    params.api.setGridOption('rowData', createRowData());\n\n    };\n                \n        return {\n            columnDefs,\n            gridApi,\n            defaultColDef,\nautoGroupColumnDef,\ncolumnTypes,\naggFuncs,\ngroupDefaultExpanded,\ngetRowId,\n            onGridReady,\n            themeClass: /** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/,\n            updateOneRecord,\nupdateUsingTransaction,\nremoveUsingTransaction,\naddUsingTransaction,\nchangeGroupUsingTransaction\n        }        \n    }\n}\n\nwindow.createRowData = function createRowData() {\n    var result = [];\n    for (var i = 1; i <= 2; i++) {\n        for (var j = 1; j <= 5; j++) {\n            for (var k = 1; k <= 3; k++) {\n                var rowDataItem = createRowItem(i, j, k);\n                result.push(rowDataItem);\n            }\n        }\n    }\n    return result;\n}\n\nwindow.createRowItem = function createRowItem(i, j, k) {\n    var rowDataItem = {\n        id: rowIdCounter++,\n        a: (j * k * 863) % 100,\n        b: (j * k * 811) % 100,\n        c: (j * k * 743) % 100,\n        d: (j * k * 677) % 100,\n        topGroup: 'Bottom',\n        group: 'Group B' + j,\n    };\n    if (i === 1) {\n        rowDataItem.topGroup = 'Top';\n        rowDataItem.group = 'Group A' + j;\n    }\n    return rowDataItem;\n}\n\nwindow.numberValueParser = // converts strings to numbers\nfunction numberValueParser(params) {\n    console.log('=> updating to ' + params.newValue);\n    return Number(params.newValue);\n}\n\nwindow.pickRandomColumn = function pickRandomColumn() {\n    var letters = ['a', 'b', 'c', 'd'];\n    var randomIndex = Math.floor(Math.random() * letters.length);\n    return letters[randomIndex];\n}\n\nwindow.createRandomNumber = function createRandomNumber() {\n    return Math.floor(Math.random() * 100);\n}\n\nwindow.pickExistingRowItemAtRandom = function pickExistingRowItemAtRandom(api) {\n    var rowNode = pickExistingRowNodeAtRandom(api);\n    return rowNode ? rowNode.data : null;\n}\n\nwindow.pickExistingRowNodeAtRandom = function pickExistingRowNodeAtRandom(api) {\n    var allItems = [];\n    api.forEachLeafNode(function (rowNode) {\n        allItems.push(rowNode);\n    });\n    if (allItems.length === 0) {\n        return undefined;\n    }\n    var result = allItems[Math.floor(Math.random() * allItems.length)];\n    return result;\n}\n\nvar rowIdCounter = 0;\n\nvar callCount = 0;\n\ncreateApp(VueExample)\n    .mount(\"#app\")\n\n","index.html":"<div class=\"parent-container\">\n    <div class=\"top-container\">\n        <button onclick=\"updateOneRecord()\">Update One Value</button>\n        <button onclick=\"updateUsingTransaction()\">Update Using Transaction</button>\n        <button onclick=\"removeUsingTransaction()\">Remove Using Transaction</button>\n        <button onclick=\"addUsingTransaction()\">Add Using Transaction</button>\n        <button onclick=\"changeGroupUsingTransaction()\">Change Group Using Transaction</button>\n    </div>\n    <div class=\"center-container\">\n        <div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n    </div>\n</div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n    var sjsPaths = {};\n    if (typeof systemJsPaths !== 'undefined') {\n        sjsPaths = systemJsPaths;\n    }\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...sjsPaths,\n        },\n        map: {\n            css: 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.2.29/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.js',\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            vue: {\n                defaultExtension: 'js',\n            },\n            'vue-class-component': {\n                defaultExtension: 'js',\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'js',\n            },\n            '@ag-grid-community/vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.2.29/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            vue: {\n                defaultExtension: 'js',\n            },\n            'vue-class-component': {\n                defaultExtension: 'js',\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'js',\n            },\n            '@ag-grid-community/vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"}}