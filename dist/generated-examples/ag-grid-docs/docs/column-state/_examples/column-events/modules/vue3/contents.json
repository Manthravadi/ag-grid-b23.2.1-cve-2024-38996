{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","styleFiles":[],"files":{"styles.css":".test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 0.5rem;\n}\n\n.test-header .example-section {\n    margin-bottom: 0.5rem;\n}\n\n.test-button-group {\n    display: inline-block;\n    margin-right: 20px;\n    margin-bottom: 10px;\n}\n\n.test-button-group button {\n    margin: 4px;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n}\n","main.js":"\nimport { createApp, onBeforeMount, ref, shallowRef } from 'vue';\nimport { AgGridVue } from '@ag-grid-community/vue3';\nimport '@ag-grid-community/styles/ag-grid.css';\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nimport './styles.css';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { ModuleRegistry } from '@ag-grid-community/core';\nimport { RowGroupingModule } from '@ag-grid-enterprise/row-grouping';\nModuleRegistry.registerModules([ClientSideRowModelModule, RowGroupingModule]);\n\n\n\nconst VueExample = {\n    template: `\n        <div style=\"height: 100%\">\n                <div class=\"test-container\">\n      <div class=\"test-header\">\n        <div class=\"test-button-row\">\n          <div class=\"test-button-group\">\n            <button v-on:click=\"onBtSortOn()\">Sort On</button>\n            <br />\n            <button v-on:click=\"onBtSortOff()\">Sort Off</button>\n          </div>\n          <div class=\"test-button-group\">\n            <button v-on:click=\"onBtWidthNarrow()\">Width Narrow</button>\n            <br />\n            <button v-on:click=\"onBtWidthNormal()\">Width Normal</button>\n          </div>\n          <div class=\"test-button-group\">\n            <button v-on:click=\"onBtHide()\">Hide Cols</button>\n            <br />\n            <button v-on:click=\"onBtShow()\">Show Cols</button>\n          </div>\n          <div class=\"test-button-group\">\n            <button v-on:click=\"onBtReverseOrder()\">Reverse Medal Order</button>\n            <br />\n            <button v-on:click=\"onBtNormalOrder()\">Normal Medal Order</button>\n          </div>\n          <div class=\"test-button-group\">\n            <button v-on:click=\"onBtRowGroupOn()\">Row Group On</button>\n            <br />\n            <button v-on:click=\"onBtRowGroupOff()\">Row Group Off</button>\n          </div>\n          <div class=\"test-button-group\">\n            <button v-on:click=\"onBtAggFuncOn()\">Agg Func On</button>\n            <br />\n            <button v-on:click=\"onBtAggFuncOff()\">Agg Func Off</button>\n          </div>\n          <div class=\"test-button-group\">\n            <button v-on:click=\"onBtPivotOn()\">Pivot On</button>\n            <br />\n            <button v-on:click=\"onBtPivotOff()\">Pivot Off</button>\n          </div>\n          <div class=\"test-button-group\">\n            <button v-on:click=\"onBtPinnedOn()\">Pinned On</button>\n            <br />\n            <button v-on:click=\"onBtPinnedOff()\">Pinned Off</button>\n          </div>\n        </div>\n      </div>\n      <ag-grid-vue\n        style=\"width: 100%; height: 100%;\"\n        :class=\"themeClass\"\n        :columnDefs=\"columnDefs\"\n        @grid-ready=\"onGridReady\"\n        :defaultColDef=\"defaultColDef\"\n        :rowData=\"rowData\"\n        @sort-changed=\"onSortChanged\"\n        @column-resized=\"onColumnResized\"\n        @column-visible=\"onColumnVisible\"\n        @column-pivot-changed=\"onColumnPivotChanged\"\n        @column-row-group-changed=\"onColumnRowGroupChanged\"\n        @column-value-changed=\"onColumnValueChanged\"\n        @column-moved=\"onColumnMoved\"\n        @column-pinned=\"onColumnPinned\"></ag-grid-vue>\n      </div>\n        </div>\n    `,\n    components: {\n        'ag-grid-vue': AgGridVue,\n        \n    },\n    setup(props) {\n        const columnDefs = ref([{field:\"athlete\"},{field:\"age\"},{field:\"country\"},{field:\"sport\"},{field:\"gold\"},{field:\"silver\"},{field:\"bronze\"}]);\n        const gridApi = shallowRef();\n        const defaultColDef = ref({\n    width: 150,\n    enableRowGroup: true,\n    enablePivot: true,\n    enableValue: true,\n});\n        const rowData = ref(null)\n        \n        onBeforeMount(() => {\n                        \n        });\n        \n        const onSortChanged = (e) => {\n    console.log('Event Sort Changed', e);\n};\nconst onColumnResized = (e) => {\n    console.log('Event Column Resized', e);\n};\nconst onColumnVisible = (e) => {\n    console.log('Event Column Visible', e);\n};\nconst onColumnPivotChanged = (e) => {\n    console.log('Event Pivot Changed', e);\n};\nconst onColumnRowGroupChanged = (e) => {\n    console.log('Event Row Group Changed', e);\n};\nconst onColumnValueChanged = (e) => {\n    console.log('Event Value Changed', e);\n};\nconst onColumnMoved = (e) => {\n    console.log('Event Column Moved', e);\n};\nconst onColumnPinned = (e) => {\n    console.log('Event Column Pinned', e);\n};\nconst onBtSortOn = () => {\n    gridApi.value.applyColumnState({\n        state: [\n            { colId: 'age', sort: 'desc' },\n            { colId: 'athlete', sort: 'asc' },\n        ],\n    });\n};\nconst onBtSortOff = () => {\n    gridApi.value.applyColumnState({\n        defaultState: { sort: null },\n    });\n};\nconst onBtWidthNarrow = () => {\n    gridApi.value.applyColumnState({\n        state: [\n            { colId: 'age', width: 100 },\n            { colId: 'athlete', width: 100 },\n        ],\n    });\n};\nconst onBtWidthNormal = () => {\n    gridApi.value.applyColumnState({\n        state: [\n            { colId: 'age', width: 200 },\n            { colId: 'athlete', width: 200 },\n        ],\n    });\n};\nconst onBtHide = () => {\n    gridApi.value.applyColumnState({\n        state: [\n            { colId: 'age', hide: true },\n            { colId: 'athlete', hide: true },\n        ],\n    });\n};\nconst onBtShow = () => {\n    gridApi.value.applyColumnState({\n        defaultState: { hide: false },\n    });\n};\nconst onBtPivotOn = () => {\n    gridApi.value.setGridOption('pivotMode', true);\n    gridApi.value.applyColumnState({\n        state: [{ colId: 'country', pivot: true }],\n    });\n};\nconst onBtPivotOff = () => {\n    gridApi.value.setGridOption('pivotMode', false);\n    gridApi.value.applyColumnState({\n        defaultState: { pivot: false },\n    });\n};\nconst onBtRowGroupOn = () => {\n    gridApi.value.applyColumnState({\n        state: [{ colId: 'sport', rowGroup: true }],\n    });\n};\nconst onBtRowGroupOff = () => {\n    gridApi.value.applyColumnState({\n        defaultState: { rowGroup: false },\n    });\n};\nconst onBtAggFuncOn = () => {\n    gridApi.value.applyColumnState({\n        state: [\n            { colId: 'gold', aggFunc: 'sum' },\n            { colId: 'silver', aggFunc: 'sum' },\n            { colId: 'bronze', aggFunc: 'sum' },\n        ],\n    });\n};\nconst onBtAggFuncOff = () => {\n    gridApi.value.applyColumnState({\n        defaultState: { aggFunc: null },\n    });\n};\nconst onBtNormalOrder = () => {\n    gridApi.value.applyColumnState({\n        state: [\n            { colId: 'athlete' },\n            { colId: 'age' },\n            { colId: 'country' },\n            { colId: 'sport' },\n            { colId: 'gold' },\n            { colId: 'silver' },\n            { colId: 'bronze' },\n        ],\n        applyOrder: true,\n    });\n};\nconst onBtReverseOrder = () => {\n    gridApi.value.applyColumnState({\n        state: [\n            { colId: 'athlete' },\n            { colId: 'age' },\n            { colId: 'country' },\n            { colId: 'sport' },\n            { colId: 'bronze' },\n            { colId: 'silver' },\n            { colId: 'gold' },\n        ],\n        applyOrder: true,\n    });\n};\nconst onBtPinnedOn = () => {\n    gridApi.value.applyColumnState({\n        state: [\n            { colId: 'athlete', pinned: 'left' },\n            { colId: 'age', pinned: 'right' },\n        ],\n    });\n};\nconst onBtPinnedOff = () => {\n    gridApi.value.applyColumnState({\n        defaultState: { pinned: null },\n    });\n};\nconst onGridReady = (params) => {\n        \n        gridApi.value = params.api;\n        \n\n        \n            const updateData = (data) => rowData.value = data;\n            \n            fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n                .then(resp => resp.json())\n                .then(data => updateData(data));\n    };\n                \n        return {\n            columnDefs,\n            gridApi,\n            defaultColDef,\nrowData,\n            onGridReady,\n            themeClass: /** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/,\n            onSortChanged,\nonColumnResized,\nonColumnVisible,\nonColumnPivotChanged,\nonColumnRowGroupChanged,\nonColumnValueChanged,\nonColumnMoved,\nonColumnPinned,\nonBtSortOn,\nonBtSortOff,\nonBtWidthNarrow,\nonBtWidthNormal,\nonBtHide,\nonBtShow,\nonBtPivotOn,\nonBtPivotOff,\nonBtRowGroupOn,\nonBtRowGroupOff,\nonBtAggFuncOn,\nonBtAggFuncOff,\nonBtNormalOrder,\nonBtReverseOrder,\nonBtPinnedOn,\nonBtPinnedOff\n        }        \n    }\n}\n\n\n\ncreateApp(VueExample)\n    .mount(\"#app\")\n\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <div class=\"test-button-row\">\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtSortOn()\">Sort On</button>\n                <br />\n                <button onclick=\"onBtSortOff()\">Sort Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtWidthNarrow()\">Width Narrow</button>\n                <br />\n                <button onclick=\"onBtWidthNormal()\">Width Normal</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtHide()\">Hide Cols</button>\n                <br />\n                <button onclick=\"onBtShow()\">Show Cols</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtReverseOrder()\">Reverse Medal Order</button>\n                <br />\n                <button onclick=\"onBtNormalOrder()\">Normal Medal Order</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtRowGroupOn()\">Row Group On</button>\n                <br />\n                <button onclick=\"onBtRowGroupOff()\">Row Group Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtAggFuncOn()\">Agg Func On</button>\n                <br />\n                <button onclick=\"onBtAggFuncOff()\">Agg Func Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtPivotOn()\">Pivot On</button>\n                <br />\n                <button onclick=\"onBtPivotOff()\">Pivot Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtPinnedOn()\">Pinned On</button>\n                <br />\n                <button onclick=\"onBtPinnedOff()\">Pinned Off</button>\n            </div>\n        </div>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n    var sjsPaths = {};\n    if (typeof systemJsPaths !== 'undefined') {\n        sjsPaths = systemJsPaths;\n    }\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...sjsPaths,\n        },\n        map: {\n            css: 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.2.29/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.js',\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            vue: {\n                defaultExtension: 'js',\n            },\n            'vue-class-component': {\n                defaultExtension: 'js',\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'js',\n            },\n            '@ag-grid-community/vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.2.29/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            vue: {\n                defaultExtension: 'js',\n            },\n            'vue-class-component': {\n                defaultExtension: 'js',\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'js',\n            },\n            '@ag-grid-community/vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"}}