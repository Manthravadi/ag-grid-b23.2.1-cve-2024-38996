{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","simpleCellRenderer.js","main.js"],"styleFiles":[],"files":{"data.js":"function getData() {\n    const rowData = [];\n\n    const irelandCities = ['Dublin', 'Galway', 'Cork'];\n    const ukCities = ['London', 'Bristol', 'Manchester', 'Liverpool'];\n    const usaCities = ['New York', 'Boston', 'L.A.', 'San Fransisco', 'Detroit'];\n    const middleEarthCities = ['The Shire', 'Rohan', 'Rivendell', 'Mordor'];\n    const midkemiaCities = ['Darkmoor', 'Crydee', 'Elvandar', 'LaMut', 'Ylith'];\n\n    const addCity = function (country, type, city) {\n        rowData.push({ country: country, type: type, city: city });\n    };\n\n    irelandCities.forEach(addCity.bind(null, 'Ireland', 'Non Fiction'));\n    ukCities.forEach(addCity.bind(null, 'United Kingdom', 'Non Fiction'));\n    usaCities.forEach(addCity.bind(null, 'USA Cities', 'Non Fiction'));\n    middleEarthCities.forEach(addCity.bind(null, 'Middle Earth', 'Fiction'));\n    midkemiaCities.forEach(addCity.bind(null, 'Midkemia', 'Fiction'));\n\n    return rowData;\n}\n","simpleCellRenderer.js":"\nclass SimpleCellRenderer  {\n    eGui;\n\n    init(params) {\n        const tempDiv = document.createElement('div');\n        const color = params.node.group ? '#CC222244' : '#33CC3344';\n        tempDiv.innerHTML = `<span style=\"background-color: ${color}; padding: 2px; \">${params.value}</span>`;\n        this.eGui = tempDiv.firstChild;\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh(params) {\n        return false;\n    }\n}\n","main.js":"const columnDefs = [\n    // this column shows just the country group values, but has no group renderer, so there is no expand / collapse functionality.\n    {\n        headerName: 'Country Group - No Renderer',\n        showRowGroup: 'country',\n        minWidth: 250,\n    },\n\n    // same as before, but we show all group values, again with no cell renderer\n    { headerName: 'All Groups - No Renderer', showRowGroup: true, minWidth: 240 },\n\n    // add in a cell renderer\n    {\n        headerName: 'Group Renderer A',\n        showRowGroup: true,\n        cellRenderer: 'agGroupCellRenderer',\n        minWidth: 220,\n    },\n\n    // add in a field\n    {\n        headerName: 'Group Renderer B',\n        field: 'city',\n        showRowGroup: true,\n        cellRenderer: 'agGroupCellRenderer',\n        minWidth: 220,\n    },\n\n    // add in a cell renderer params\n    {\n        headerName: 'Group Renderer C',\n        field: 'city',\n        minWidth: 240,\n        showRowGroup: true,\n        cellRenderer: 'agGroupCellRenderer',\n        cellRendererParams: {\n            suppressCount: true,\n            checkbox: true,\n            innerRenderer: SimpleCellRenderer,\n            suppressDoubleClickExpand: true,\n            suppressEnterExpand: true,\n        } ,\n    },\n\n    { headerName: 'Type', field: 'type', rowGroup: true },\n    { headerName: 'Country', field: 'country', rowGroup: true },\n    { headerName: 'City', field: 'city' },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n    columnDefs: columnDefs,\n    defaultColDef: {\n        flex: 1,\n        minWidth: 120,\n    },\n    rowData: getData(),\n    // we don't want the auto column here, as we are providing our own cols\n    groupDisplayType: 'custom',\n    suppressRowClickSelection: true,\n    groupDefaultExpanded: 1,\n    rowSelection: 'multiple',\n    groupSelectsChildren: true,\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n});\n","index.html":"<style>\n    .align-right {\n        text-align: right;\n    }\n</style>\n\n<body>\n    <div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n</body>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}