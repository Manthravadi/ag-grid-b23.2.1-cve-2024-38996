{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        // colId will be 'firstCol'\n        { headerName: 'Col 1', colId: 'firstCol', field: 'height' },\n        // colId will be 'firstCol_1', cos 'firstCol' already taken\n        { headerName: 'Col 2', colId: 'firstCol', field: 'height' },\n\n        // colId will be 'height'\n        { headerName: 'Col 3', field: 'height' },\n        // colId will be 'height_1', cos 'height' already taken\n        { headerName: 'Col 4', field: 'height' },\n\n        // no colId, no field, so grid generated ID\n        { headerName: 'Col 5', valueGetter: 'data.width' },\n        { headerName: 'Col 6', valueGetter: 'data.width' },\n    ],\n    rowData: createRowData(),\n    onGridReady: (params) => {\n        var cols = params.api.getColumns();\n        cols.forEach((col) => {\n            var colDef = col.getColDef();\n            console.log(colDef.headerName + ', Column ID = ' + col.getId(), JSON.stringify(colDef));\n        });\n    },\n};\n\nfunction createRowData() {\n    var data = [];\n    for (var i = 0; i < 20; i++) {\n        data.push({\n            height: Math.floor(Math.random() * 100),\n            width: Math.floor(Math.random() * 100),\n            depth: Math.floor(Math.random() * 100),\n        });\n    }\n    return data;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n});\n","index.html":"<div style=\"height: 100%; box-sizing: border-box\">\n    <div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}