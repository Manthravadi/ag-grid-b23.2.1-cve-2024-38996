{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["style.css"],"files":{"style.css":"#myGrid {\n    flex: 1 1 auto;\n    overflow: hidden;\n    height: 40% !important;\n}\n\n#myChart {\n    flex: 1 1 auto;\n    overflow: hidden;\n    height: 60%;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        { field: 'country', pivot: true },\n        { field: 'year', rowGroup: true },\n        { field: 'sport', rowGroup: true },\n        { field: 'total', aggFunc: 'sum' },\n        { field: 'gold', aggFunc: 'sum' },\n    ],\n    defaultColDef: {\n        editable: true,\n        flex: 1,\n        minWidth: 150,\n        filter: true,\n    },\n    autoGroupColumnDef: {\n        minWidth: 150,\n    },\n    pivotMode: true,\n    onFirstDataRendered,\n    popupParent: document.body,\n};\n\nfunction onFirstDataRendered(params) {\n    params.api.createPivotChart({\n        chartType: 'groupedColumn',\n        chartContainer: document.querySelector('#myChart') ,\n        chartThemeOverrides: {\n            common: {\n                navigator: {\n                    enabled: true,\n                    height: 10,\n                },\n            },\n        },\n    });\n\n    // expand one row for demonstration purposes\n    setTimeout(() => params.api.getDisplayedRowAtIndex(2).setExpanded(true), 0);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); /** DARK INTEGRATED START **/\n    const isInitialModeDark = () => {\n            const attr = document.documentElement.getAttribute('data-default-theme');\n            return attr ? attr.endsWith('-dark') : false;\n        };\n      \n        const updateChartThemes = (isDark) => {           \n            const themes = ['ag-default', 'ag-material', 'ag-sheets', 'ag-polychroma', 'ag-vivid'];            \n            const currentThemes = gridApi.getGridOption('chartThemes');                    \n            const customTheme = currentThemes && currentThemes.some(theme => theme.startsWith('my-custom-theme'));\n            \n            let modifiedThemes = customTheme\n                ? (isDark ? ['my-custom-theme-dark', 'my-custom-theme-light'] : ['my-custom-theme-light', 'my-custom-theme-dark'])\n                : Array.from(new Set(themes.map((theme) => theme + (isDark ? '-dark' : ''))));                      \n\n            // updating the 'chartThemes' grid option will cause the chart to reactively update!\n            gridApi.setGridOption('chartThemes', modifiedThemes);\n        };\n\n        // update chart themes when example first loads\n        updateChartThemes(isInitialModeDark());\n\n        const handleColorSchemeChange = (event) => {\n            const { darkMode } = event.detail;\n            updateChartThemes(darkMode);\n        }\n\n        // listen for user-triggered dark mode changes (not removing listener is fine here!)\n        document.addEventListener('color-scheme-change', handleColorSchemeChange);\n    /** DARK INTEGRATED END **/\n\n    fetch('https://www.ag-grid.com/example-assets/wide-spread-of-sports.json')\n        .then((response) => response.json())\n        .then(function (data) {\n            gridApi.setGridOption('rowData', data);\n        });\n});\n","index.html":"<div style=\"display: flex; flex-direction: column; height: 100%; width: 100%; overflow: hidden\">\n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n    <div id=\"myChart\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}},"myGridReference":true}