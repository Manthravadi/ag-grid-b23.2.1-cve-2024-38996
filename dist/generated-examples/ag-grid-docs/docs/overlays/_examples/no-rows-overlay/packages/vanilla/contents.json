{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n    rowData: [],\n    columnDefs: [{ field: 'athlete' }, { field: 'country' }],\n};\n\nfunction onBtnClearRowData() {\n    gridApi.setGridOption('rowData', []);\n}\n\nfunction onBtnSetRowData() {\n    gridApi.setGridOption('rowData', [{ athlete: 'Michael Phelps', country: 'US' }]);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n});\n","index.html":"<div class=\"example-wrapper\">\n    <div>\n        <button onclick=\"onBtnClearRowData()\">Clear rowData</button>\n        <button onclick=\"onBtnSetRowData()\">Set rowData</button>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}