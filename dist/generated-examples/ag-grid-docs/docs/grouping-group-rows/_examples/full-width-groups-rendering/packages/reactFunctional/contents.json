{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"index.jsx","mainFileName":"index.jsx","styleFiles":[],"files":{"style.css":"/* enable row hover for full width rows, since it is not applied by default */\n.ag-full-width-row.ag-row-hover {\n    background-color: var(--ag-row-hover-color);\n}\n\n.groupTitle {\n    font-size: 16px;\n    font-weight: bold;\n}\n.medal {\n    margin: 0 5px;\n}\n.gold {\n    color: #e4ab11;\n}\n.silver {\n    color: #bbb4bb;\n}\n.bronze {\n    color: #be9088;\n}\n.flag {\n    margin: 0 4px;\n    position: relative;\n    top: 2px;\n}\n","groupRowInnerRenderer.jsx":"import React, { useEffect, useState } from 'react';\n\nexport default (props) => {\n    const node = props.node;\n    const aggData = node.aggData;\n    const flagCode = props.flagCodes[node.key];\n\n    const [flagCodeImg, setFlagCodeImg] = useState(`https://flags.fmcdn.net/data/flags/mini/${flagCode}.png`);\n    const [countryName, setCountryName] = useState(node.key);\n    const [goldCount, setGoldCount] = useState(aggData.gold);\n    const [silverCount, setSilverCount] = useState(aggData.silver);\n    const [bronzeCount, setBronzeCount] = useState(aggData.bronze);\n\n    const refreshUi = () => {\n        const node = props.node;\n        const aggData = node.aggData;\n        const flagCode = props.flagCodes[node.key];\n\n        setFlagCodeImg(`https://flags.fmcdn.net/data/flags/mini/${flagCode}.png`);\n        setCountryName(node.key);\n        setGoldCount(aggData.gold);\n        setSilverCount(aggData.silver);\n        setBronzeCount(aggData.bronze);\n    };\n\n    const dataChangedListener = () => refreshUi();\n\n    useEffect(() => {\n        props.api.addEventListener('cellValueChanged', dataChangedListener);\n        props.api.addEventListener('filterChanged', dataChangedListener);\n\n        return () => {\n            if (!props.api.isDestroyed()) {\n                props.api.removeEventListener('cellValueChanged', dataChangedListener);\n                props.api.removeEventListener('filterChanged', dataChangedListener);\n            }\n        };\n    }, []);\n\n    let img = '';\n    if (flagCode) {\n        img = <img className=\"flag\" border=\"0\" width=\"20\" height=\"15\" src={flagCodeImg} />;\n    }\n\n    return (\n        <div style={{ display: 'inline-block' }}>\n            {img}\n            <span className=\"groupTitle\">{countryName}</span>\n            <span className=\"medal gold\" aria-label={`${countryName} - ${goldCount} gold medals`}>\n                <i className=\"fas fa-medal\"></i>\n                {goldCount}\n            </span>\n            <span className=\"medal silver\" aria-label={`${countryName} - ${silverCount} silver medals`}>\n                <i className=\"fas fa-medal\"></i>\n                {silverCount}\n            </span>\n            <span className=\"medal bronze\" aria-label={`${countryName} - ${bronzeCount} bronze medals`}>\n                <i className=\"fas fa-medal\"></i>\n                {bronzeCount}\n            </span>\n        </div>\n    );\n};\n","index.jsx":"\n'use strict';\n\nimport React, { useCallback, useMemo, useRef, useState, StrictMode} from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-charts-enterprise';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport './style.css';\nimport GroupRowInnerRenderer from './groupRowInnerRenderer.jsx';\n\n\n\n\n\n\n\nconst GridExample = () => {\n    \n    const containerStyle = useMemo(() => ({ width: '100%', height: '100%' }), []);\n    const gridStyle = useMemo(() => ({height: '100%', width: '100%'}), []);\n    const [rowData, setRowData] = useState();\n    const [columnDefs, setColumnDefs] = useState([\n    { field: 'athlete', minWidth: 200 },\n    { field: 'country', rowGroup: true, hide: true },\n    { field: 'age' },\n    { field: 'gold', type: 'number' },\n    { field: 'silver', type: 'number' },\n    { field: 'bronze', type: 'number' },\n    { field: 'year', filter: true },\n    { field: 'date' },\n    { field: 'sport', minWidth: 200 },\n]);\n    const defaultColDef = useMemo(() => { return {\n    flex: 1,\n    minWidth: 150,\n} }, []);\n    const columnTypes = useMemo(() => { return {\n    number: {\n        editable: true,\n        // editing works with strings, need to change string to number\n        valueParser: (params) => {\n            return parseInt(params.newValue);\n        },\n        aggFunc: 'sum',\n    },\n} }, []);\n    const groupRowRendererParams = useMemo(() => { return {\n    innerRenderer: GroupRowInnerRenderer,\n    suppressCount: true,\n    flagCodes: {\n        Andorra: 'ad',\n        'United Arab Emirates': 'ae',\n        Afghanistan: 'af',\n        'Antigua and Barbuda': 'ag',\n        Anguilla: 'ai',\n        Albania: 'al',\n        Armenia: 'am',\n        Angola: 'ao',\n        Antarctica: 'aq',\n        Argentina: 'ar',\n        'American Samoa': 'as',\n        Austria: 'at',\n        Australia: 'au',\n        Aruba: 'aw',\n        'Åland Islands': 'ax',\n        Azerbaijan: 'az',\n        'Bosnia and Herzegovina': 'ba',\n        Barbados: 'bb',\n        Bangladesh: 'bd',\n        Belgium: 'be',\n        'Burkina Faso': 'bf',\n        Bulgaria: 'bg',\n        Bahrain: 'bh',\n        Burundi: 'bi',\n        Benin: 'bj',\n        'Saint Barthélemy': 'bl',\n        Bermuda: 'bm',\n        Brunei: 'bn',\n        Bolivia: 'bo',\n        'Caribbean Netherlands': 'bq',\n        Brazil: 'br',\n        Bahamas: 'bs',\n        Bhutan: 'bt',\n        'Bouvet Island': 'bv',\n        Botswana: 'bw',\n        Belarus: 'by',\n        Belize: 'bz',\n        Canada: 'ca',\n        'Cocos (Keeling) Islands': 'cc',\n        'DR Congo': 'cd',\n        'Central African Republic': 'cf',\n        'Republic of the Congo': 'cg',\n        Switzerland: 'ch',\n        \"Côte d'Ivoire (Ivory Coast)\": 'ci',\n        'Cook Islands': 'ck',\n        Chile: 'cl',\n        Cameroon: 'cm',\n        China: 'cn',\n        Colombia: 'co',\n        'Costa Rica': 'cr',\n        Cuba: 'cu',\n        'Cape Verde': 'cv',\n        Curaçao: 'cw',\n        'Christmas Island': 'cx',\n        Cyprus: 'cy',\n        'Czech Republic': 'cz',\n        Germany: 'de',\n        Djibouti: 'dj',\n        Denmark: 'dk',\n        Dominica: 'dm',\n        'Dominican Republic': 'do',\n        Algeria: 'dz',\n        Ecuador: 'ec',\n        Estonia: 'ee',\n        Egypt: 'eg',\n        'Western Sahara': 'eh',\n        Eritrea: 'er',\n        Spain: 'es',\n        Ethiopia: 'et',\n        Finland: 'fi',\n        Fiji: 'fj',\n        'Falkland Islands': 'fk',\n        Micronesia: 'fm',\n        'Faroe Islands': 'fo',\n        France: 'fr',\n        Gabon: 'ga',\n        'Great Britain': 'gb',\n        Grenada: 'gd',\n        Georgia: 'ge',\n        'French Guiana': 'gf',\n        Guernsey: 'gg',\n        Ghana: 'gh',\n        Gibraltar: 'gi',\n        Greenland: 'gl',\n        Gambia: 'gm',\n        Guinea: 'gn',\n        Guadeloupe: 'gp',\n        'Equatorial Guinea': 'gq',\n        Greece: 'gr',\n        'South Georgia': 'gs',\n        Guatemala: 'gt',\n        Guam: 'gu',\n        'Guinea-Bissau': 'gw',\n        Guyana: 'gy',\n        'Hong Kong': 'hk',\n        'Heard Island and McDonald Islands': 'hm',\n        Honduras: 'hn',\n        Croatia: 'hr',\n        Haiti: 'ht',\n        Hungary: 'hu',\n        Indonesia: 'id',\n        Ireland: 'ie',\n        Israel: 'il',\n        'Isle of Man': 'im',\n        India: 'in',\n        'British Indian Ocean Territory': 'io',\n        Iraq: 'iq',\n        Iran: 'ir',\n        Iceland: 'is',\n        Italy: 'it',\n        Jersey: 'je',\n        Jamaica: 'jm',\n        Jordan: 'jo',\n        Japan: 'jp',\n        Kenya: 'ke',\n        Kyrgyzstan: 'kg',\n        Cambodia: 'kh',\n        Kiribati: 'ki',\n        Comoros: 'km',\n        'Saint Kitts and Nevis': 'kn',\n        'North Korea': 'kp',\n        'South Korea': 'kr',\n        Kuwait: 'kw',\n        'Cayman Islands': 'ky',\n        Kazakhstan: 'kz',\n        Laos: 'la',\n        Lebanon: 'lb',\n        'Saint Lucia': 'lc',\n        Liechtenstein: 'li',\n        'Sri Lanka': 'lk',\n        Liberia: 'lr',\n        Lesotho: 'ls',\n        Lithuania: 'lt',\n        Luxembourg: 'lu',\n        Latvia: 'lv',\n        Libya: 'ly',\n        Morocco: 'ma',\n        Monaco: 'mc',\n        Moldova: 'md',\n        Montenegro: 'me',\n        'Saint Martin': 'mf',\n        Madagascar: 'mg',\n        'Marshall Islands': 'mh',\n        Macedonia: 'mk',\n        Mali: 'ml',\n        Myanmar: 'mm',\n        Mongolia: 'mn',\n        Macau: 'mo',\n        'Northern Mariana Islands': 'mp',\n        Martinique: 'mq',\n        Mauritania: 'mr',\n        Montserrat: 'ms',\n        Malta: 'mt',\n        Mauritius: 'mu',\n        Maldives: 'mv',\n        Malawi: 'mw',\n        Mexico: 'mx',\n        Malaysia: 'my',\n        Mozambique: 'mz',\n        Namibia: 'na',\n        'New Caledonia': 'nc',\n        Niger: 'ne',\n        'Norfolk Island': 'nf',\n        Nigeria: 'ng',\n        Nicaragua: 'ni',\n        Netherlands: 'nl',\n        Norway: 'no',\n        Nepal: 'np',\n        Nauru: 'nr',\n        Niue: 'nu',\n        'New Zealand': 'nz',\n        Oman: 'om',\n        Panama: 'pa',\n        Peru: 'pe',\n        'French Polynesia': 'pf',\n        'Papua New Guinea': 'pg',\n        Philippines: 'ph',\n        Pakistan: 'pk',\n        Poland: 'pl',\n        'Saint Pierre and Miquelon': 'pm',\n        'Pitcairn Islands': 'pn',\n        'Puerto Rico': 'pr',\n        Palestine: 'ps',\n        Portugal: 'pt',\n        Palau: 'pw',\n        Paraguay: 'py',\n        Qatar: 'qa',\n        Réunion: 're',\n        Romania: 'ro',\n        Serbia: 'rs',\n        Russia: 'ru',\n        Rwanda: 'rw',\n        'Saudi Arabia': 'sa',\n        'Solomon Islands': 'sb',\n        Seychelles: 'sc',\n        Sudan: 'sd',\n        Sweden: 'se',\n        Singapore: 'sg',\n        'Saint Helena, Ascension and Tristan da Cunha': 'sh',\n        Slovenia: 'si',\n        'Svalbard and Jan Mayen': 'sj',\n        Slovakia: 'sk',\n        'Sierra Leone': 'sl',\n        'San Marino': 'sm',\n        Senegal: 'sn',\n        Somalia: 'so',\n        Suriname: 'sr',\n        'South Sudan': 'ss',\n        'São Tomé and Príncipe': 'st',\n        'El Salvador': 'sv',\n        'Sint Maarten': 'sx',\n        Syria: 'sy',\n        'Eswatini (Swaziland)': 'sz',\n        'Turks and Caicos Islands': 'tc',\n        Chad: 'td',\n        'French Southern and Antarctic Lands': 'tf',\n        Togo: 'tg',\n        Thailand: 'th',\n        Tajikistan: 'tj',\n        Tokelau: 'tk',\n        'Timor-Leste': 'tl',\n        Turkmenistan: 'tm',\n        Tunisia: 'tn',\n        Tonga: 'to',\n        Turkey: 'tr',\n        'Trinidad and Tobago': 'tt',\n        Tuvalu: 'tv',\n        'Chinese Taipei': 'tw',\n        Taiwan: 'tw',\n        Tanzania: 'tz',\n        Ukraine: 'ua',\n        Uganda: 'ug',\n        'United States Minor Outlying Islands': 'um',\n        'United States': 'us',\n        Uruguay: 'uy',\n        Uzbekistan: 'uz',\n        'Vatican City (Holy See)': 'va',\n        'Saint Vincent and the Grenadines': 'vc',\n        Venezuela: 've',\n        'British Virgin Islands': 'vg',\n        'United States Virgin Islands': 'vi',\n        Vietnam: 'vn',\n        Vanuatu: 'vu',\n        'Wallis and Futuna': 'wf',\n        Samoa: 'ws',\n        Kosovo: 'xk',\n        Yemen: 'ye',\n        Mayotte: 'yt',\n        'South Africa': 'za',\n        Zambia: 'zm',\n        Zimbabwe: 'zw',\n    },\n} }, []);\n\n\n            const onGridReady = useCallback((params) => {\n                \n\n                fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n                .then(resp => resp.json())\n                .then(data => setRowData( data));\n            }, []);\n\n\n\n    return  (\n            <div style={containerStyle}>\n                \n        <div  style={gridStyle} className={/** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/}>\n            <AgGridReact\n                \n                rowData={rowData}\ncolumnDefs={columnDefs}\ndefaultColDef={defaultColDef}\ncolumnTypes={columnTypes}\ngroupDisplayType={'groupRows'}\ngroupRowRendererParams={groupRowRendererParams}\nonGridReady={onGridReady}\n            />\n        </div>\n\n            </div>\n        );\n\n}\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(<StrictMode><GridExample /></StrictMode>);\nwindow.tearDownExample = () => root.unmount();\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n    var sjsPaths = {};\n    if (typeof systemJsPaths !== 'undefined') {\n        sjsPaths = systemJsPaths;\n    }\n    System.config({\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            jsx: 'react',\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...sjsPaths,\n        },\n        map: {\n            css: 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n\n        packages: {\n            css: {},\n            react: {\n                main: './umd/react.development.js',\n            },\n            'react-dom': {\n                main: './umd/react-dom.development.js',\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js',\n            },\n            app: {\n                main: './index.jsx',\n                defaultExtension: 'jsx',\n            },\n            '@ag-grid-community/react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            jsx: 'react',\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            css: {},\n            react: {\n                main: './umd/react.production.min.js',\n            },\n            'react-dom': {\n                main: './umd/react-dom.production.min.js',\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js',\n            },\n            app: {\n                main: './index.jsx',\n                defaultExtension: 'jsx',\n            },\n            '@ag-grid-community/react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-packages","dependencies":{"react":"18","react-dom":"18","@types/react":"18","@types/react-dom":"18","ag-grid-react":"^31.3.1","ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}},"extras":["fontawesome"]}