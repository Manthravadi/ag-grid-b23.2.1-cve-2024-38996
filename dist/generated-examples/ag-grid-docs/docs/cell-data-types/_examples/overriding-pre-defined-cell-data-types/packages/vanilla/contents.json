{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [{ field: 'athlete' }, { field: 'age' }, { field: 'date' }],\n    defaultColDef: {\n        filter: true,\n        floatingFilter: true,\n        editable: true,\n    },\n    dataTypeDefinitions: {\n        dateString: {\n            baseDataType: 'dateString',\n            extendsDataType: 'dateString',\n            valueParser: (params) =>\n                params.newValue != null && params.newValue.match('\\\\d{2}/\\\\d{2}/\\\\d{4}') ? params.newValue : null,\n            valueFormatter: (params) =>\n                params.value == null ? '' : params.value,\n            dataTypeMatcher: (value) => typeof value === 'string' && !!value.match('\\\\d{2}/\\\\d{2}/\\\\d{4}'),\n            dateParser: (value) => {\n                if (value == null || value === '') {\n                    return undefined;\n                }\n                const dateParts = value.split('/');\n                return dateParts.length === 3\n                    ? new Date(parseInt(dateParts[2]), parseInt(dateParts[1]) - 1, parseInt(dateParts[0]))\n                    : undefined;\n            },\n            dateFormatter: (value) => {\n                if (value == null) {\n                    return undefined;\n                }\n                const date = String(value.getDate());\n                const month = String(value.getMonth() + 1);\n                return `${date.length === 1 ? '0' + date : date}/${month.length === 1 ? '0' + month : month}/${value.getFullYear()}`;\n            },\n        },\n    },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', () => {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => gridApi.setGridOption('rowData', data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}