{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.example-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 5px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        { field: 'athlete', minWidth: 150 },\n        { field: 'age', maxWidth: 90 },\n        { field: 'country', minWidth: 150 },\n        { field: 'year', maxWidth: 90 },\n        { field: 'date', minWidth: 150 },\n        { field: 'sport', minWidth: 150 },\n        { field: 'gold' },\n        { field: 'silver' },\n        { field: 'bronze' },\n        { field: 'total' },\n    ],\n    defaultColDef: {\n        flex: 1,\n        minWidth: 100,\n    },\n    rowSelection: 'multiple',\n    onSelectionChanged: onSelectionChanged,\n};\n\nfunction onSelectionChanged() {\n    var selectedRows = gridApi.getSelectedRows();\n    var selectedRowsString = '';\n    var maxToShow = 5;\n\n    selectedRows.forEach(function (selectedRow, index) {\n        if (index >= maxToShow) {\n            return;\n        }\n\n        if (index > 0) {\n            selectedRowsString += ', ';\n        }\n\n        selectedRowsString += selectedRow.athlete;\n    });\n\n    if (selectedRows.length > maxToShow) {\n        var othersCount = selectedRows.length - maxToShow;\n        selectedRowsString += ' and ' + othersCount + ' other' + (othersCount !== 1 ? 's' : '');\n    }\n\n    (document.querySelector('#selectedRows') ).innerHTML = selectedRowsString;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => gridApi.setGridOption('rowData', data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        Selection:\n        <span id=\"selectedRows\"></span>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz\" style=\"height: 100%\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}