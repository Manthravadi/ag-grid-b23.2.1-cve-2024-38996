{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":[],"files":{"data.js":"function getData() {\n    var animals = ['Monkey', 'Lion', 'Elephant', 'Tiger', 'Giraffe', 'Antelope', 'Otter', 'Penguin', null];\n    var rows = [];\n\n    for (var i = 0; i < 2000; i++) {\n        var index = Math.floor(Math.random() * animals.length);\n        rows.push({ animal: animals[index] });\n    }\n\n    return rows;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        {\n            headerName: 'Default',\n            field: 'animal',\n            filter: 'agSetColumnFilter',\n        },\n        {\n            headerName: 'Excel (Windows)',\n            field: 'animal',\n            filter: 'agSetColumnFilter',\n            filterParams: {\n                excelMode: 'windows',\n            } ,\n        },\n        {\n            headerName: 'Excel (Mac)',\n            field: 'animal',\n            filter: 'agSetColumnFilter',\n            filterParams: {\n                excelMode: 'mac',\n            } ,\n        },\n    ],\n    defaultColDef: {\n        flex: 1,\n        minWidth: 200,\n    },\n    sideBar: 'filters',\n    rowData: getData(),\n    localeText: {\n        applyFilter: 'OK',\n        cancelFilter: 'Cancel',\n        resetFilter: 'Clear Filter',\n    },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n});\n","index.html":"<div id=\"myGrid\" class=\"ag-theme-quartz\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}