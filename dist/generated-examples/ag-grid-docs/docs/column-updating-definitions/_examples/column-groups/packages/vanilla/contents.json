{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-grid {\n    flex-grow: 1;\n}\n\n.test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 1rem;\n}\n","main.js":"function createColSetA() {\n    return [\n        {\n            headerName: 'Group A',\n            groupId: 'groupA',\n            children: [{ field: 'athlete' }, { field: 'age' }, { field: 'country', columnGroupShow: 'open' }],\n        },\n        {\n            headerName: 'Group B',\n            children: [{ field: 'sport' }, { field: 'year' }, { field: 'date', columnGroupShow: 'open' }],\n        },\n        {\n            headerName: 'Group C',\n            groupId: 'groupC',\n            children: [\n                { field: 'total' },\n                { field: 'gold', columnGroupShow: 'open' },\n                { field: 'silver', columnGroupShow: 'open' },\n                { field: 'bronze', columnGroupShow: 'open' },\n            ],\n        },\n    ];\n}\n\nfunction createColSetB() {\n    return [\n        {\n            headerName: 'GROUP A',\n            groupId: 'groupA',\n            children: [{ field: 'athlete' }, { field: 'age' }, { field: 'country', columnGroupShow: 'open' }],\n        },\n        {\n            headerName: 'Group B',\n            children: [{ field: 'sport' }, { field: 'year' }, { field: 'date', columnGroupShow: 'open' }],\n        },\n        {\n            headerName: 'Group C',\n            groupId: 'groupC',\n            children: [\n                { field: 'total' },\n                { field: 'gold', columnGroupShow: 'open' },\n                { field: 'silver', columnGroupShow: 'open' },\n                { field: 'bronze', columnGroupShow: 'open' },\n                { field: 'extraA' },\n                { field: 'extraB', columnGroupShow: 'open' },\n            ],\n        },\n    ];\n}\n\nlet gridApi;\n\nconst gridOptions = {\n    defaultColDef: {\n        initialWidth: 100,\n    },\n    columnDefs: [\n        {\n            headerName: 'Group A',\n            groupId: 'groupA',\n            children: [{ field: 'athlete' }, { field: 'age' }, { field: 'country', columnGroupShow: 'open' }],\n        },\n        {\n            headerName: 'Group B',\n            children: [{ field: 'sport' }, { field: 'year' }, { field: 'date', columnGroupShow: 'open' }],\n        },\n        {\n            headerName: 'Group C',\n            groupId: 'groupC',\n            children: [\n                { field: 'total' },\n                { field: 'gold', columnGroupShow: 'open' },\n                { field: 'silver', columnGroupShow: 'open' },\n                { field: 'bronze', columnGroupShow: 'open' },\n            ],\n        },\n    ],\n};\n\nfunction onBtSetA() {\n    gridApi.setGridOption('columnDefs', createColSetA());\n}\n\nfunction onBtSetB() {\n    gridApi.setGridOption('columnDefs', createColSetB());\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', () => {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => {\n            gridApi.setGridOption('rowData', data);\n        });\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <button onclick=\"onBtSetA()\">First Column Set</button>\n        <button onclick=\"onBtSetB()\">Second Column Set</button>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz test-grid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}