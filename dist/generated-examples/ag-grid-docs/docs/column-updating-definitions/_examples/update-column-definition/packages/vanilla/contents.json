{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-grid {\n    flex-grow: 1;\n}\n\n.test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 1rem;\n}\n","main.js":"function getColumnDefs() {\n    return [\n        { field: 'athlete' },\n        { field: 'age' },\n        { field: 'country' },\n        { field: 'sport' },\n        { field: 'year' },\n        { field: 'date' },\n        { field: 'gold' },\n        { field: 'silver' },\n        { field: 'bronze' },\n        { field: 'total' },\n    ];\n}\n\nlet gridApi;\n\nconst gridOptions = {\n    defaultColDef: {\n        initialWidth: 100,\n        filter: true,\n    },\n    columnDefs: getColumnDefs(),\n};\n\nfunction setHeaderNames() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach((colDef, index) => {\n        colDef.headerName = 'C' + index;\n    });\n    gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nfunction removeHeaderNames() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach((colDef, index) => {\n        colDef.headerName = undefined;\n    });\n    gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nfunction setValueFormatters() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach((colDef, index) => {\n        colDef.valueFormatter = function (params) {\n            return '[ ' + params.value + ' ]';\n        };\n    });\n    gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nfunction removeValueFormatters() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach((colDef, index) => {\n        colDef.valueFormatter = undefined;\n    });\n    gridApi.setGridOption('columnDefs', columnDefs);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', () => {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => {\n            gridApi.setGridOption('rowData', data);\n        });\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <button onclick=\"setHeaderNames()\">Set Header Names</button>\n        <button onclick=\"removeHeaderNames()\">Remove Header Names</button>\n        <button onclick=\"setValueFormatters()\">Set Value Formatters</button>\n        <button onclick=\"removeValueFormatters()\">Remove Value Formatters</button>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz test-grid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}