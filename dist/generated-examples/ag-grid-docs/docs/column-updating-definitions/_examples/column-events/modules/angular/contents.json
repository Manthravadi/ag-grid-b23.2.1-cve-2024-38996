{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"app.component.ts","styleFiles":[],"files":{"styles.css":".test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 0.5rem;\n}\n\n.test-header .example-section {\n    margin-bottom: 0.5rem;\n}\n\n.test-button-group {\n    display: inline-block;\n    margin-right: 20px;\n    margin-bottom: 10px;\n}\n\n.test-button-group button {\n    margin: 4px;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n}\n","main.ts":"import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent);\n","app.component.ts":"\nimport { Component } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { AgGridAngular } from '@ag-grid-community/angular';\n// NOTE: Angular CLI does not support component CSS imports: angular-cli/issues/23273\nimport '@ag-grid-community/styles/ag-grid.css';\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nimport './styles.css';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { ColDef, ColGroupDef, ColumnMovedEvent, ColumnPinnedEvent, ColumnPivotChangedEvent, ColumnResizedEvent, ColumnRowGroupChangedEvent, ColumnValueChangedEvent, ColumnVisibleEvent, GridApi, GridOptions, GridReadyEvent, ModuleRegistry, SortChangedEvent, createGrid } from '@ag-grid-community/core';\nimport { RowGroupingModule } from '@ag-grid-enterprise/row-grouping';\nModuleRegistry.registerModules([ClientSideRowModelModule, RowGroupingModule]);\nimport { IOlympicData } from './interfaces'\n\n\n\n@Component({\n    selector: 'my-app',\n    standalone: true,\n    imports: [AgGridAngular, HttpClientModule],\n    template: `<div class=\"test-container\">\n    <div class=\"test-header\">\n        <div class=\"test-button-row\">\n            <div class=\"test-button-group\">\n                <button (click)=\"onBtSortOn()\">Sort On</button>\n                <br />\n                <button (click)=\"onBtSortOff()\">Sort Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button (click)=\"onBtWidthNarrow()\">Width Narrow</button>\n                <br />\n                <button (click)=\"onBtWidthNormal()\">Width Normal</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button (click)=\"onBtHide()\">Hide Cols</button>\n                <br />\n                <button (click)=\"onBtShow()\">Show Cols</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button (click)=\"onBtPivotOn()\">Pivot On</button>\n                <br />\n                <button (click)=\"onBtPivotOff()\">Pivot Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button (click)=\"onBtRowGroupOn()\">Row Group On</button>\n                <br />\n                <button (click)=\"onBtRowGroupOff()\">Row Group Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button (click)=\"onBtAggFuncOn()\">Agg Func On</button>\n                <br />\n                <button (click)=\"onBtAggFuncOff()\">Agg Func Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button (click)=\"onBtPinnedOn()\">Pinned On</button>\n                <br />\n                <button (click)=\"onBtPinnedOff()\">Pinned Off</button>\n            </div>\n        </div>\n    </div>\n    <ag-grid-angular\n    \n    style=\"width: 100%; height: 100%;\"\n    [defaultColDef]=\"defaultColDef\"\n    [columnDefs]=\"columnDefs\"\n    [rowData]=\"rowData\"\n    [class]=\"themeClass\"\n    (sortChanged)=\"onSortChanged($event)\"\n    (columnResized)=\"onColumnResized($event)\"\n    (columnVisible)=\"onColumnVisible($event)\"\n    (columnPivotChanged)=\"onColumnPivotChanged($event)\"\n    (columnRowGroupChanged)=\"onColumnRowGroupChanged($event)\"\n    (columnValueChanged)=\"onColumnValueChanged($event)\"\n    (columnMoved)=\"onColumnMoved($event)\"\n    (columnPinned)=\"onColumnPinned($event)\"\n    (gridReady)=\"onGridReady($event)\"\n     />\n</div>\n`\n})\n\nexport class AppComponent {\n    private gridApi!: GridApi<IOlympicData>;\n\n    \n    public defaultColDef: ColDef = {\n    width: 150,\n    enableRowGroup: true,\n    enablePivot: true,\n    enableValue: true,\n};\npublic columnDefs: ColDef[] = getColumnDefs();\npublic rowData!: IOlympicData[];;\npublic themeClass: string = /** DARK MODE START **/document.documentElement?.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/;\n\n    constructor(private http: HttpClient) {\n}\n\n\n    onSortChanged(e: SortChangedEvent) {\n    console.log('Event Sort Changed', e);\n}\n\nonColumnResized(e: ColumnResizedEvent) {\n    console.log('Event Column Resized', e);\n}\n\nonColumnVisible(e: ColumnVisibleEvent) {\n    console.log('Event Column Visible', e);\n}\n\nonColumnPivotChanged(e: ColumnPivotChangedEvent) {\n    console.log('Event Pivot Changed', e);\n}\n\nonColumnRowGroupChanged(e: ColumnRowGroupChangedEvent) {\n    console.log('Event Row Group Changed', e);\n}\n\nonColumnValueChanged(e: ColumnValueChangedEvent) {\n    console.log('Event Value Changed', e);\n}\n\nonColumnMoved(e: ColumnMovedEvent) {\n    console.log('Event Column Moved', e);\n}\n\nonColumnPinned(e: ColumnPinnedEvent) {\n    console.log('Event Column Pinned', e);\n}\n\nonBtSortOn() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        if (colDef.field === 'age') {\n            colDef.sort = 'desc';\n        }\n        if (colDef.field === 'athlete') {\n            colDef.sort = 'asc';\n        }\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtSortOff() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        colDef.sort = null;\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtWidthNarrow() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        if (colDef.field === 'age' || colDef.field === 'athlete') {\n            colDef.width = 100;\n        }\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtWidthNormal() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        colDef.width = 200;\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtHide() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        if (colDef.field === 'age' || colDef.field === 'athlete') {\n            colDef.hide = true;\n        }\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtShow() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        colDef.hide = false;\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtPivotOn() {\n    this.gridApi.setGridOption('pivotMode', true);\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        if (colDef.field === 'country') {\n            colDef.pivot = true;\n        }\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtPivotOff() {\n    this.gridApi.setGridOption('pivotMode', false);\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        colDef.pivot = false;\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtRowGroupOn() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        if (colDef.field === 'sport') {\n            colDef.rowGroup = true;\n        }\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtRowGroupOff() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        colDef.rowGroup = false;\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtAggFuncOn() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        if (colDef.field === 'gold' || colDef.field === 'silver' || colDef.field === 'bronze') {\n            colDef.aggFunc = 'sum';\n        }\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtAggFuncOff() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        colDef.aggFunc = null;\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtPinnedOn() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        if (colDef.field === 'athlete') {\n            colDef.pinned = 'left';\n        }\n        if (colDef.field === 'age') {\n            colDef.pinned = 'right';\n        }\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonBtPinnedOff() {\n    const columnDefs: ColDef[] = getColumnDefs();\n    columnDefs.forEach((colDef) => {\n        colDef.pinned = null;\n    });\n    this.gridApi.setGridOption('columnDefs', columnDefs);\n}\n\nonGridReady(params: GridReadyEvent<IOlympicData>) {\n             \n            this.gridApi = params.api;\n\n        this.http.get<IOlympicData[]>('https://www.ag-grid.com/example-assets/olympic-winners.json').subscribe(data => this.rowData = data);\n        }\n}\n\n\n\nfunction getColumnDefs(): ColDef[] {\n    return [\n        { field: 'athlete' },\n        { field: 'age' },\n        { field: 'country' },\n        { field: 'sport' },\n        { field: 'gold' },\n        { field: 'silver' },\n        { field: 'bronze' },\n    ];\n}\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","main.ts":"import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent);\n","systemjs.config.dev.js":"(function (global) {\n    var ANGULAR_VERSION = '^17';\n    window.ENABLE_PROD_MODE = false;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            '@ag-grid-community/angular': {\n                main: './fesm2022/ag-grid-community-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n","systemjs.config.js":"(function (global) {\n    var ANGULAR_VERSION = '^17';\n    window.ENABLE_PROD_MODE = true;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            '@ag-grid-community/angular': {\n                main: './fesm2022/ag-grid-community-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-modules","dependencies":{"@angular/core":"^17","@angular/common":"^17","@angular/forms":"^17","@angular/platform-browser":"^17","@ag-grid-community/angular":"^31.3.1","@ag-grid-community/core":"^31.3.1","@ag-grid-community/styles":"^31.3.1","@ag-grid-community/client-side-row-model":"^31.3.1","@ag-grid-community/infinite-row-model":"^31.3.1","@ag-grid-community/csv-export":"^31.3.1","@ag-grid-enterprise/core":"^31.3.1","@ag-grid-enterprise/charts-enterprise":"^31.3.1","@ag-grid-enterprise/sparklines":"^31.3.1","@ag-grid-enterprise/clipboard":"^31.3.1","@ag-grid-enterprise/column-tool-panel":"^31.3.1","@ag-grid-enterprise/excel-export":"^31.3.1","@ag-grid-enterprise/filter-tool-panel":"^31.3.1","@ag-grid-enterprise/master-detail":"^31.3.1","@ag-grid-enterprise/menu":"^31.3.1","@ag-grid-enterprise/range-selection":"^31.3.1","@ag-grid-enterprise/rich-select":"^31.3.1","@ag-grid-enterprise/row-grouping":"^31.3.1","@ag-grid-enterprise/server-side-row-model":"^31.3.1","@ag-grid-enterprise/set-filter":"^31.3.1","@ag-grid-enterprise/multi-filter":"^31.3.1","@ag-grid-enterprise/advanced-filter":"^31.3.1","@ag-grid-enterprise/side-bar":"^31.3.1","@ag-grid-enterprise/status-bar":"^31.3.1","@ag-grid-enterprise/viewport-row-model":"^31.3.1"}}}