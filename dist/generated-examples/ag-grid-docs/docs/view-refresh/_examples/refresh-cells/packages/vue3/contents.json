{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","styleFiles":[],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.example-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 5px;\n}\n\n.ag-floating-top .ag-row {\n    background-color: #99999944;\n}\n\n.ag-floating-bottom .ag-row {\n    background-color: #99999944;\n}\n","main.js":"\nimport { createApp, onBeforeMount, ref, shallowRef } from 'vue';\nimport { AgGridVue } from 'ag-grid-vue3';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport './styles.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\n\n\n\nconst VueExample = {\n    template: `\n        <div style=\"height: 100%\">\n                <div class=\"example-wrapper\">\n      <div class=\"example-header\">\n        <div>\n          <button v-on:click=\"scrambleAndRefreshAll()\">Scramble &amp; Refresh All</button>\n          <button v-on:click=\"scrambleAndRefreshLeftToRight()\">Scramble &amp; Refresh Left to Right</button>\n          <button v-on:click=\"scrambleAndRefreshTopToBottom()\">Scramble &amp; Refresh Top to Bottom</button>\n        </div>\n        <div>\n          <label>\n            <input type=\"checkbox\" id=\"forceRefresh\">\n              Force Refresh\n            </label>\n            <label>\n              <input type=\"checkbox\" id=\"suppressFlash\">\n                Suppress Flash\n              </label>\n            </div>\n          </div>\n          <ag-grid-vue\n            style=\"width: 100%; height: 100%;\"\n            :class=\"themeClass\"\n            :columnDefs=\"columnDefs\"\n            @grid-ready=\"onGridReady\"\n            :defaultColDef=\"defaultColDef\"\n            :rowData=\"rowData\"\n            :pinnedTopRowData=\"pinnedTopRowData\"\n            :pinnedBottomRowData=\"pinnedBottomRowData\"></ag-grid-vue>\n          </div>\n        </div>\n    `,\n    components: {\n        'ag-grid-vue': AgGridVue,\n        \n    },\n    setup(props) {\n        const columnDefs = ref([{field:\"a\",\nenableCellChangeFlash:false},{field:\"b\"},{field:\"c\"},{field:\"d\"},{field:\"e\"},{field:\"f\"}]);\n        const gridApi = shallowRef();\n        const defaultColDef = ref({\n    flex: 1,\n    enableCellChangeFlash: true,\n});\n        const rowData = ref(null);\nconst pinnedTopRowData = ref(null);\nconst pinnedBottomRowData = ref(null)\n        \n        onBeforeMount(() => {\n            rowData.value = [];\npinnedTopRowData.value = [];\npinnedBottomRowData.value = []            \n        });\n        \n        const scrambleAndRefreshAll = () => {\n    scramble();\n    var params = {\n        force: isForceRefreshSelected(),\n        suppressFlash: isSuppressFlashSelected(),\n    };\n    gridApi.value.refreshCells(params);\n};\nconst scrambleAndRefreshLeftToRight = () => {\n    scramble();\n    ['a', 'b', 'c', 'd', 'e', 'f'].forEach((col, index) => {\n        var millis = index * 100;\n        var params = {\n            force: isForceRefreshSelected(),\n            suppressFlash: isSuppressFlashSelected(),\n            columns: [col],\n        };\n        callRefreshAfterMillis(params, millis, gridApi.value);\n    });\n};\nconst scrambleAndRefreshTopToBottom = () => {\n    scramble();\n    var frame = 0;\n    var i;\n    var rowNode;\n    for (i = 0; i < gridApi.value.getPinnedTopRowCount(); i++) {\n        rowNode = gridApi.value.getPinnedTopRow(i);\n        refreshRow(rowNode, gridApi.value);\n    }\n    for (i = 0; i < gridApi.value.getDisplayedRowCount(); i++) {\n        rowNode = gridApi.value.getDisplayedRowAtIndex(i);\n        refreshRow(rowNode, gridApi.value);\n    }\n    for (i = 0; i < gridApi.value.getPinnedBottomRowCount(); i++) {\n        rowNode = gridApi.value.getPinnedBottomRow(i);\n        refreshRow(rowNode, gridApi.value);\n    }\n    function refreshRow(rowNode, api) {\n        var millis = frame++ * 100;\n        var rowNodes = [rowNode]; // params needs an array\n        var params = {\n            force: isForceRefreshSelected(),\n            suppressFlash: isSuppressFlashSelected(),\n            rowNodes: rowNodes,\n        };\n        callRefreshAfterMillis(params, millis, api);\n    }\n};\nconst onGridReady = (params) => {\n        \n        gridApi.value = params.api;\n        \n\n        \n    // placing in 13 rows, so there are exactly enough rows to fill the grid, makes\n    // the row animation look nice when you see all the rows\n    data = createData(14);\n    topRowData = createData(2);\n    bottomRowData = createData(2);\n    params.api.setGridOption('rowData', data);\n    params.api.setGridOption('pinnedTopRowData', topRowData);\n    params.api.setGridOption('pinnedBottomRowData', bottomRowData);\n\n    };\n                \n        return {\n            columnDefs,\n            gridApi,\n            defaultColDef,\nrowData,\npinnedTopRowData,\npinnedBottomRowData,\n            onGridReady,\n            themeClass: /** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/,\n            scrambleAndRefreshAll,\nscrambleAndRefreshLeftToRight,\nscrambleAndRefreshTopToBottom\n        }        \n    }\n}\n\nwindow.createData = function createData(count) {\n    var result = [];\n    for (var i = 1; i <= count; i++) {\n        result.push({\n            a: (i * 863) % 100,\n            b: (i * 811) % 100,\n            c: (i * 743) % 100,\n            d: (i * 677) % 100,\n            e: (i * 619) % 100,\n            f: (i * 571) % 100,\n        });\n    }\n    return result;\n}\n\nwindow.isForceRefreshSelected = function isForceRefreshSelected() {\n    return (document.querySelector('#forceRefresh')).checked;\n}\n\nwindow.isSuppressFlashSelected = function isSuppressFlashSelected() {\n    return (document.querySelector('#suppressFlash')).checked;\n}\n\nwindow.callRefreshAfterMillis = function callRefreshAfterMillis(params, millis, api) {\n    setTimeout(() => {\n        api.refreshCells(params);\n    }, millis);\n}\n\nwindow.scramble = function scramble() {\n    data.forEach(scrambleItem);\n    topRowData.forEach(scrambleItem);\n    bottomRowData.forEach(scrambleItem);\n}\n\nwindow.scrambleItem = function scrambleItem(item) {\n    ['a', 'b', 'c', 'd', 'e', 'f'].forEach((colId) => {\n        // skip 50% of the cells so updates are random\n        if (Math.random() > 0.5) {\n            return;\n        }\n        item[colId] = Math.floor(Math.random() * 100);\n    });\n}\n\n// placing in 13 rows, so there are exactly enough rows to fill the grid, makes\n// the row animation look nice when you see all the rows\nvar data = [];\n\nvar topRowData = [];\n\nvar bottomRowData = [];\n\ncreateApp(VueExample)\n    .mount(\"#app\")\n\n","index.html":"<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <div>\n            <button onclick=\"scrambleAndRefreshAll()\">Scramble & Refresh All</button>\n            <button onclick=\"scrambleAndRefreshLeftToRight()\">Scramble & Refresh Left to Right</button>\n            <button onclick=\"scrambleAndRefreshTopToBottom()\">Scramble & Refresh Top to Bottom</button>\n        </div>\n        <div>\n            <label>\n                <input type=\"checkbox\" id=\"forceRefresh\" />\n                Force Refresh\n            </label>\n            <label>\n                <input type=\"checkbox\" id=\"suppressFlash\" />\n                Suppress Flash\n            </label>\n        </div>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n</div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n    var sjsPaths = {};\n    if (typeof systemJsPaths !== 'undefined') {\n        sjsPaths = systemJsPaths;\n    }\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...sjsPaths,\n        },\n        map: {\n            css: 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.2.29/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.js',\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            vue: {\n                defaultExtension: 'js',\n            },\n            'vue-class-component': {\n                defaultExtension: 'js',\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'js',\n            },\n            '@ag-grid-community/vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.2.29/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            vue: {\n                defaultExtension: 'js',\n            },\n            'vue-class-component': {\n                defaultExtension: 'js',\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'js',\n            },\n            '@ag-grid-community/vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"}}