{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.ts","mainFileName":"app.component.ts","styleFiles":[],"files":{"style.css":".wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n.button-container {\n    flex-wrap: wrap;\n}\n\n#myGrid {\n    flex: 1;\n}\n\n#myChart {\n    flex: 2;\n    min-height: 530px;\n}\n","data.ts":"export async function getData(chartType: 'heatmap' | 'waterfall', delay: number = 100): Promise<any[]> {\n    return new Promise((resolve) => setTimeout(() => resolve(generateData(chartType)), delay));\n}\n\nfunction generateData(chartType: 'heatmap' | 'waterfall'): any[] {\n    switch (chartType) {\n        case 'heatmap':\n            return generateHeatmapData();\n        case 'waterfall':\n            return generateWaterfallData();\n    }\n}\n\nfunction generateHeatmapData(): any[] {\n    // Source: http://www.sheffieldweather.co.uk/Averages/MONTHLYAIRAVERAGE.htm\n    return [\n        {\n            year: '2010',\n            jan: 1.2,\n            feb: 1.9,\n            mar: 5.9,\n            apr: 9.1,\n            may: 10.9,\n            jun: 15.2,\n            jul: 16.2,\n            aug: 14.9,\n            sep: 13.4,\n            oct: 9.5,\n            nov: 4.9,\n            dec: 0.4,\n        },\n        {\n            year: '2011',\n            jan: 3.9,\n            feb: 6,\n            mar: 6.6,\n            apr: 12,\n            may: 12,\n            jun: 14.2,\n            jul: 15.8,\n            aug: 15.8,\n            sep: 14.9,\n            oct: 12.2,\n            nov: 8.9,\n            dec: 5.4,\n        },\n        {\n            year: '2012',\n            jan: 5.1,\n            feb: 4.5,\n            mar: 8.6,\n            apr: 6.7,\n            may: 11.6,\n            jun: 13.4,\n            jul: 15.5,\n            aug: 16.2,\n            sep: 12.7,\n            oct: 8.8,\n            nov: 6.1,\n            dec: 4.2,\n        },\n        {\n            year: '2013',\n            jan: 3.4,\n            feb: 2.7,\n            mar: 1.7,\n            apr: 7.4,\n            may: 10.6,\n            jun: 14.1,\n            jul: 18.4,\n            aug: 16.8,\n            sep: 13.3,\n            oct: 11.7,\n            nov: 6.2,\n            dec: 6.3,\n        },\n        {\n            year: '2014',\n            jan: 5,\n            feb: 5.6,\n            mar: 7.4,\n            apr: 10.1,\n            may: 12.2,\n            jun: 15.3,\n            jul: 17.9,\n            aug: 14.9,\n            sep: 14.4,\n            oct: 11.4,\n            nov: 7.8,\n            dec: 5.2,\n        },\n        {\n            year: '2015',\n            jan: 4.1,\n            feb: 3.8,\n            mar: 5.9,\n            apr: 9.1,\n            may: 10.6,\n            jun: 13.9,\n            jul: 15.7,\n            aug: 15.8,\n            sep: 12.2,\n            oct: 10.2,\n            nov: 8.7,\n            dec: 8.6,\n        },\n        {\n            year: '2016',\n            jan: 4.8,\n            feb: 4.2,\n            mar: 5.5,\n            apr: 7,\n            may: 11.8,\n            jun: 14.6,\n            jul: 16.6,\n            aug: 16.6,\n            sep: 15.4,\n            oct: 10.2,\n            nov: 5.4,\n            dec: 6.3,\n        },\n        {\n            year: '2017',\n            jan: 3.9,\n            feb: 5.2,\n            mar: 8,\n            apr: 8.6,\n            may: 12.8,\n            jun: 15.7,\n            jul: 16.4,\n            aug: 15.2,\n            sep: 13,\n            oct: 11.9,\n            nov: 6.5,\n            dec: 4.7,\n        },\n        {\n            year: '2018',\n            jan: 4.4,\n            feb: 2.3,\n            mar: 3.7,\n            apr: 8.8,\n            may: 13.8,\n            jun: 16.4,\n            jul: 19.5,\n            aug: 17,\n            sep: 13.4,\n            oct: 10.3,\n            nov: 7.4,\n            dec: 6.4,\n        },\n        {\n            year: '2019',\n            jan: 4.4,\n            feb: 6.9,\n            mar: 7.5,\n            apr: 8.9,\n            may: 11.5,\n            jun: 14.1,\n            jul: 17.8,\n            aug: 17.1,\n            sep: 13.7,\n            oct: 9.2,\n            nov: 5.4,\n            dec: 5.4,\n        },\n        {\n            year: '2020',\n            jan: 6.4,\n            feb: 5.6,\n            mar: 6.3,\n            apr: 10.3,\n            may: 12.8,\n            jun: 15,\n            jul: 15.6,\n            aug: 17.2,\n            sep: 13.7,\n            oct: 9.8,\n            nov: 8.1,\n            dec: 4.6,\n        },\n        {\n            year: '2021',\n            jan: 2.8,\n            feb: 4.3,\n            mar: 7.2,\n            apr: 6.5,\n            may: 10,\n            jun: 16.1,\n            jul: 18.4,\n            aug: 16.1,\n            sep: 16.2,\n            oct: 11.6,\n            nov: 7.7,\n            dec: 5.4,\n        },\n        {\n            year: '2022',\n            jan: 5.2,\n            feb: 6.1,\n            mar: 7.4,\n            apr: 9.2,\n            may: 13.3,\n            jun: 15.5,\n            jul: 18.5,\n            aug: 18.4,\n            sep: 14.5,\n            oct: 12.1,\n            nov: 8.4,\n            dec: 3.6,\n        },\n    ];\n}\n\nfunction generateWaterfallData(): any[] {\n    return [\n        { financials: 'Income\\nTax', amount: 185 },\n        { financials: 'VAT', amount: 145 },\n        { financials: 'NI', amount: 134 },\n        { financials: 'Corp\\nTax', amount: 55 },\n        { financials: 'Council\\nTax', amount: 34 },\n        { financials: 'Social\\nProtection', amount: -252 },\n        { financials: 'Health', amount: -155 },\n        { financials: 'Education', amount: -112 },\n        { financials: 'Defence', amount: -65 },\n        { financials: 'Debt\\nInterest', amount: -63 },\n        { financials: 'Housing', amount: -31 },\n    ];\n}\n","main.ts":"import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent);\n","app.component.ts":"\nimport { Component } from '@angular/core';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\nimport './style.css';\nimport { ChartRef, ChartToolPanelsDef, ColDef, ColGroupDef, FirstDataRenderedEvent, GridApi, GridOptions, GridReadyEvent, createGrid } from 'ag-grid-community';\nimport { getData } from './data';\nimport 'ag-grid-charts-enterprise';\n\n\n\n@Component({\n    selector: 'my-app',\n    standalone: true,\n    imports: [AgGridAngular],\n    template: `<div class=\"wrapper\">\n    <div class=\"button-container\">\n        <button (click)=\"updateChart('heatmap')\">Heatmap</button>\n        <button (click)=\"updateChart('waterfall')\">Waterfall</button>\n    </div>\n    <ag-grid-angular\n    \n    style=\"width: 100%; height: 100%;\"\n    [columnDefs]=\"columnDefs\"\n    [defaultColDef]=\"defaultColDef\"\n    [popupParent]=\"popupParent\"\n    [enableRangeSelection]=\"true\"\n    [enableCharts]=\"true\"\n    [chartToolPanelsDef]=\"chartToolPanelsDef\"\n    [rowData]=\"rowData\"\n    [class]=\"themeClass\"\n    (firstDataRendered)=\"onFirstDataRendered($event)\"\n    (gridReady)=\"onGridReady($event)\"\n     />\n    <div id=\"myChart\" class=\"ag-theme-quartz\"></div>\n</div>\n`\n})\n\nexport class AppComponent {\n    private gridApi!: GridApi;\n\n    \n    public columnDefs: ColDef[] = heatmapColDefs;\npublic defaultColDef: ColDef = {\n    flex: 1,\n    minWidth: 100,\n};\npublic popupParent: HTMLElement | null = document.body;\npublic chartToolPanelsDef: ChartToolPanelsDef = {\n    defaultToolPanel: 'settings',\n};\npublic rowData!: any[];;\npublic themeClass: string = /** DARK MODE START **/document.documentElement?.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/;\n\n\n    onFirstDataRendered(params: FirstDataRenderedEvent) {\n    chartRef = params.api.createRangeChart({\n        chartContainer: document.querySelector('#myChart') as any,\n        chartType: 'heatmap',\n        cellRange: {\n            columns: heatmapColIds,\n        },\n    })!;\n}\n\nupdateChart(chartType: 'heatmap' | 'waterfall') {\n    getData(chartType).then((rowData) => {\n        this.gridApi.updateGridOptions({\n            columnDefs: chartType === 'heatmap' ? heatmapColDefs : waterfallColDefs,\n            rowData,\n        });\n        this.gridApi.updateChart({\n            type: 'rangeChartUpdate',\n            chartId: chartRef.chartId,\n            chartType,\n            cellRange: {\n                columns: chartType === 'heatmap' ? heatmapColIds : waterfallColIds,\n            },\n        });\n    });\n}\n\nonGridReady(params: GridReadyEvent) {\n            /** DARK INTEGRATED START **/\n        const isInitialModeDark = (): boolean => {\n            const attr: string | null = document.documentElement.getAttribute('data-default-theme');\n            return attr ? attr.endsWith('-dark') : false;\n        };\n                  \n        // update chart themes based on dark mode status\n        const updateChartThemes = (isDark: boolean): void => {\n            const themes: string[] = ['ag-default', 'ag-material', 'ag-sheets', 'ag-polychroma', 'ag-vivid'];            \n            const currentThemes = params.api.getGridOption('chartThemes');    \n            const customTheme = currentThemes && currentThemes.some(theme => theme.startsWith('my-custom-theme'));\n            \n            let modifiedThemes: string[] = customTheme\n                ? (isDark ? ['my-custom-theme-dark', 'my-custom-theme-light'] : ['my-custom-theme-light', 'my-custom-theme-dark'])\n                : Array.from(new Set(themes.map((theme) => theme + (isDark ? '-dark' : ''))));                      \n\n            // updating the 'chartThemes' grid option will cause the chart to reactively update!\n            params.api.setGridOption('chartThemes', modifiedThemes);\n        };\n        \n        // update chart themes when example first loads\n        updateChartThemes(isInitialModeDark());\n                      \n        interface ColorSchemeChangeEventDetail {\n            darkMode: boolean;\n        }\n        \n        // event handler for color scheme changes\n        const handleColorSchemeChange = (event: CustomEvent<ColorSchemeChangeEventDetail>): void => {\n            const { darkMode } = event.detail;\n            updateChartThemes(darkMode);\n        }\n        \n        // listen for user-triggered dark mode changes (not removing listener is fine here!)\n        document.addEventListener('color-scheme-change', handleColorSchemeChange as EventListener);                \n    /** DARK INTEGRATED END **/ \n            this.gridApi = params.api;\n\n        \n    getData('heatmap').then((rowData) => params.api.setGridOption('rowData', rowData));\n\n        }\n}\n\n\n\nlet chartRef: ChartRef;\nconst heatmapColIds: string[] = [\n    'year',\n    'jan',\n    'feb',\n    'mar',\n    'apr',\n    'may',\n    'jun',\n    'jul',\n    'aug',\n    'sep',\n    'oct',\n    'nov',\n    'dec',\n];\nconst heatmapColDefs: ColDef[] = [\n    { field: 'year', width: 150, chartDataType: 'category' },\n    { field: 'jan' },\n    { field: 'feb' },\n    { field: 'mar' },\n    { field: 'apr' },\n    { field: 'may' },\n    { field: 'jun' },\n    { field: 'jul' },\n    { field: 'aug' },\n    { field: 'sep' },\n    { field: 'oct' },\n    { field: 'nov' },\n    { field: 'dec' },\n];\nconst waterfallColIds: string[] = ['financials', 'amount'];\nconst waterfallColDefs: ColDef[] = [\n    { field: 'financials', width: 150, chartDataType: 'category' },\n    { field: 'amount', chartDataType: 'series' },\n];\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","main.ts":"import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent);\n","systemjs.config.dev.js":"(function (global) {\n    var ANGULAR_VERSION = '^17';\n    window.ENABLE_PROD_MODE = false;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            '@ag-grid-community/angular': {\n                main: './fesm2022/ag-grid-community-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n","systemjs.config.js":"(function (global) {\n    var ANGULAR_VERSION = '^17';\n    window.ENABLE_PROD_MODE = true;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            '@ag-grid-community/angular': {\n                main: './fesm2022/ag-grid-community-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-packages","dependencies":{"@angular/core":"^17","@angular/common":"^17","@angular/forms":"^17","@angular/platform-browser":"^17","ag-grid-angular":"^31.3.1","ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}