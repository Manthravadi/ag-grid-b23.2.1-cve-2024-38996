{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        { field: 'Month', width: 150, chartDataType: 'category' },\n        { field: 'Sunshine (hours)', chartDataType: 'series' },\n        { field: 'Rainfall (mm)', chartDataType: 'series' },\n    ],\n    defaultColDef: {\n        flex: 1,\n    },\n    enableRangeSelection: true,\n    popupParent: document.body,\n    enableCharts: true,\n    onChartCreated: onChartCreated,\n    onChartRangeSelectionChanged: onChartRangeSelectionChanged,\n    onChartOptionsChanged: onChartOptionsChanged,\n    onChartDestroyed: onChartDestroyed,\n};\n\nfunction onChartCreated(event) {\n    console.log('Created chart with ID ' + event.chartId, event);\n}\n\nfunction onChartRangeSelectionChanged(event) {\n    console.log('Changed range selection of chart with ID ' + event.chartId, event);\n}\n\nfunction onChartOptionsChanged(event) {\n    console.log('Changed options of chart with ID ' + event.chartId, event);\n}\n\nfunction onChartDestroyed(event) {\n    console.log('Destroyed chart with ID ' + event.chartId, event);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); /** DARK INTEGRATED START **/\n    const isInitialModeDark = () => {\n            const attr = document.documentElement.getAttribute('data-default-theme');\n            return attr ? attr.endsWith('-dark') : false;\n        };\n      \n        const updateChartThemes = (isDark) => {           \n            const themes = ['ag-default', 'ag-material', 'ag-sheets', 'ag-polychroma', 'ag-vivid'];            \n            const currentThemes = gridApi.getGridOption('chartThemes');                    \n            const customTheme = currentThemes && currentThemes.some(theme => theme.startsWith('my-custom-theme'));\n            \n            let modifiedThemes = customTheme\n                ? (isDark ? ['my-custom-theme-dark', 'my-custom-theme-light'] : ['my-custom-theme-light', 'my-custom-theme-dark'])\n                : Array.from(new Set(themes.map((theme) => theme + (isDark ? '-dark' : ''))));                      \n\n            // updating the 'chartThemes' grid option will cause the chart to reactively update!\n            gridApi.setGridOption('chartThemes', modifiedThemes);\n        };\n\n        // update chart themes when example first loads\n        updateChartThemes(isInitialModeDark());\n\n        const handleColorSchemeChange = (event) => {\n            const { darkMode } = event.detail;\n            updateChartThemes(darkMode);\n        }\n\n        // listen for user-triggered dark mode changes (not removing listener is fine here!)\n        document.addEventListener('color-scheme-change', handleColorSchemeChange);\n    /** DARK INTEGRATED END **/\n\n    fetch('https://www.ag-grid.com/example-assets/weather-se-england.json')\n        .then((response) => response.json())\n        .then(function (data) {\n            gridApi.setGridOption('rowData', data);\n        });\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}