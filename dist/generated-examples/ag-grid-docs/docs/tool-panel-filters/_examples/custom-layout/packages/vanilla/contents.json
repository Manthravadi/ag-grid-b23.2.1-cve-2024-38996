{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.button-group {\n    padding-bottom: 4px;\n    display: inline-block;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n}\n","main.js":"const columnDefs = [\n    {\n        headerName: 'Athlete',\n        children: [\n            {\n                headerName: 'Name',\n                field: 'athlete',\n                minWidth: 200,\n                filter: 'agTextColumnFilter',\n            },\n            { field: 'age' },\n            { field: 'country', minWidth: 200 },\n        ],\n    },\n    {\n        headerName: 'Competition',\n        children: [{ field: 'year' }, { field: 'date', minWidth: 180 }],\n    },\n    { colId: 'sport', field: 'sport', minWidth: 200 },\n    {\n        headerName: 'Medals',\n        children: [{ field: 'gold' }, { field: 'silver' }, { field: 'bronze' }, { field: 'total' }],\n    },\n];\n\nvar sortedToolPanelColumnDefs = [\n    {\n        headerName: 'Athlete',\n        children: [{ field: 'age' }, { field: 'country' }, { headerName: 'Name', field: 'athlete' }],\n    },\n    {\n        headerName: 'Competition',\n        children: [{ field: 'date' }, { field: 'year' }],\n    },\n    {\n        headerName: 'Medals',\n        children: [{ field: 'bronze' }, { field: 'gold' }, { field: 'silver' }, { field: 'total' }],\n    },\n    { colId: 'sport', field: 'sport', width: 110 },\n];\n\nvar customToolPanelColumnDefs = [\n    {\n        headerName: 'Dummy Group 1',\n        children: [\n            { field: 'age' },\n            { headerName: 'Name', field: 'athlete' },\n            {\n                headerName: 'Dummy Group 2',\n                children: [{ colId: 'sport' }, { field: 'country' }],\n            },\n        ],\n    },\n    {\n        headerName: 'Medals',\n        children: [\n            { field: 'total' },\n            { field: 'bronze' },\n            {\n                headerName: 'Dummy Group 3',\n                children: [{ field: 'silver' }, { field: 'gold' }],\n            },\n        ],\n    },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n    defaultColDef: {\n        filter: true,\n    },\n    columnDefs: columnDefs,\n    sideBar: {\n        toolPanels: [\n            {\n                id: 'filters',\n                labelDefault: 'Filters',\n                labelKey: 'filters',\n                iconKey: 'filter',\n                toolPanel: 'agFiltersToolPanel',\n                toolPanelParams: {\n                    suppressExpandAll: false,\n                    suppressFilterSearch: false,\n                    // prevents custom layout changing when columns are reordered in the grid\n                    suppressSyncLayoutWithGrid: true,\n                },\n            },\n        ],\n        defaultToolPanel: 'filters',\n    },\n};\n\nfunction setCustomSortLayout() {\n    var filtersToolPanel = gridApi.getToolPanelInstance('filters');\n    filtersToolPanel.setFilterLayout(sortedToolPanelColumnDefs);\n}\n\nfunction setCustomGroupLayout() {\n    var filtersToolPanel = gridApi.getToolPanelInstance('filters');\n    filtersToolPanel.setFilterLayout(customToolPanelColumnDefs);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => gridApi.setGridOption('rowData', data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div>\n        <span class=\"button-group\">\n            <button onclick=\"setCustomSortLayout()\">Custom Sort Layout</button>\n            <button onclick=\"setCustomGroupLayout()\">Custom Group Layout</button>\n        </span>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}