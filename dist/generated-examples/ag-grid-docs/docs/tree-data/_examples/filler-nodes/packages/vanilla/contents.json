{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"// specify the data\nvar rowData = [\n    { orgHierarchy: ['A'] },\n    { orgHierarchy: ['A', 'B'] },\n    { orgHierarchy: ['C', 'D'] },\n    { orgHierarchy: ['E', 'F', 'G', 'H'] },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        // we're using the auto group column by default!\n        {\n            field: 'groupType',\n            valueGetter: (params) => {\n                return params.data ? 'Provided' : 'Filler';\n            },\n        },\n    ],\n    defaultColDef: {\n        flex: 1,\n    },\n    autoGroupColumnDef: {\n        headerName: 'Organisation Hierarchy',\n        cellRendererParams: {\n            suppressCount: true,\n        },\n    },\n    rowData: rowData,\n    treeData: true, // enable Tree Data mode\n    groupDefaultExpanded: -1, // expand all groups by default\n    getDataPath: (data) => {\n        return data.orgHierarchy;\n    },\n};\n\n// wait for the document to be loaded, otherwise\n// AG Grid will not find the div in the document.\ndocument.addEventListener('DOMContentLoaded', function () {\n    // lookup the container we want the Grid to use\n    var eGridDiv = document.querySelector('#myGrid');\n\n    // create the grid passing in the div to use together with the columns & data we want to use\n    gridApi = agGrid.createGrid(eGridDiv, gridOptions); \n});\n","index.html":"<div id=\"myGrid\" class=\"ag-theme-quartz\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}