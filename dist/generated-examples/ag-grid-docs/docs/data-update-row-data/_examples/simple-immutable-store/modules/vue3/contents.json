{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","styleFiles":[],"files":{"main.js":"\nimport { createApp, onBeforeMount, ref, shallowRef } from 'vue';\nimport { AgGridVue } from '@ag-grid-community/vue3';\nimport '@ag-grid-community/styles/ag-grid.css';\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { ModuleRegistry } from '@ag-grid-community/core';\nimport { RangeSelectionModule } from '@ag-grid-enterprise/range-selection';\nimport { RowGroupingModule } from '@ag-grid-enterprise/row-grouping';\nimport { StatusBarModule } from '@ag-grid-enterprise/status-bar';\nModuleRegistry.registerModules([ClientSideRowModelModule, RangeSelectionModule, RowGroupingModule, StatusBarModule]);\n\n\n\nconst VueExample = {\n    template: `\n        <div style=\"height: 100%\">\n                <div style=\"height: 100%; width: 100%; display: flex; flex-direction: column\">\n      <div>\n        <div style=\"margin-bottom: 5px; min-height: 30px\">\n          <button v-on:click=\"reverseItems()\">Reverse</button>\n          <button v-on:click=\"addFiveItems(true)\">Append</button>\n          <button v-on:click=\"addFiveItems(false)\">Prepend</button>\n          <button v-on:click=\"removeSelected()\">Remove Selected</button>\n          <button v-on:click=\"updatePrices()\">Update Prices</button>\n        </div>\n        <div style=\"margin-bottom: 5px; min-height: 30px\">\n          <button id=\"groupingOn\" v-on:click=\"onGroupingEnabled(true)\">Grouping On</button>\n          <button id=\"groupingOff\" v-on:click=\"onGroupingEnabled(false)\">Grouping Off</button>\n          <button v-on:click=\"setSelectedToGroup('A')\">Move to Group A</button>\n          <button v-on:click=\"setSelectedToGroup('B')\">Move to Group B</button>\n          <button v-on:click=\"setSelectedToGroup('C')\">Move to Group C</button>\n        </div>\n      </div>\n      <div style=\"flex: 1 1 0px\">\n        <ag-grid-vue\n          style=\"width: 100%; height: 100%;\"\n          :class=\"themeClass\"\n          :columnDefs=\"columnDefs\"\n          @grid-ready=\"onGridReady\"\n          :defaultColDef=\"defaultColDef\"\n          :rowSelection=\"rowSelection\"\n          :enableRangeSelection=\"true\"\n          :autoGroupColumnDef=\"autoGroupColumnDef\"\n          :statusBar=\"statusBar\"\n          :groupDefaultExpanded=\"groupDefaultExpanded\"\n          :rowData=\"rowData\"\n          :getRowId=\"getRowId\"></ag-grid-vue>\n        </div>\n      </div>\n        </div>\n    `,\n    components: {\n        'ag-grid-vue': AgGridVue,\n        \n    },\n    setup(props) {\n        const columnDefs = ref([{headerName:\"Symbol\",\nfield:\"symbol\"},{headerName:\"Price\",\nfield:\"price\"},{headerName:\"Group\",\nfield:\"group\"}]);\n        const gridApi = shallowRef();\n        const defaultColDef = ref({\n    width: 250,\n});\n        const rowSelection = ref(null);\nconst autoGroupColumnDef = ref(null);\nconst statusBar = ref(null);\nconst groupDefaultExpanded = ref(null);\nconst rowData = ref(null);\nconst getRowId = ref(null)\n        \n        onBeforeMount(() => {\n            rowSelection.value = 'multiple';\nautoGroupColumnDef.value = {\n    headerName: 'Symbol',\n    cellRenderer: 'agGroupCellRenderer',\n    field: 'symbol',\n};\nstatusBar.value = {\"statusPanels\":[{\"statusPanel\":\"agAggregationComponent\",\"align\":\"right\"}]};\ngroupDefaultExpanded.value = 1;\nrowData.value = immutableStore;\ngetRowId.value = (params) => {\n    return params.data.symbol;\n}            \n        });\n        \n        const addFiveItems = (append) => {\n    const newStore = immutableStore.slice();\n    for (let i = 0; i < 5; i++) {\n        const newItem = createItem();\n        if (append) {\n            newStore.push(newItem);\n        }\n        else {\n            newStore.splice(0, 0, newItem);\n        }\n    }\n    immutableStore = newStore;\n    gridApi.value.setGridOption('rowData', immutableStore);\n};\nconst removeSelected = () => {\n    const selectedRowNodes = gridApi.value.getSelectedNodes();\n    const selectedIds = selectedRowNodes.map(function (rowNode) {\n        return rowNode.id;\n    });\n    immutableStore = immutableStore.filter(function (dataItem) {\n        return selectedIds.indexOf(dataItem.symbol) < 0;\n    });\n    gridApi.value.setGridOption('rowData', immutableStore);\n};\nconst setSelectedToGroup = (newGroup) => {\n    const selectedRowNodes = gridApi.value.getSelectedNodes();\n    const selectedIds = selectedRowNodes.map(function (rowNode) {\n        return rowNode.id;\n    });\n    immutableStore = immutableStore.map(function (dataItem) {\n        const itemSelected = selectedIds.indexOf(dataItem.symbol) >= 0;\n        if (itemSelected) {\n            return {\n                // symbol and price stay the same\n                symbol: dataItem.symbol,\n                price: dataItem.price,\n                // group gets the group\n                group: newGroup,\n            };\n        }\n        else {\n            return dataItem;\n        }\n    });\n    gridApi.value.setGridOption('rowData', immutableStore);\n};\nconst updatePrices = () => {\n    const newStore = [];\n    immutableStore.forEach((item) => {\n        newStore.push({\n            // use same symbol as last time, this is the unique id\n            symbol: item.symbol,\n            // group also stays the same\n            group: item.group,\n            // add random price\n            price: Math.floor(Math.random() * 100),\n        });\n    });\n    immutableStore = newStore;\n    gridApi.value.setGridOption('rowData', immutableStore);\n};\nconst onGroupingEnabled = (enabled) => {\n    setGroupingEnabled(enabled, gridApi.value);\n};\nconst reverseItems = () => {\n    immutableStore.reverse();\n    gridApi.value.setGridOption('rowData', immutableStore);\n};\nconst onGridReady = (params) => {\n        \n        gridApi.value = params.api;\n        \n\n        \n    immutableStore = [];\n    immutableStore = getInitialData();\n    params.api.setGridOption('rowData', immutableStore);\n    setGroupingEnabled(false, params.api);\n\n    };\n                \n        return {\n            columnDefs,\n            gridApi,\n            defaultColDef,\nrowSelection,\nautoGroupColumnDef,\nstatusBar,\ngroupDefaultExpanded,\nrowData,\ngetRowId,\n            onGridReady,\n            themeClass: /** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/,\n            addFiveItems,\nremoveSelected,\nsetSelectedToGroup,\nupdatePrices,\nonGroupingEnabled,\nreverseItems\n        }        \n    }\n}\n\nwindow.getInitialData = function getInitialData() {\n    const data = [];\n    for (let i = 0; i < 5; i++) {\n        data.push(createItem());\n    }\n    return data;\n}\n\nwindow.filter = function filter(list, callback) {\n    const filteredList = [];\n    list.forEach((item) => {\n        if (callback(item)) {\n            filteredList.push(item);\n        }\n    });\n    return filteredList;\n}\n\nwindow.createItem = function createItem() {\n    const item = {\n        group: ['A', 'B', 'C'][Math.floor(Math.random() * 3)],\n        symbol: createUniqueRandomSymbol(),\n        price: Math.floor(Math.random() * 100),\n    };\n    return item;\n}\n\nwindow.setGroupingEnabled = function setGroupingEnabled(enabled, api) {\n    if (enabled) {\n        api.applyColumnState({\n            state: [\n                { colId: 'group', rowGroup: true, hide: true },\n                { colId: 'symbol', hide: true },\n            ],\n        });\n    }\n    else {\n        api.applyColumnState({\n            state: [\n                { colId: 'group', rowGroup: false, hide: false },\n                { colId: 'symbol', hide: false },\n            ],\n        });\n    }\n    setItemVisible('groupingOn', !enabled);\n    setItemVisible('groupingOff', enabled);\n}\n\nwindow.setItemVisible = function setItemVisible(id, visible) {\n    const element = document.querySelector('#' + id);\n    element.style.display = visible ? 'inline' : 'none';\n}\n\nwindow.createUniqueRandomSymbol = // creates a unique symbol, eg 'ADG' or 'ZJD'\nfunction createUniqueRandomSymbol() {\n    let symbol;\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let isUnique = false;\n    while (!isUnique) {\n        symbol = '';\n        // create symbol\n        for (let i = 0; i < 3; i++) {\n            symbol += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        // check uniqueness\n        isUnique = true;\n        immutableStore.forEach((oldItem) => {\n            if (oldItem.symbol === symbol) {\n                isUnique = false;\n            }\n        });\n    }\n    return symbol;\n}\n\nlet immutableStore = [];\n\ncreateApp(VueExample)\n    .mount(\"#app\")\n\n","index.html":"<div style=\"height: 100%; width: 100%; display: flex; flex-direction: column\">\n    <div>\n        <div style=\"margin-bottom: 5px; min-height: 30px\">\n            <button onclick=\"reverseItems()\">Reverse</button>\n            <button onclick=\"addFiveItems(true)\">Append</button>\n            <button onclick=\"addFiveItems(false)\">Prepend</button>\n            <button onclick=\"removeSelected()\">Remove Selected</button>\n            <button onclick=\"updatePrices()\">Update Prices</button>\n        </div>\n        <div style=\"margin-bottom: 5px; min-height: 30px\">\n            <button id=\"groupingOn\" onclick=\"onGroupingEnabled(true)\">Grouping On</button>\n            <button id=\"groupingOff\" onclick=\"onGroupingEnabled(false)\">Grouping Off</button>\n            <button onclick=\"setSelectedToGroup('A')\">Move to Group A</button>\n            <button onclick=\"setSelectedToGroup('B')\">Move to Group B</button>\n            <button onclick=\"setSelectedToGroup('C')\">Move to Group C</button>\n        </div>\n    </div>\n    <div style=\"flex: 1 1 0px\">\n        <div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n    </div>\n</div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n    var sjsPaths = {};\n    if (typeof systemJsPaths !== 'undefined') {\n        sjsPaths = systemJsPaths;\n    }\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...sjsPaths,\n        },\n        map: {\n            css: 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.2.29/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.js',\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            vue: {\n                defaultExtension: 'js',\n            },\n            'vue-class-component': {\n                defaultExtension: 'js',\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'js',\n            },\n            '@ag-grid-community/vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.2.29/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            vue: {\n                defaultExtension: 'js',\n            },\n            'vue-class-component': {\n                defaultExtension: 'js',\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'js',\n            },\n            '@ag-grid-community/vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-locale': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"}}