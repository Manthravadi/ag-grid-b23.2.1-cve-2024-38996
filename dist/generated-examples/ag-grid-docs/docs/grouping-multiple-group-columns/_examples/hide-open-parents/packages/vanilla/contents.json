{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.example-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 5px;\n    display: flex;\n    align-items: center;\n}\n\n.ag-row-level-0 {\n    background-color: #cc222244 !important;\n}\n.ag-row-level-1 {\n    background-color: #33cc3344 !important;\n}\n.ag-row-level-2 {\n    background-color: #2244cc44 !important;\n}\n.legend-item {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border: 1px solid darkgrey;\n}\n.legend-label {\n    position: relative;\n    margin-right: 20px;\n    padding-left: 0.25rem;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        { field: 'country', rowGroup: true, hide: true },\n        {\n            headerName: 'Year',\n            valueGetter: 'data.year',\n            rowGroup: true,\n            hide: true,\n        },\n\n        { field: 'athlete', minWidth: 200 },\n        { field: 'gold', aggFunc: 'sum' },\n        { field: 'silver', aggFunc: 'sum' },\n        { field: 'bronze', aggFunc: 'sum' },\n        { field: 'total', aggFunc: 'sum' },\n    ],\n    defaultColDef: {\n        flex: 1,\n        minWidth: 150,\n        filter: true,\n    },\n    autoGroupColumnDef: {\n        minWidth: 200,\n        filterValueGetter: (params) => {\n            if (params.node) {\n                var colGettingGrouped = params.colDef.showRowGroup + '';\n                return params.api.getCellValue({ colKey: colGettingGrouped, rowNode: params.node });\n            }\n        },\n    },\n    groupHideOpenParents: true,\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => gridApi.setGridOption('rowData', data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <span class=\"legend-item ag-row-level-0\"></span>\n        <span class=\"legend-label\">Top Level Group</span>\n        <span class=\"legend-item ag-row-level-1\"></span>\n        <span class=\"legend-label\">Second Level Group</span>\n        <span class=\"legend-item ag-row-level-2\"></span>\n        <span class=\"legend-label\">Bottom Rows</span>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}