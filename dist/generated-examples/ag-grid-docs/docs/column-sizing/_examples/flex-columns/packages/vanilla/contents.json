{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"var colSpan = function (params) {\n    return params.data === 2 ? 3 : 1;\n};\n\nconst columnDefs = [\n    {\n        headerName: 'A',\n        field: 'author',\n        width: 300,\n        colSpan: colSpan,\n    },\n    {\n        headerName: 'Flexed Columns',\n        children: [\n            {\n                headerName: 'B',\n                minWidth: 200,\n                maxWidth: 350,\n                flex: 2,\n            },\n            {\n                headerName: 'C',\n                flex: 1,\n            },\n        ],\n    },\n];\n\nfunction fillAllCellsWithWidthMeasurement() {\n    Array.prototype.slice.call(document.querySelectorAll('.ag-cell')).forEach((cell) => {\n        var width = cell.offsetWidth;\n        var isFullWidthRow = cell.parentElement.childNodes.length === 1;\n        cell.textContent = (isFullWidthRow ? 'Total width: ' : '') + width + 'px';\n    });\n}\n\nlet gridApi;\n\nconst gridOptions = {\n    columnDefs: columnDefs,\n    rowData: [1, 2],\n    onGridReady: (params) => {\n        setInterval(fillAllCellsWithWidthMeasurement, 50);\n    },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}