{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n    columnDefs: [\n        { field: 'country', rowGroup: true, enableRowGroup: true },\n        {\n            field: 'year',\n            pivot: true,\n            enablePivot: true,\n            pivotComparator: MyYearPivotComparator,\n        },\n        { field: 'date' },\n        { field: 'sport' },\n        { field: 'gold', aggFunc: 'sum' },\n        { field: 'silver', aggFunc: 'sum' },\n        { field: 'bronze', aggFunc: 'sum' },\n    ],\n    defaultColDef: {\n        flex: 1,\n        minWidth: 150,\n        filter: true,\n    },\n    autoGroupColumnDef: {\n        minWidth: 250,\n    },\n    pivotMode: true,\n\n    // we don't want the grid putting in 'sum' in the headers for us\n    suppressAggFuncInHeader: true,\n\n    // this is a callback that gets called on each column definition\n    processPivotResultColDef: (colDef) => {\n        if (colDef.pivotValueColumn && colDef.pivotValueColumn.getId() === 'gold') {\n            colDef.headerName = colDef.headerName ? colDef.headerName.toUpperCase() : undefined;\n        }\n    },\n\n    // this is a callback that gets called on each group definition\n    processPivotResultColGroupDef: (colGroupDef) => {\n        // for fun, add a css class for 2010\n        if (colGroupDef.pivotKeys && colGroupDef.pivotKeys.length && colGroupDef.pivotKeys[0] === '2010') {\n            colGroupDef.headerClass = 'color-background';\n        }\n        // put 'year' in front of each group\n        colGroupDef.headerName = 'Year ' + colGroupDef.headerName;\n    },\n};\n\nfunction MyYearPivotComparator(a, b) {\n    var requiredOrder = ['2012', '2010', '2008', '2006', '2004', '2002', '2000'];\n    return requiredOrder.indexOf(a) - requiredOrder.indexOf(b);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => gridApi.setGridOption('rowData', data));\n});\n","index.html":"<style>\n    .color-background {\n        background-color: #ccaa22a9 !important;\n    }\n</style>\n\n<div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}