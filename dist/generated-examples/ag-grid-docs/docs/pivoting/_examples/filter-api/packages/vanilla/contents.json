{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\n\n\nconst gridOptions = {\n    columnDefs: [\n        { field: 'country', rowGroup: true, enableRowGroup: true },\n        { field: 'year', pivot: true, enablePivot: true },\n        { field: 'date' },\n        { field: 'sport' },\n        { field: 'gold', aggFunc: 'sum' },\n        { field: 'silver', aggFunc: 'sum' },\n        { field: 'bronze', aggFunc: 'sum' },\n    ],\n    defaultColDef: {\n        flex: 1,\n        minWidth: 150,\n        filter: true,\n        floatingFilter: true,\n    },\n    processPivotResultColDef: (colDef) => {\n        colDef.filter = 'agNumberColumnFilter';\n        colDef.floatingFilter = true;\n    },\n    pivotMode: true,\n    sideBar: 'filters',\n};\n\nfunction clearFilter() {\n    gridApi.setFilterModel(null);\n}\n\nfunction filterUsRussiaAustralia() {\n    gridApi.setFilterModel({\n        ...gridApi.getFilterModel(),\n        country: {\n            type: 'set',\n            values: ['United States', 'Russia', 'Australia'],\n        },\n    });\n}\n\nfunction filterCanadaNorwayChinaZimbabweNetherlands() {\n    gridApi.setFilterModel({\n        ...gridApi.getFilterModel(),\n        country: {\n            type: 'set',\n            values: ['Canada', 'Norway', 'China', 'Zimbabwe', 'Netherlands'],\n        },\n    });\n}\n\nfunction filter20042006() {\n    gridApi.setFilterModel({\n        ...gridApi.getFilterModel(),\n        year: {\n            type: 'set',\n            values: ['2004', '2006'],\n        },\n    });\n}\n\nfunction filter200820102012() {\n    gridApi.setFilterModel({\n        ...gridApi.getFilterModel(),\n        year: {\n            type: 'set',\n            values: ['2008', '2010', '2012'],\n        },\n    });\n}\n\nfunction filterClearYears() {\n    gridApi.setFilterModel({\n        ...gridApi.getFilterModel(),\n        year: undefined,\n    });\n}\n\nfunction filterSwimmingHockey() {\n    gridApi.setFilterModel({\n        ...gridApi.getFilterModel(),\n        sport: {\n            type: 'set',\n            values: ['Swimming', 'Hockey'],\n        },\n    });\n}\n\nfunction filterHockeyIceHockey() {\n    gridApi.setFilterModel({\n        ...gridApi.getFilterModel(),\n        sport: {\n            type: 'set',\n            values: ['Hockey', 'Ice Hockey'],\n        },\n    });\n}\n\nfunction filterEveryYearGold() {\n    const goldPivotCols = gridApi\n        .getPivotResultColumns()\n        .filter((col) => col.getColDef().pivotValueColumn.getColId() === 'gold');\n    if (goldPivotCols) {\n        const newOpts = goldPivotCols.reduce((acc, col) => {\n            acc[col.getId()] = {\n                filter: 0,\n                filterType: 'number',\n                type: 'greaterThan',\n            };\n            return acc;\n        }, gridApi.getFilterModel() || {});\n        gridApi.setFilterModel(newOpts);\n    }\n}\n\nfunction filter2000Silver() {\n    const targetCol = gridApi.getPivotResultColumn(['2000'], 'silver');\n    if (targetCol) {\n        gridApi.setFilterModel({\n            ...gridApi.getFilterModel(),\n            [targetCol.getId()]: {\n                filterType: 'number',\n                type: 'notBlank',\n            },\n        });\n    }\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n    const gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n    fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n        .then((response) => response.json())\n        .then((data) => gridApi.setGridOption('rowData', data));\n});\n","index.html":"<div class=\"test-container\" style=\"height: 100%; display: flex; flex-direction: column\">\n    <div class=\"test-header\">\n        <div style=\"margin-bottom: 10px\">\n            <button onclick=\"clearFilter()\">Clear Filters</button>\n        </div>\n        <div>Primary Column Filters</div>\n        <div style=\"margin-bottom: 10px\">\n            <div style=\"margin-bottom: 5px\">\n                <button onclick=\"filterUsRussiaAustralia()\">Country: US, Russia &amp; Australia</button>\n                <button onclick=\"filterCanadaNorwayChinaZimbabweNetherlands()\">\n                    Country: Canada, Norway, China, Zimbabwe &amp; Netherlands\n                </button>\n            </div>\n            <div style=\"margin-bottom: 5px\">\n                <button onclick=\"filter20042006()\">Year: 2004 &amp; 2006</button>\n                <button onclick=\"filter200820102012()\">Year: 2008, 2010 &amp; 2012</button>\n                <button onclick=\"filterClearYears()\">Year: Clear filter</button>\n            </div>\n            <div>\n                <button onclick=\"filterSwimmingHockey()\">Sport: Swimming &amp; Hockey</button>\n                <button onclick=\"filterHockeyIceHockey()\">Sport: Hockey &amp; Ice Hockey</button>\n            </div>\n        </div>\n        <div>Secondary Column Filters</div>\n        <div style=\"margin-bottom: 10px\">\n            <div style=\"margin-bottom: 5px\">\n                <button onclick=\"filterEveryYearGold()\">All gold: > 0</button>\n                <button onclick=\"filter2000Silver()\">Year 2000, Silver: Not blank</button>\n            </div>\n        </div>\n    </div>\n    <div id=\"myGrid\" style=\"flex-grow: 1\" class=\"ag-theme-quartz\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}