{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"var ALPHABET = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\nfunction getColumnDefs() {\n    const columnDefs = [\n        { checkboxSelection: true, headerName: '', width: 60 },\n        { headerName: '#', width: 80, valueGetter: 'node.rowIndex' },\n    ];\n\n    ALPHABET.forEach((letter) => {\n        columnDefs.push({\n            headerName: letter.toUpperCase(),\n            field: letter,\n            width: 150,\n        });\n    });\n    return columnDefs;\n}\n\nlet gridApi;\n\nconst gridOptions = {\n    columnDefs: getColumnDefs(),\n    rowModelType: 'infinite',\n    rowSelection: 'multiple',\n    maxBlocksInCache: 2,\n    suppressRowClickSelection: true,\n    getRowId: (params) => {\n        return params.data.a;\n    },\n    datasource: getDataSource(100),\n    defaultColDef: {\n        sortable: false,\n    },\n};\n\nfunction getDataSource(count) {\n    const dataSource = {\n        rowCount: count,\n        getRows: (params) => {\n            var rowsThisPage = [];\n\n            for (var rowIndex = params.startRow; rowIndex < params.endRow; rowIndex++) {\n                var record = {};\n                ALPHABET.forEach(function (letter, colIndex) {\n                    var randomNumber = 17 + rowIndex + colIndex;\n                    var cellKey = letter.toUpperCase() + (rowIndex + 1);\n                    record[letter] = cellKey + ' = ' + randomNumber;\n                });\n                rowsThisPage.push(record);\n            }\n\n            // to mimic server call, we reply after a short delay\n            setTimeout(() => {\n                // no need to pass the second 'rowCount' parameter as we have already provided it\n                params.successCallback(rowsThisPage);\n            }, 100);\n        },\n    };\n    return dataSource;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    var gridDiv = document.querySelector('#myGrid');\n    gridApi = agGrid.createGrid(gridDiv, gridOptions); \n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\" class=\"ag-theme-quartz\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.3.1","ag-grid-charts-enterprise":"^31.3.1"}}}