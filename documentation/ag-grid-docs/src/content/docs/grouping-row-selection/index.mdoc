---
title: "Row Grouping - Selecting Groups"
enterprise: true
---
When doing grouping, you control what selecting a group means. This is controlled with the `groupSelects` property of the `selectionOptions` grid property.

{% note %}
{% if isFramework("javascript") %}
This describes the new selection configuration API. For documentation on the deprecated API, [click here](/archive/32.1.0/javascript-data-grid/row-selection#group-selection).
{% /if %}
{% if isFramework("react") %}
This describes the new selection configuration API. For documentation on the deprecated API, [click here](/archive/32.1.0/react-data-grid/row-selection#group-selection).
{% /if %}
{% if isFramework("angular") %}
This describes the new selection configuration API. For documentation on the deprecated API, [click here](/archive/32.1.0/angular-data-grid/row-selection#group-selection).
{% /if %}
{% if isFramework("vue") %}
This describes the new selection configuration API. For documentation on the deprecated API, [click here](/archive/32.1.0/vue-data-grid/row-selection#group-selection).
{% /if %}
{% /note %}

{% apiDocumentation source="grid-options/properties.json" section="selection" names=["selectionOptions"] /%}

There are three values of `groupSelects`, corresponding to three modes of operation for selection of row groups:
- `'self'`: Selecting a row group selects only that row and none of the rows within the group.
- `'descendants'`: Selecting a row group recursively selects all rows within the group. The group row will also display as selected. When any of the descendants of the group row are deselected, the group row will display as "indeterminate". In this mode, the group row node will not be part of the selected nodes returned from `api.getSelectedNodes()`.
- `'filteredDescendants'`: As for `'descendants'`, but only those grouped rows that satisfy the currently active filter will be selected/unselected. Note in particular that when some rows are filtered out of a group, selecting that group row will leave it in an indeterminate state.

{% gridExampleRunner title="Group Selection" name="group-selection" /%}

Use the controls above the grid to explore the effects of different values for `groupSelects`. For example, try the following:
1. Select `'filteredDescendants'` from the "Group Selects" dropdown
1. Type in a filter
1. Select a group
1. Notice that all filtered rows get selected. If you remove the filter, the non-filtered rows are not selected.
1. Notice that the group checkbox becomes indeterminate even while all its filtered descendants are selected. This is because the selected state of the group node is independent of the filter, so it becomes indeterminate since not all of its descendants are selected.

## Preventing Leaf Nodes from Being Selected

The example below is similar to the previous example except it does not put checkboxes on the leaf level nodes, allowing only entire groups to be selected. This is achieved by providing functions for `selectionOptions.checkboxes` and `autoGroupColumnDef.cellRendererParams.checkbox`.

{% gridExampleRunner title="Prevent Leaf Nodes from Being Selected" name="prevent-leaf-node-selection" /%}

## API Reference

See the API reference in [Row Selection](./row-selection#api-reference).
