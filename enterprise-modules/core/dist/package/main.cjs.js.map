{
  "version": 3,
  "sources": ["../../src/main.ts", "../../src/agGridEnterpriseModule.ts", "../../src/license/gridLicenseManager.ts", "../../src/license/shared/licenseManager.ts", "../../src/license/shared/md5.ts", "../../src/license/watermark.ts", "../../src/version.ts", "../../src/widgets/agMenuItemRenderer.ts", "../../src/widgets/agGroupComponent.ts", "../../src/widgets/agRichSelect.ts", "../../src/widgets/AgPillContainer.ts", "../../src/widgets/agPill.ts", "../../src/widgets/agRichSelectList.ts", "../../src/widgets/agRichSelectRow.ts", "../../src/widgets/virtualList.ts", "../../src/widgets/pillDragComp.ts", "../../src/widgets/pillDropZonePanel.ts", "../../src/widgets/agDialog.ts", "../../src/widgets/agPanel.ts", "../../src/widgets/agMenuItemComponent.ts", "../../src/widgets/agMenuList.ts", "../../src/widgets/agMenuPanel.ts", "../../src/features/virtualListDragFeature.ts", "../../src/widgets/tabbedLayout.ts", "../../src/rendering/groupCellRenderer.ts", "../../src/rendering/groupCellRendererCtrl.ts"],
  "sourcesContent": ["export { EnterpriseCoreModule } from './agGridEnterpriseModule';\nexport { GridLicenseManager as LicenseManager } from './license/gridLicenseManager';\nexport { ILicenseManager } from './license/shared/licenseManager';\n\n// widgets shared across enterprise modules\nexport { AgGroupComponent, AgGroupComponentSelector, AgGroupComponentParams } from './widgets/agGroupComponent';\nexport { AgRichSelect } from './widgets/agRichSelect';\nexport { PillDragComp } from './widgets/pillDragComp';\nexport { PillDropZonePanel, PillDropZonePanelParams } from './widgets/pillDropZonePanel';\nexport { AgDialog } from './widgets/agDialog';\nexport { AgPanel } from './widgets/agPanel';\nexport { VirtualList } from './widgets/virtualList';\nexport { VirtualListModel } from './widgets/iVirtualList';\n\nexport { AgMenuItemComponent, MenuItemActivatedEvent, CloseMenuEvent } from './widgets/agMenuItemComponent';\nexport { AgMenuList } from './widgets/agMenuList';\nexport { AgMenuPanel } from './widgets/agMenuPanel';\nexport { AgMenuItemRenderer } from './widgets/agMenuItemRenderer';\n\nexport { VirtualListDragItem, VirtualListDragParams } from './features/iVirtualListDragFeature';\nexport { VirtualListDragFeature } from './features/virtualListDragFeature';\n\nexport { TabbedItem } from './widgets/iTabbedLayout';\nexport { TabbedLayout } from './widgets/tabbedLayout';\n\nexport { GroupCellRenderer } from './rendering/groupCellRenderer';\nexport { GroupCellRendererCtrl } from './rendering/groupCellRendererCtrl';\n", "import type { Module } from '@ag-grid-community/core';\nimport { ModuleNames } from '@ag-grid-community/core';\n\nimport { GridLicenseManager as LicenseManager } from './license/gridLicenseManager';\nimport { VERSION } from './version';\nimport { AgMenuItemRenderer } from './widgets/agMenuItemRenderer';\n\nexport { AgWatermark } from './license/watermark';\n\nexport const EnterpriseCoreModule: Module = {\n    version: VERSION,\n    moduleName: ModuleNames.EnterpriseCoreModule,\n    beans: [LicenseManager],\n    userComponents: [\n        {\n            name: 'agMenuItem',\n            classImp: AgMenuItemRenderer,\n        },\n    ],\n};\n", "import type { ComponentSelector, IWatermark, NamedBean } from '@ag-grid-community/core';\nimport { BeanStub } from '@ag-grid-community/core';\n\nimport type { ILicenseManager } from './shared/licenseManager';\nimport { LicenseManager } from './shared/licenseManager';\nimport { AgWatermarkSelector } from './watermark';\n\nexport class GridLicenseManager extends BeanStub implements NamedBean, IWatermark {\n    beanName = 'licenseManager' as const;\n\n    private licenseManager: LicenseManager;\n\n    public postConstruct(): void {\n        this.validateLicense();\n    }\n\n    public validateLicense(): void {\n        this.licenseManager = new LicenseManager(this.gos.getDocument());\n        this.licenseManager.validateLicense();\n    }\n\n    static getLicenseDetails(licenseKey: string) {\n        return new LicenseManager(null as any).getLicenseDetails(licenseKey);\n    }\n\n    public getWatermarkSelector(): ComponentSelector {\n        return AgWatermarkSelector;\n    }\n\n    public isDisplayWatermark(): boolean {\n        return this.licenseManager.isDisplayWatermark();\n    }\n\n    public getWatermarkMessage(): string {\n        return this.licenseManager.getWatermarkMessage();\n    }\n\n    static setLicenseKey(licenseKey: string): void {\n        LicenseManager.setLicenseKey(licenseKey);\n    }\n\n    static setChartsLicenseManager(chartsLicenseManager: ILicenseManager) {\n        LicenseManager.setChartsLicenseManager(chartsLicenseManager);\n    }\n}\n", "import { _missingOrEmpty } from '@ag-grid-community/core';\n\nimport { MD5 } from './md5';\n\nconst LICENSE_TYPES = {\n    '01': 'GRID',\n    '02': 'CHARTS',\n    '0102': 'BOTH',\n};\n\nexport interface ILicenseManager {\n    setLicenseKey: (key?: string, gridContext?: boolean) => void;\n}\n\nexport class LicenseManager {\n    private static RELEASE_INFORMATION: string = 'MTcxMzkwNjIwOTM2OA==';\n    private static licenseKey: string;\n    private static chartsLicenseManager?: ILicenseManager;\n    private watermarkMessage: string | undefined = undefined;\n\n    private md5: MD5;\n    private document: Document;\n\n    private totalMessageLength = 124;\n\n    constructor(document: Document) {\n        this.document = document;\n\n        this.md5 = new MD5();\n        this.md5.init();\n    }\n\n    public validateLicense(): void {\n        const licenseDetails = this.getLicenseDetails(LicenseManager.licenseKey);\n        const currentLicenseName = `AG Grid ${licenseDetails.currentLicenseType === 'BOTH' ? 'and AG Charts ' : ''}Enterprise`;\n        const suppliedLicenseName =\n            licenseDetails.suppliedLicenseType === undefined\n                ? ''\n                : `AG ${licenseDetails.suppliedLicenseType === 'BOTH' ? 'Grid and AG Charts' : licenseDetails.suppliedLicenseType === 'GRID' ? 'Grid' : 'Charts'} Enterprise`;\n\n        if (licenseDetails.missing) {\n            if (!this.isWebsiteUrl() || this.isForceWatermark()) {\n                this.outputMissingLicenseKey(currentLicenseName);\n            }\n        } else if (licenseDetails.expired) {\n            const gridReleaseDate = LicenseManager.getGridReleaseDate();\n            const formattedReleaseDate = LicenseManager.formatDate(gridReleaseDate);\n            this.outputExpiredKey(licenseDetails.expiry, formattedReleaseDate, currentLicenseName, suppliedLicenseName);\n        } else if (!licenseDetails.valid) {\n            this.outputInvalidLicenseKey(\n                !!licenseDetails.incorrectLicenseType,\n                currentLicenseName,\n                suppliedLicenseName\n            );\n        } else if (licenseDetails.isTrial && licenseDetails.trialExpired) {\n            this.outputExpiredTrialKey(licenseDetails.expiry, currentLicenseName, suppliedLicenseName);\n        }\n    }\n\n    private static extractExpiry(license: string) {\n        const restrictionHashed = license.substring(license.lastIndexOf('_') + 1, license.length);\n        return new Date(parseInt(LicenseManager.decode(restrictionHashed), 10));\n    }\n\n    private static extractLicenseComponents(licenseKey: string) {\n        // when users copy the license key from a PDF extra zero width characters are sometimes copied too\n        // carriage returns and line feeds are problematic too\n        // all of which causes license key validation to fail - strip these out\n        let cleanedLicenseKey = licenseKey.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\n        cleanedLicenseKey = cleanedLicenseKey.replace(/\\r?\\n|\\r/g, '');\n\n        // the hash that follows the key is 32 chars long\n        if (licenseKey.length <= 32) {\n            return { md5: null, license: licenseKey, version: null, isTrial: null };\n        }\n\n        const hashStart = cleanedLicenseKey.length - 32;\n        const md5 = cleanedLicenseKey.substring(hashStart);\n        const license = cleanedLicenseKey.substring(0, hashStart);\n        const [version, isTrial, type] = LicenseManager.extractBracketedInformation(cleanedLicenseKey);\n        return { md5, license, version, isTrial, type };\n    }\n\n    public getLicenseDetails(licenseKey: string) {\n        const currentLicenseType = LicenseManager.chartsLicenseManager ? 'BOTH' : 'GRID';\n        if (_missingOrEmpty(licenseKey)) {\n            return {\n                licenseKey,\n                valid: false,\n                missing: true,\n                currentLicenseType,\n            };\n        }\n\n        const gridReleaseDate = LicenseManager.getGridReleaseDate();\n        const { md5, license, version, isTrial, type } = LicenseManager.extractLicenseComponents(licenseKey);\n        let valid = md5 === this.md5.md5(license) && licenseKey.indexOf('For_Trialing_ag-Grid_Only') === -1;\n        let trialExpired: undefined | boolean = undefined;\n        let expired: undefined | boolean = undefined;\n        let expiry: Date | null = null;\n        let incorrectLicenseType = false;\n        let suppliedLicenseType: undefined | string = undefined;\n\n        function handleTrial() {\n            const now = new Date();\n            trialExpired = expiry! < now;\n            expired = undefined;\n        }\n\n        if (valid) {\n            expiry = LicenseManager.extractExpiry(license);\n            valid = !isNaN(expiry.getTime());\n\n            if (valid) {\n                expired = gridReleaseDate > expiry;\n\n                switch (version) {\n                    case 'legacy':\n                    case '2': {\n                        if (isTrial) {\n                            handleTrial();\n                        }\n                        break;\n                    }\n                    case '3': {\n                        if (_missingOrEmpty(type)) {\n                            valid = false;\n                        } else {\n                            suppliedLicenseType = type;\n                            if (\n                                (type !== LICENSE_TYPES['01'] && type !== LICENSE_TYPES['0102']) ||\n                                (currentLicenseType === 'BOTH' && suppliedLicenseType !== 'BOTH')\n                            ) {\n                                valid = false;\n                                incorrectLicenseType = true;\n                            } else if (isTrial) {\n                                handleTrial();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (!valid) {\n            return {\n                licenseKey,\n                valid,\n                incorrectLicenseType,\n                currentLicenseType,\n                suppliedLicenseType,\n            };\n        }\n\n        return {\n            licenseKey,\n            valid,\n            expiry: LicenseManager.formatDate(expiry),\n            expired,\n            version,\n            isTrial,\n            trialExpired,\n            incorrectLicenseType,\n            currentLicenseType,\n            suppliedLicenseType,\n        };\n    }\n\n    public isDisplayWatermark(): boolean {\n        return (\n            this.isForceWatermark() ||\n            (!this.isLocalhost() && !this.isWebsiteUrl() && !_missingOrEmpty(this.watermarkMessage))\n        );\n    }\n\n    public getWatermarkMessage(): string {\n        return this.watermarkMessage || '';\n    }\n\n    private getHostname(): string {\n        const win = this.document.defaultView || window;\n        const loc = win.location;\n        const { hostname = '' } = loc;\n\n        return hostname;\n    }\n\n    private isForceWatermark(): boolean {\n        const win = this.document.defaultView || window;\n        const loc = win.location;\n        const { pathname } = loc;\n\n        return pathname ? pathname.indexOf('forceWatermark') !== -1 : false;\n    }\n\n    private isWebsiteUrl(): boolean {\n        const hostname = this.getHostname();\n        return hostname.match(/^((?:[\\w-]+\\.)?ag-grid\\.com)$/) !== null;\n    }\n\n    private isLocalhost(): boolean {\n        const hostname = this.getHostname();\n        return hostname.match(/^(?:127\\.0\\.0\\.1|localhost)$/) !== null;\n    }\n\n    private static formatDate(date: any): string {\n        const monthNames: string[] = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n\n        const day = date.getDate();\n        const monthIndex = date.getMonth();\n        const year = date.getFullYear();\n\n        return day + ' ' + monthNames[monthIndex] + ' ' + year;\n    }\n\n    private static getGridReleaseDate() {\n        return new Date(parseInt(LicenseManager.decode(LicenseManager.RELEASE_INFORMATION), 10));\n    }\n\n    private static decode(input: string): string {\n        const keystr: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        let t = '';\n        let n: any, r: any, i: any;\n        let s: any, o: any, u: any, a: any;\n        let f: number = 0;\n        const e: string = input.replace(/[^A-Za-z0-9+/=]/g, '');\n        while (f < e.length) {\n            s = keystr.indexOf(e.charAt(f++));\n            o = keystr.indexOf(e.charAt(f++));\n            u = keystr.indexOf(e.charAt(f++));\n            a = keystr.indexOf(e.charAt(f++));\n            n = (s << 2) | (o >> 4);\n            r = ((o & 15) << 4) | (u >> 2);\n            i = ((u & 3) << 6) | a;\n            t = t + String.fromCharCode(n);\n            if (u != 64) {\n                t = t + String.fromCharCode(r);\n            }\n            if (a != 64) {\n                t = t + String.fromCharCode(i);\n            }\n        }\n        t = LicenseManager.utf8_decode(t);\n        return t;\n    }\n\n    private static utf8_decode(input: string): string {\n        input = input.replace(/rn/g, 'n');\n        let t = '';\n        for (let n = 0; n < input.length; n++) {\n            const r = input.charCodeAt(n);\n            if (r < 128) {\n                t += String.fromCharCode(r);\n            } else if (r > 127 && r < 2048) {\n                t += String.fromCharCode((r >> 6) | 192);\n                t += String.fromCharCode((r & 63) | 128);\n            } else {\n                t += String.fromCharCode((r >> 12) | 224);\n                t += String.fromCharCode(((r >> 6) & 63) | 128);\n                t += String.fromCharCode((r & 63) | 128);\n            }\n        }\n        return t;\n    }\n\n    static setChartsLicenseManager(dependantLicenseManager: ILicenseManager): void {\n        this.chartsLicenseManager = dependantLicenseManager;\n    }\n\n    static setLicenseKey(licenseKey: string): void {\n        this.licenseKey = licenseKey;\n\n        if (this.chartsLicenseManager) {\n            this.chartsLicenseManager.setLicenseKey(licenseKey, true);\n        }\n    }\n\n    private static extractBracketedInformation(licenseKey: string): [string | null, boolean | null, string?] {\n        // legacy no trial key\n        if (!licenseKey.includes('[')) {\n            return ['legacy', false, undefined];\n        }\n\n        const matches = licenseKey.match(/\\[(.*?)\\]/g)!.map((match) => match.replace('[', '').replace(']', ''));\n        if (!matches || matches.length === 0) {\n            return ['legacy', false, undefined];\n        }\n\n        const isTrial = matches.filter((match) => match === 'TRIAL').length === 1;\n        const rawVersion = matches.filter((match) => match.indexOf('v') === 0)[0];\n        const version = rawVersion ? rawVersion.replace('v', '') : 'legacy';\n        const type = (LICENSE_TYPES as any)[matches.filter((match) => (LICENSE_TYPES as any)[match])[0]];\n\n        return [version, isTrial, type];\n    }\n\n    private centerPadAndOutput(input: string) {\n        const paddingRequired = this.totalMessageLength - input.length;\n        console.error(input.padStart(paddingRequired / 2 + input.length, '*').padEnd(this.totalMessageLength, '*'));\n    }\n\n    private padAndOutput(input: string, padding = '*', terminateWithPadding = '') {\n        console.error(\n            input.padEnd(this.totalMessageLength - terminateWithPadding.length, padding) + terminateWithPadding\n        );\n    }\n\n    private outputInvalidLicenseKey(\n        incorrectLicenseType: boolean,\n        currentLicenseName: string,\n        suppliedLicenseName: string\n    ) {\n        if (incorrectLicenseType) {\n            // TC4, TC5,TC10\n            this.centerPadAndOutput('');\n            this.centerPadAndOutput(` ${currentLicenseName} License `);\n            this.centerPadAndOutput(' Incompatible License Key ');\n            this.padAndOutput(\n                `* Your license key is for ${suppliedLicenseName} only and does not cover you for ${currentLicenseName}.`,\n                ' ',\n                '*'\n            );\n            this.padAndOutput('* Please contact info@ag-grid.com to obtain a combined license key.', ' ', '*');\n            this.centerPadAndOutput('');\n            this.centerPadAndOutput('');\n        } else {\n            // TC3, TC9\n            this.centerPadAndOutput('');\n            this.centerPadAndOutput(` ${currentLicenseName} License `);\n            this.centerPadAndOutput(' Invalid License Key ');\n            this.padAndOutput(\n                `* Your license key is not valid - please contact info@ag-grid.com to obtain a valid license.`,\n                ' ',\n                '*'\n            );\n            this.centerPadAndOutput('');\n            this.centerPadAndOutput('');\n        }\n\n        this.watermarkMessage = 'Invalid License';\n    }\n\n    private outputExpiredTrialKey(\n        formattedExpiryDate: string,\n        currentLicenseName: string,\n        suppliedLicenseName: string\n    ) {\n        // TC14\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput(` ${currentLicenseName} License `);\n        this.centerPadAndOutput(' Trial Period Expired. ');\n        this.padAndOutput(\n            `* Your trial only license for ${suppliedLicenseName} expired on ${formattedExpiryDate}.`,\n            ' ',\n            '*'\n        );\n        this.padAndOutput('* Please email info@ag-grid.com to purchase a license.', ' ', '*');\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput('');\n\n        this.watermarkMessage = 'Trial Period Expired';\n    }\n\n    private outputMissingLicenseKey(currentLicenseName: string) {\n        // TC6, TC12\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput(` ${currentLicenseName} License `);\n        this.centerPadAndOutput(' License Key Not Found ');\n        this.padAndOutput(`* All ${currentLicenseName} features are unlocked for trial.`, ' ', '*');\n        this.padAndOutput(\n            '* If you want to hide the watermark please email info@ag-grid.com for a trial license key.',\n            ' ',\n            '*'\n        );\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput('');\n\n        this.watermarkMessage = 'For Trial Use Only';\n    }\n\n    private outputExpiredKey(\n        formattedExpiryDate: string,\n        formattedReleaseDate: string,\n        currentLicenseName: string,\n        suppliedLicenseName: string\n    ) {\n        // TC2\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput(` ${currentLicenseName} License `);\n        this.centerPadAndOutput(' Incompatible Software Version ');\n        this.padAndOutput(\n            `* Your license key works with versions of ${suppliedLicenseName} released before ${formattedExpiryDate}.`,\n            ' ',\n            '*'\n        );\n        this.padAndOutput(`* The version you are trying to use was released on ${formattedReleaseDate}.`, ' ', '*');\n        this.padAndOutput('* Please contact info@ag-grid.com to renew your license key.', ' ', '*');\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput('');\n\n        this.watermarkMessage = 'License Expired';\n    }\n}\n", "export class MD5 {\n    private ieCompatibility = false;\n\n    public init(): void {\n        this.ieCompatibility = this.md5('hello') != '5d41402abc4b2a76b9719d911017c592';\n    }\n\n    private md5cycle(x: any, k: any) {\n        let a: any = x[0],\n            b: any = x[1],\n            c: any = x[2],\n            d: any = x[3];\n\n        a = this.ff(a, b, c, d, k[0], 7, -680876936);\n        d = this.ff(d, a, b, c, k[1], 12, -389564586);\n        c = this.ff(c, d, a, b, k[2], 17, 606105819);\n        b = this.ff(b, c, d, a, k[3], 22, -1044525330);\n        a = this.ff(a, b, c, d, k[4], 7, -176418897);\n        d = this.ff(d, a, b, c, k[5], 12, 1200080426);\n        c = this.ff(c, d, a, b, k[6], 17, -1473231341);\n        b = this.ff(b, c, d, a, k[7], 22, -45705983);\n        a = this.ff(a, b, c, d, k[8], 7, 1770035416);\n        d = this.ff(d, a, b, c, k[9], 12, -1958414417);\n        c = this.ff(c, d, a, b, k[10], 17, -42063);\n        b = this.ff(b, c, d, a, k[11], 22, -1990404162);\n        a = this.ff(a, b, c, d, k[12], 7, 1804603682);\n        d = this.ff(d, a, b, c, k[13], 12, -40341101);\n        c = this.ff(c, d, a, b, k[14], 17, -1502002290);\n        b = this.ff(b, c, d, a, k[15], 22, 1236535329);\n\n        a = this.gg(a, b, c, d, k[1], 5, -165796510);\n        d = this.gg(d, a, b, c, k[6], 9, -1069501632);\n        c = this.gg(c, d, a, b, k[11], 14, 643717713);\n        b = this.gg(b, c, d, a, k[0], 20, -373897302);\n        a = this.gg(a, b, c, d, k[5], 5, -701558691);\n        d = this.gg(d, a, b, c, k[10], 9, 38016083);\n        c = this.gg(c, d, a, b, k[15], 14, -660478335);\n        b = this.gg(b, c, d, a, k[4], 20, -405537848);\n        a = this.gg(a, b, c, d, k[9], 5, 568446438);\n        d = this.gg(d, a, b, c, k[14], 9, -1019803690);\n        c = this.gg(c, d, a, b, k[3], 14, -187363961);\n        b = this.gg(b, c, d, a, k[8], 20, 1163531501);\n        a = this.gg(a, b, c, d, k[13], 5, -1444681467);\n        d = this.gg(d, a, b, c, k[2], 9, -51403784);\n        c = this.gg(c, d, a, b, k[7], 14, 1735328473);\n        b = this.gg(b, c, d, a, k[12], 20, -1926607734);\n\n        a = this.hh(a, b, c, d, k[5], 4, -378558);\n        d = this.hh(d, a, b, c, k[8], 11, -2022574463);\n        c = this.hh(c, d, a, b, k[11], 16, 1839030562);\n        b = this.hh(b, c, d, a, k[14], 23, -35309556);\n        a = this.hh(a, b, c, d, k[1], 4, -1530992060);\n        d = this.hh(d, a, b, c, k[4], 11, 1272893353);\n        c = this.hh(c, d, a, b, k[7], 16, -155497632);\n        b = this.hh(b, c, d, a, k[10], 23, -1094730640);\n        a = this.hh(a, b, c, d, k[13], 4, 681279174);\n        d = this.hh(d, a, b, c, k[0], 11, -358537222);\n        c = this.hh(c, d, a, b, k[3], 16, -722521979);\n        b = this.hh(b, c, d, a, k[6], 23, 76029189);\n        a = this.hh(a, b, c, d, k[9], 4, -640364487);\n        d = this.hh(d, a, b, c, k[12], 11, -421815835);\n        c = this.hh(c, d, a, b, k[15], 16, 530742520);\n        b = this.hh(b, c, d, a, k[2], 23, -995338651);\n\n        a = this.ii(a, b, c, d, k[0], 6, -198630844);\n        d = this.ii(d, a, b, c, k[7], 10, 1126891415);\n        c = this.ii(c, d, a, b, k[14], 15, -1416354905);\n        b = this.ii(b, c, d, a, k[5], 21, -57434055);\n        a = this.ii(a, b, c, d, k[12], 6, 1700485571);\n        d = this.ii(d, a, b, c, k[3], 10, -1894986606);\n        c = this.ii(c, d, a, b, k[10], 15, -1051523);\n        b = this.ii(b, c, d, a, k[1], 21, -2054922799);\n        a = this.ii(a, b, c, d, k[8], 6, 1873313359);\n        d = this.ii(d, a, b, c, k[15], 10, -30611744);\n        c = this.ii(c, d, a, b, k[6], 15, -1560198380);\n        b = this.ii(b, c, d, a, k[13], 21, 1309151649);\n        a = this.ii(a, b, c, d, k[4], 6, -145523070);\n        d = this.ii(d, a, b, c, k[11], 10, -1120210379);\n        c = this.ii(c, d, a, b, k[2], 15, 718787259);\n        b = this.ii(b, c, d, a, k[9], 21, -343485551);\n\n        x[0] = this.add32(a, x[0]);\n        x[1] = this.add32(b, x[1]);\n        x[2] = this.add32(c, x[2]);\n        x[3] = this.add32(d, x[3]);\n    }\n\n    private cmn(q: any, a: any, b: any, x: any, s: any, t: any) {\n        a = this.add32(this.add32(a, q), this.add32(x, t));\n        return this.add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    private ff(a: any, b: any, c: any, d: any, x: any, s: any, t: any) {\n        return this.cmn((b & c) | (~b & d), a, b, x, s, t);\n    }\n\n    private gg(a: any, b: any, c: any, d: any, x: any, s: any, t: any) {\n        return this.cmn((b & d) | (c & ~d), a, b, x, s, t);\n    }\n\n    private hh(a: any, b: any, c: any, d: any, x: any, s: any, t: any) {\n        return this.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    private ii(a: any, b: any, c: any, d: any, x: any, s: any, t: any) {\n        return this.cmn(c ^ (b | ~d), a, b, x, s, t);\n    }\n\n    private md51(s: any) {\n        const n: any = s.length;\n        const state: any = [1732584193, -271733879, -1732584194, 271733878];\n        let i: any;\n        for (i = 64; i <= s.length; i += 64) {\n            this.md5cycle(state, this.md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        const tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < s.length; i++) {\n            tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n        }\n        tail[i >> 2] |= 0x80 << (i % 4 << 3);\n        if (i > 55) {\n            this.md5cycle(state, tail);\n            for (i = 0; i < 16; i++) {\n                tail[i] = 0;\n            }\n        }\n        tail[14] = n * 8;\n        this.md5cycle(state, tail);\n        return state;\n    }\n\n    /* there needs to be support for Unicode here, * unless we pretend that we can redefine the MD-5\n     * algorithm for multi-byte characters (perhaps by adding every four 16-bit characters and\n     * shortening the sum to 32 bits). Otherwise I suthis.ggest performing MD-5 as if every character\n     * was two bytes--e.g., 0040 0025 = @%--but then how will an ordinary MD-5 sum be matched?\n     * There is no way to standardize text to something like UTF-8 before transformation; speed cost is\n     * utterly prohibitive. The JavaScript standard itself needs to look at this: it should start\n     * providing access to strings as preformed UTF-8 8-bit unsigned value arrays.\n     */\n    private md5blk(s: any) {\n        /* I figured global was faster.   */\n        const md5blks: any = [];\n\n        /* Andy King said do it this way. */\n        for (let i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] =\n                s.charCodeAt(i) +\n                (s.charCodeAt(i + 1) << 8) +\n                (s.charCodeAt(i + 2) << 16) +\n                (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    private rhex(n: any) {\n        const hex_chr: any = '0123456789abcdef'.split('');\n        let s: string = '',\n            j: any = 0;\n        for (; j < 4; j++) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0f] + hex_chr[(n >> (j * 8)) & 0x0f];\n        }\n        return s;\n    }\n\n    private hex(x: any) {\n        for (let i: any = 0; i < x.length; i++) {\n            x[i] = this.rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    public md5(s: any) {\n        return this.hex(this.md51(s));\n    }\n\n    private add32(a: any, b: any) {\n        return this.ieCompatibility ? this.add32Compat(a, b) : this.add32Std(a, b);\n    }\n\n    /* this function is much faster, so if possible we use it. Some IEs are the only ones I know of that\n     need the idiotic second function, generated by an if clause.  */\n    private add32Std(a: any, b: any) {\n        return (a + b) & 0xffffffff;\n    }\n\n    private add32Compat(x: any, y: any) {\n        const lsw = (x & 0xffff) + (y & 0xffff),\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xffff);\n    }\n}\n", "import type { BeanCollection, ComponentSelector } from '@ag-grid-community/core';\nimport { Component, RefPlaceholder } from '@ag-grid-community/core';\n\nimport type { GridLicenseManager as LicenseManager } from './gridLicenseManager';\n\nexport class AgWatermark extends Component {\n    licenseManager: LicenseManager;\n\n    public wireBeans(beans: BeanCollection): void {\n        this.licenseManager = beans.licenseManager as LicenseManager;\n    }\n\n    private readonly eLicenseTextRef: HTMLElement = RefPlaceholder;\n\n    constructor() {\n        super(\n            /* html*/\n            `<div class=\"ag-watermark\">\n                <div data-ref=\"eLicenseTextRef\" class=\"ag-watermark-text\"></div>\n            </div>`\n        );\n    }\n\n    public postConstruct(): void {\n        const show = this.shouldDisplayWatermark();\n        this.setDisplayed(show);\n\n        if (show) {\n            this.eLicenseTextRef.innerText = this.licenseManager.getWatermarkMessage();\n\n            window.setTimeout(() => this.addCssClass('ag-opacity-zero'), 0);\n            window.setTimeout(() => this.setDisplayed(false), 5000);\n        }\n    }\n\n    private shouldDisplayWatermark(): boolean {\n        return this.licenseManager.isDisplayWatermark();\n    }\n}\n\nexport const AgWatermarkSelector: ComponentSelector = {\n    selector: 'AG-WATERMARK',\n    component: AgWatermark,\n};\n", "// DO NOT UPDATE MANUALLY: Generated from script during build time\nexport const VERSION = '31.3.1';\n", "import {\n    Component,\n    _createIconNoSpan,\n    _isNodeOrElement,\n    _loadTemplate,\n    _setAriaExpanded,\n    _warnOnce,\n} from '@ag-grid-community/core';\nimport type { IMenuItemComp, IMenuItemParams } from '@ag-grid-community/core';\n\ninterface AgMenuItemRendererParams {\n    cssClassPrefix?: string;\n    isCompact?: boolean;\n}\n\nexport class AgMenuItemRenderer extends Component implements IMenuItemComp {\n    private params: IMenuItemParams & AgMenuItemRendererParams;\n    private cssClassPrefix: string;\n\n    constructor() {\n        super();\n\n        this.setTemplate(/* html */ `<div></div>`);\n    }\n\n    public init(params: IMenuItemParams & AgMenuItemRendererParams): void {\n        this.params = params;\n        this.cssClassPrefix = this.params.cssClassPrefix ?? 'ag-menu-option';\n\n        this.addIcon();\n        this.addName();\n        this.addShortcut();\n        this.addSubMenu();\n    }\n\n    public configureDefaults(): boolean {\n        return true;\n    }\n\n    private addIcon(): void {\n        if (this.params.isCompact) {\n            return;\n        }\n        const iconWrapper = _loadTemplate(\n            /* html */\n            `<span data-ref=\"eIcon\" class=\"${this.getClassName('part')} ${this.getClassName('icon')}\" role=\"presentation\"></span>`\n        );\n\n        const { checked, icon } = this.params;\n\n        if (checked) {\n            iconWrapper.appendChild(_createIconNoSpan('check', this.gos)!);\n        } else if (icon) {\n            if (_isNodeOrElement(icon)) {\n                iconWrapper.appendChild(icon);\n            } else if (typeof icon === 'string') {\n                iconWrapper.innerHTML = icon;\n            } else {\n                _warnOnce('menu item icon must be DOM node or string');\n            }\n        }\n\n        this.getGui().appendChild(iconWrapper);\n    }\n\n    private addName(): void {\n        const name = _loadTemplate(\n            /* html */\n            `<span data-ref=\"eName\" class=\"${this.getClassName('part')} ${this.getClassName('text')}\">${this.params.name || ''}</span>`\n        );\n\n        this.getGui().appendChild(name);\n    }\n\n    private addShortcut(): void {\n        if (this.params.isCompact) {\n            return;\n        }\n        const shortcut = _loadTemplate(\n            /* html */\n            `<span data-ref=\"eShortcut\" class=\"${this.getClassName('part')} ${this.getClassName('shortcut')}\">${this.params.shortcut || ''}</span>`\n        );\n\n        this.getGui().appendChild(shortcut);\n    }\n\n    private addSubMenu(): void {\n        const pointer = _loadTemplate(\n            /* html */\n            `<span data-ref=\"ePopupPointer\" class=\"${this.getClassName('part')} ${this.getClassName('popup-pointer')}\"></span>`\n        );\n\n        const eGui = this.getGui();\n\n        if (this.params.subMenu) {\n            const iconName = this.gos.get('enableRtl') ? 'smallLeft' : 'smallRight';\n            _setAriaExpanded(eGui, false);\n\n            pointer.appendChild(_createIconNoSpan(iconName, this.gos)!);\n        }\n\n        eGui.appendChild(pointer);\n    }\n\n    private getClassName(suffix: string) {\n        return `${this.cssClassPrefix}-${suffix}`;\n    }\n\n    public override destroy(): void {\n        super.destroy();\n    }\n}\n", "import type { AgCheckbox, AgEvent, ComponentSelector } from '@ag-grid-community/core';\nimport {\n    AgCheckboxSelector,\n    AgToggleButton,\n    Component,\n    KeyCode,\n    RefPlaceholder,\n    _createIcon,\n    _setAriaExpanded,\n    _setDisplayed,\n} from '@ag-grid-community/core';\n\ntype GroupItem = Component<any> | HTMLElement;\ntype Align = 'start' | 'end' | 'center' | 'stretch';\ntype Direction = 'horizontal' | 'vertical';\n\nexport interface AgGroupComponentParams {\n    title?: string;\n    enabled?: boolean;\n    suppressEnabledCheckbox?: boolean;\n    suppressOpenCloseIcons?: boolean;\n    suppressToggleExpandOnEnableChange?: boolean;\n    cssIdentifier?: string;\n    items?: GroupItem[];\n    alignItems?: Align;\n    direction?: Direction;\n    onEnableChange?: (enabled: boolean) => void;\n    onExpandedChange?: (expanded: boolean) => void;\n    expanded?: boolean;\n    useToggle?: boolean;\n    suppressKeyboardNavigation?: boolean;\n}\n\nexport type AgGroupComponentEvent = 'expanded' | 'collapsed' | 'enableChange';\nexport type ExpandedChangedEvent = 'expandedChanged';\n\ninterface ExpandChangedEvent extends AgEvent<ExpandedChangedEvent> {\n    expanded?: boolean;\n}\n\ninterface EnableChangeEvent extends AgEvent<'enableChange'> {\n    enabled: boolean;\n}\n\nfunction getAgGroupComponentTemplate(params: AgGroupComponentParams) {\n    const cssIdentifier = params.cssIdentifier || 'default';\n    const direction: Direction = params.direction || 'vertical';\n\n    return /* html */ `\n        <div class=\"ag-group ag-${cssIdentifier}-group\" role=\"presentation\">\n            <div data-ref=\"eToolbar\" class=\"ag-group-toolbar ag-${cssIdentifier}-group-toolbar\">\n                <ag-checkbox data-ref=\"cbGroupEnabled\"></ag-checkbox>\n            </div>\n            <div data-ref=\"eContainer\" class=\"ag-group-container ag-group-container-${direction} ag-${cssIdentifier}-group-container\"></div>\n        </div>\n    `;\n}\n\nexport class AgGroupComponent extends Component<AgGroupComponentEvent> {\n    private items: GroupItem[];\n    private cssIdentifier: string;\n    private enabled: boolean;\n    private expanded: boolean;\n    private suppressEnabledCheckbox: boolean = true;\n    private suppressToggleExpandOnEnableChange: boolean = false;\n    private alignItems: Align | undefined;\n    private useToggle: boolean;\n\n    private eToggle?: AgToggleButton;\n    private eTitleBar?: DefaultTitleBar;\n\n    private readonly eToolbar: HTMLElement = RefPlaceholder;\n    private readonly cbGroupEnabled: AgCheckbox = RefPlaceholder;\n    private readonly eContainer: HTMLElement = RefPlaceholder;\n\n    constructor(private readonly params: AgGroupComponentParams = {}) {\n        super(getAgGroupComponentTemplate(params), [AgCheckboxSelector]);\n\n        const {\n            enabled,\n            items,\n            suppressEnabledCheckbox,\n            expanded,\n            suppressToggleExpandOnEnableChange,\n            useToggle: toggleMode,\n        } = params;\n\n        this.cssIdentifier = params.cssIdentifier || 'default';\n        this.enabled = enabled != null ? enabled : true;\n        this.items = items || [];\n        this.useToggle = toggleMode ?? false;\n\n        this.alignItems = params.alignItems || 'center';\n\n        // expanded by default\n        this.expanded = expanded == null ? true : expanded;\n\n        if (suppressEnabledCheckbox != null) {\n            this.suppressEnabledCheckbox = suppressEnabledCheckbox;\n        }\n\n        if (suppressToggleExpandOnEnableChange != null) {\n            this.suppressToggleExpandOnEnableChange = suppressToggleExpandOnEnableChange;\n        }\n    }\n\n    public postConstruct() {\n        this.setupTitleBar();\n\n        if (this.items.length) {\n            const initialItems = this.items;\n            this.items = [];\n\n            this.addItems(initialItems);\n        }\n\n        const localeTextFunc = this.localeService.getLocaleTextFunc();\n        this.cbGroupEnabled.setLabel(localeTextFunc('enabled', 'Enabled'));\n\n        if (this.enabled) {\n            this.setEnabled(this.enabled, undefined, true);\n        }\n\n        this.setAlignItems(this.alignItems);\n\n        const { onEnableChange, onExpandedChange, suppressOpenCloseIcons } = this.params;\n\n        this.hideEnabledCheckbox(this.suppressEnabledCheckbox);\n        this.hideOpenCloseIcons(suppressOpenCloseIcons ?? false);\n\n        this.refreshChildDisplay();\n        _setDisplayed(this.eContainer, this.expanded);\n\n        this.cbGroupEnabled.onValueChange((newSelection: boolean) => {\n            this.setEnabled(newSelection, true, this.suppressToggleExpandOnEnableChange);\n            this.dispatchEnableChangeEvent(newSelection);\n        });\n\n        if (onEnableChange != null) {\n            this.onEnableChange(onEnableChange);\n        }\n\n        if (onExpandedChange != null) {\n            this.onExpandedChange(onExpandedChange);\n        }\n    }\n\n    private refreshChildDisplay(): void {\n        _setDisplayed(this.eToolbar, this.expanded && !this.suppressEnabledCheckbox);\n        this.eTitleBar?.refreshOnExpand(this.expanded);\n    }\n\n    public isExpanded(): boolean {\n        return this.expanded;\n    }\n\n    public setAlignItems(alignment: AgGroupComponentParams['alignItems']): this {\n        if (this.alignItems !== alignment) {\n            this.removeCssClass(`ag-group-item-alignment-${this.alignItems}`);\n        }\n\n        this.alignItems = alignment;\n        const newCls = `ag-group-item-alignment-${this.alignItems}`;\n\n        this.addCssClass(newCls);\n\n        return this;\n    }\n\n    public toggleGroupExpand(expanded?: boolean, silent?: boolean): this {\n        if (this.eTitleBar?.isSuppressCollapse() && !this.useToggle) {\n            expanded = true;\n            silent = true;\n        } else {\n            expanded = expanded != null ? expanded : !this.expanded;\n\n            if (this.expanded === expanded) {\n                return this;\n            }\n        }\n\n        this.expanded = expanded;\n        this.refreshChildDisplay();\n\n        _setDisplayed(this.eContainer, expanded);\n\n        if (!silent) {\n            this.dispatchLocalEvent({\n                type: expanded ? 'expanded' : 'collapsed',\n            });\n        }\n\n        return this;\n    }\n\n    public addItems(items: GroupItem[]) {\n        items.forEach((item) => this.addItem(item));\n    }\n\n    public prependItem(item: GroupItem) {\n        this.insertItem(item, true);\n    }\n\n    public addItem(item: GroupItem) {\n        this.insertItem(item, false);\n    }\n\n    private insertItem(item: GroupItem, prepend?: boolean) {\n        const container = this.eContainer;\n        const el = item instanceof Component ? item.getGui() : item;\n\n        el.classList.add('ag-group-item', `ag-${this.cssIdentifier}-group-item`);\n\n        if (prepend) {\n            container.insertAdjacentElement('afterbegin', el);\n            this.items.unshift(el);\n        } else {\n            container.appendChild(el);\n            this.items.push(el);\n        }\n    }\n\n    public hideItem(hide: boolean, index: number) {\n        const itemToHide = this.items[index] as HTMLElement;\n        _setDisplayed(itemToHide, !hide);\n    }\n\n    public getItemIndex(item: GroupItem): number | -1 {\n        const el = item instanceof Component ? item.getGui() : item;\n        return this.items.indexOf(el);\n    }\n\n    public setTitle(title: string): this {\n        this.eTitleBar?.setTitle(title);\n        return this;\n    }\n\n    public addTitleBarWidget(el: Element): this {\n        this.eTitleBar?.addWidget(el);\n        return this;\n    }\n\n    public addCssClassToTitleBar(cssClass: string) {\n        this.eTitleBar?.addCssClass(cssClass);\n    }\n\n    private dispatchEnableChangeEvent(enabled: boolean): void {\n        const event: EnableChangeEvent = {\n            type: 'enableChange',\n            enabled,\n        };\n        this.dispatchLocalEvent(event);\n    }\n\n    public setEnabled(enabled: boolean, skipToggle?: boolean, skipExpand?: boolean): this {\n        this.enabled = enabled;\n        this.refreshDisabledStyles();\n\n        if (!skipExpand) {\n            this.toggleGroupExpand(enabled);\n        }\n\n        if (!skipToggle) {\n            this.cbGroupEnabled.setValue(enabled);\n            this.eToggle?.setValue(enabled);\n        }\n\n        return this;\n    }\n\n    public isEnabled(): boolean {\n        return this.enabled;\n    }\n\n    public onEnableChange(callbackFn: (enabled: boolean) => void): this {\n        this.addManagedListeners(this, { enableChange: (event: EnableChangeEvent) => callbackFn(event.enabled) });\n\n        return this;\n    }\n\n    public onExpandedChange(callbackFn: (expanded: boolean) => void): this {\n        this.addManagedListeners(this, {\n            expanded: () => callbackFn(true),\n            collapsed: () => callbackFn(false),\n        });\n\n        return this;\n    }\n\n    public hideEnabledCheckbox(hide: boolean): this {\n        this.suppressEnabledCheckbox = hide;\n        this.refreshChildDisplay();\n        this.refreshDisabledStyles();\n        return this;\n    }\n\n    public hideOpenCloseIcons(hide: boolean): this {\n        this.eTitleBar?.hideOpenCloseIcons(hide);\n\n        return this;\n    }\n\n    private refreshDisabledStyles() {\n        const disabled = !this.enabled;\n        this.eContainer.classList.toggle('ag-disabled', disabled);\n        this.eTitleBar?.refreshDisabledStyles(this.suppressEnabledCheckbox && disabled);\n        this.eContainer.classList.toggle('ag-disabled-group-container', disabled);\n    }\n\n    private setupTitleBar(): void {\n        const titleBar = this.useToggle ? this.createToggleTitleBar() : this.createDefaultTitleBar();\n        this.eToolbar.insertAdjacentElement('beforebegin', titleBar.getGui());\n    }\n\n    private createDefaultTitleBar(): DefaultTitleBar {\n        const titleBar = this.createManagedBean(new DefaultTitleBar(this.params));\n        this.eTitleBar = titleBar;\n        titleBar.refreshOnExpand(this.expanded);\n        this.addManagedListeners(titleBar, {\n            expandedChanged: (event: ExpandChangedEvent) => this.toggleGroupExpand(event.expanded),\n        });\n        return titleBar;\n    }\n\n    private createToggleTitleBar(): AgToggleButton {\n        const eToggle = this.createManagedBean(\n            new AgToggleButton({\n                value: this.enabled,\n                label: this.params.title,\n                labelAlignment: 'left',\n                labelWidth: 'flex',\n                onValueChange: (enabled) => {\n                    this.setEnabled(enabled, true);\n                    this.dispatchEnableChangeEvent(enabled);\n                },\n            })\n        );\n        eToggle.addCssClass('ag-group-title-bar');\n        eToggle.addCssClass(`ag-${this.params.cssIdentifier ?? 'default'}-group-title-bar ag-unselectable`);\n        this.eToggle = eToggle;\n        this.toggleGroupExpand(this.enabled);\n        return eToggle;\n    }\n}\n\nconst TITLE_BAR_DISABLED_CLASS = 'ag-disabled-group-title-bar';\nfunction getDefaultTitleBarTemplate(params: AgGroupComponentParams) {\n    const cssIdentifier = params.cssIdentifier ?? 'default';\n\n    const role = params.suppressKeyboardNavigation ? 'presentation' : 'role';\n\n    return /* html */ `\n        <div class=\"ag-group-title-bar ag-${cssIdentifier}-group-title-bar ag-unselectable\" role=\"${role}\">\n            <span class=\"ag-group-title-bar-icon ag-${cssIdentifier}-group-title-bar-icon\" data-ref=\"eGroupOpenedIcon\" role=\"presentation\"></span>\n            <span class=\"ag-group-title-bar-icon ag-${cssIdentifier}-group-title-bar-icon\" data-ref=\"eGroupClosedIcon\" role=\"presentation\"></span>\n            <span data-ref=\"eTitle\" class=\"ag-group-title ag-${cssIdentifier}-group-title\"></span>\n        </div>\n    `;\n}\nclass DefaultTitleBar extends Component<ExpandedChangedEvent> {\n    private title: string | undefined;\n    private suppressOpenCloseIcons: boolean = false;\n    private suppressKeyboardNavigation: boolean = false;\n\n    private readonly eGroupOpenedIcon: HTMLElement = RefPlaceholder;\n    private readonly eGroupClosedIcon: HTMLElement = RefPlaceholder;\n    private readonly eTitle: HTMLElement = RefPlaceholder;\n\n    constructor(params: AgGroupComponentParams = {}) {\n        super(getDefaultTitleBarTemplate(params));\n\n        const { title, suppressOpenCloseIcons, suppressKeyboardNavigation } = params;\n\n        if (!!title && title.length > 0) {\n            this.title = title;\n        }\n\n        if (suppressOpenCloseIcons != null) {\n            this.suppressOpenCloseIcons = suppressOpenCloseIcons;\n        }\n\n        this.suppressKeyboardNavigation = suppressKeyboardNavigation ?? false;\n    }\n\n    public postConstruct() {\n        this.setTitle(this.title);\n\n        this.hideOpenCloseIcons(this.suppressOpenCloseIcons);\n\n        this.setupExpandContract();\n    }\n\n    private setupExpandContract(): void {\n        this.eGroupClosedIcon.appendChild(_createIcon('columnSelectClosed', this.gos, null));\n        this.eGroupOpenedIcon.appendChild(_createIcon('columnSelectOpen', this.gos, null));\n        this.addManagedElementListeners(this.getGui(), {\n            click: () => this.dispatchExpandChanged(),\n            keydown: (e: KeyboardEvent) => {\n                switch (e.key) {\n                    case KeyCode.ENTER:\n                    case KeyCode.SPACE:\n                        e.preventDefault();\n                        this.dispatchExpandChanged();\n                        break;\n                    case KeyCode.RIGHT:\n                    case KeyCode.LEFT:\n                        e.preventDefault();\n                        this.dispatchExpandChanged(e.key === KeyCode.RIGHT);\n                        break;\n                }\n            },\n        });\n    }\n\n    public refreshOnExpand(expanded: boolean): void {\n        this.refreshAriaStatus(expanded);\n        this.refreshOpenCloseIcons(expanded);\n    }\n\n    private refreshAriaStatus(expanded: boolean): void {\n        if (!this.suppressOpenCloseIcons) {\n            _setAriaExpanded(this.getGui(), expanded);\n        }\n    }\n\n    private refreshOpenCloseIcons(expanded: boolean): void {\n        const showIcon = !this.suppressOpenCloseIcons;\n\n        _setDisplayed(this.eGroupOpenedIcon, showIcon && expanded);\n        _setDisplayed(this.eGroupClosedIcon, showIcon && !expanded);\n    }\n\n    public isSuppressCollapse(): boolean {\n        return this.suppressOpenCloseIcons;\n    }\n\n    private dispatchExpandChanged(expanded?: boolean): void {\n        const event: ExpandChangedEvent = {\n            type: 'expandedChanged',\n            expanded,\n        };\n        this.dispatchLocalEvent(event);\n    }\n\n    public setTitle(title: string | undefined): this {\n        const eGui = this.getGui();\n        const hasTitle = !!title && title.length > 0;\n        title = hasTitle ? title : undefined;\n\n        this.eTitle.textContent = title ?? '';\n        _setDisplayed(eGui, hasTitle);\n\n        if (title !== this.title) {\n            this.title = title;\n        }\n\n        const disabled = eGui.classList.contains(TITLE_BAR_DISABLED_CLASS);\n        this.refreshDisabledStyles(disabled);\n\n        return this;\n    }\n\n    public addWidget(el: Element): this {\n        this.getGui().appendChild(el);\n\n        return this;\n    }\n\n    public hideOpenCloseIcons(hide: boolean): this {\n        this.suppressOpenCloseIcons = hide;\n\n        if (hide) {\n            this.dispatchExpandChanged(true);\n        }\n\n        return this;\n    }\n\n    public refreshDisabledStyles(disabled: boolean) {\n        const eGui = this.getGui();\n        if (disabled) {\n            eGui.classList.add(TITLE_BAR_DISABLED_CLASS);\n            eGui.removeAttribute('tabindex');\n        } else {\n            eGui.classList.remove(TITLE_BAR_DISABLED_CLASS);\n            if (typeof this.title === 'string' && !this.suppressKeyboardNavigation) {\n                eGui.setAttribute('tabindex', '0');\n            } else {\n                eGui.removeAttribute('tabindex');\n            }\n        }\n    }\n}\n\nexport const AgGroupComponentSelector: ComponentSelector = {\n    selector: 'AG-GROUP-COMPONENT',\n    component: AgGroupComponent,\n};\n", "import type {\n    AgInputTextField,\n    AgPromise,\n    AriaAnnouncementService,\n    BeanCollection,\n    FieldPickerValueSelectedEvent,\n    IRichCellEditorRendererParams,\n    RichSelectListRowSelectedEvent,\n    RichSelectParams,\n    UserCompDetails,\n    UserComponentFactory,\n    WithoutGridCommon,\n} from '@ag-grid-community/core';\nimport {\n    AgInputTextFieldSelector,\n    AgPickerField,\n    KeyCode,\n    RefPlaceholder,\n    _bindCellRendererToHtmlElement,\n    _clearElement,\n    _createIconNoSpan,\n    _debounce,\n    _escapeString,\n    _exists,\n    _fuzzySuggestions,\n    _isEventFromPrintableCharacter,\n    _isVisible,\n    _setAriaActiveDescendant,\n    _stopPropagationForAgGrid,\n} from '@ag-grid-community/core';\n\nimport { AgPillContainer } from './AgPillContainer';\nimport type { AgRichSelectListEvent } from './agRichSelectList';\nimport { AgRichSelectList } from './agRichSelectList';\n\nexport type AgRichSelectEvent = AgRichSelectListEvent;\nexport class AgRichSelect<TValue = any> extends AgPickerField<\n    TValue[] | TValue,\n    RichSelectParams<TValue>,\n    AgRichSelectEvent,\n    AgRichSelectList<TValue, AgRichSelectEvent>\n> {\n    private userComponentFactory: UserComponentFactory;\n    private ariaAnnouncementService: AriaAnnouncementService;\n\n    public override wireBeans(beans: BeanCollection) {\n        super.wireBeans(beans);\n        this.userComponentFactory = beans.userComponentFactory;\n        this.ariaAnnouncementService = beans.ariaAnnouncementService;\n    }\n\n    private searchString = '';\n    private listComponent: AgRichSelectList<TValue> | undefined;\n    private pillContainer: AgPillContainer<TValue> | null;\n    protected values: TValue[];\n\n    private searchStringCreator: ((values: TValue[]) => string[]) | null = null;\n    private readonly eInput: AgInputTextField = RefPlaceholder;\n    private readonly eDeselect: HTMLSpanElement = RefPlaceholder;\n\n    private ariaToggleSelection: string;\n    private ariaDeselectAllItems: string;\n    private ariaDeleteSelection: string;\n    private skipWrapperAnnouncement?: boolean = false;\n\n    constructor(config?: RichSelectParams<TValue>) {\n        super({\n            pickerAriaLabelKey: 'ariaLabelRichSelectField',\n            pickerAriaLabelValue: 'Rich Select Field',\n            pickerType: 'ag-list',\n            className: 'ag-rich-select',\n            pickerIcon: 'smallDown',\n            ariaRole: 'combobox',\n            template:\n                config?.template ??\n                /* html */ `\n            <div class=\"ag-picker-field\" role=\"presentation\">\n                <div data-ref=\"eLabel\"></div>\n                <div data-ref=\"eWrapper\" class=\"ag-wrapper ag-picker-field-wrapper ag-rich-select-value ag-picker-collapsed\">\n                    <span data-ref=\"eDisplayField\" class=\"ag-picker-field-display\"></span>\n                    <ag-input-text-field data-ref=\"eInput\" class=\"ag-rich-select-field-input\"></ag-input-text-field>\n                    <span data-ref=\"eDeselect\" class=\"ag-rich-select-deselect-button ag-picker-field-icon\" role=\"presentation\"></span>\n                    <span data-ref=\"eIcon\" class=\"ag-picker-field-icon\" aria-hidden=\"true\"></span>\n                </div>\n            </div>`,\n            agComponents: [AgInputTextFieldSelector],\n            modalPicker: false,\n            ...config,\n            // maxPickerHeight needs to be set after expanding `config`\n            maxPickerHeight: config?.maxPickerHeight ?? 'calc(var(--ag-row-height) * 6.5)',\n        });\n\n        const { value, valueList, searchStringCreator } = config || {};\n\n        if (value !== undefined) {\n            this.value = value;\n        }\n\n        if (valueList != null) {\n            this.values = valueList;\n        }\n\n        if (searchStringCreator) {\n            this.searchStringCreator = searchStringCreator;\n        }\n    }\n\n    public override postConstruct(): void {\n        super.postConstruct();\n        this.createListComponent();\n        this.eDeselect.appendChild(_createIconNoSpan('cancel', this.gos)!);\n\n        const { allowTyping, placeholder, suppressDeselectAll } = this.config;\n\n        this.eDeselect.classList.add('ag-hidden');\n\n        if (allowTyping) {\n            this.eInput.setAutoComplete(false).setInputPlaceholder(placeholder);\n            this.eDisplayField.classList.add('ag-hidden');\n        } else {\n            this.eInput.setDisplayed(false);\n        }\n\n        this.setupAriaProperties();\n\n        const { searchDebounceDelay = 300 } = this.config;\n        this.clearSearchString = _debounce(this.clearSearchString, searchDebounceDelay);\n\n        this.renderSelectedValue();\n\n        if (allowTyping) {\n            this.eInput.onValueChange((value) => this.searchTextFromString(value));\n        }\n\n        this.addManagedElementListeners(this.eWrapper, { focus: this.onWrapperFocus.bind(this) });\n        this.addManagedElementListeners(this.eWrapper, { focusout: this.onWrapperFocusOut.bind(this) });\n\n        if (!suppressDeselectAll) {\n            this.addManagedElementListeners(this.eDeselect, {\n                mousedown: this.onDeselectAllMouseDown.bind(this),\n                click: this.onDeselectAllClick.bind(this),\n            });\n        }\n    }\n\n    private setupAriaProperties(): void {\n        const { eWrapper, gos, localeService } = this;\n\n        eWrapper.tabIndex = gos.get('tabIndex');\n\n        const translate = localeService.getLocaleTextFunc();\n        this.ariaDeleteSelection = translate('ariaLabelRichSelectDeleteSelection', 'Press DELETE to deselect item');\n        this.ariaDeselectAllItems = translate(\n            'ariaLabelRichSelectDeselectAllItems',\n            'Press DELETE to deselect all items'\n        );\n        this.ariaToggleSelection = translate('ariaLabelRichSelectToggleSelection', 'Press SPACE to toggle selection');\n    }\n\n    private createListComponent(): void {\n        this.listComponent = this.createBean(new AgRichSelectList(this.config, this.eWrapper, () => this.searchString));\n        this.listComponent.setParentComponent(this);\n\n        this.addManagedListeners(this.listComponent, {\n            richSelectListRowSelected: (e: RichSelectListRowSelectedEvent) => {\n                this.onListValueSelected(e.value, e.fromEnterKey);\n            },\n        });\n    }\n\n    private renderSelectedValue(): void {\n        const { value, eDisplayField, config } = this;\n        const {\n            allowTyping,\n            cellRenderer,\n            initialInputValue,\n            multiSelect,\n            suppressDeselectAll,\n            suppressMultiSelectPillRenderer,\n        } = config;\n        const valueFormatted = this.config.valueFormatter ? this.config.valueFormatter(value) : value;\n\n        if (allowTyping) {\n            this.eInput.setValue(initialInputValue ?? valueFormatted);\n            return;\n        }\n\n        if (multiSelect && !suppressDeselectAll) {\n            const isEmpty = value == null || (Array.isArray(value) && value.length === 0);\n            this.eDeselect.classList.toggle('ag-hidden', isEmpty);\n        }\n\n        let userCompDetails: UserCompDetails | undefined;\n\n        if (multiSelect && !suppressMultiSelectPillRenderer) {\n            this.createOrUpdatePillContainer(eDisplayField);\n            return;\n        }\n\n        if (cellRenderer) {\n            userCompDetails = this.userComponentFactory.getEditorRendererDetails<\n                RichSelectParams,\n                IRichCellEditorRendererParams<TValue>\n            >(config, {\n                value,\n                valueFormatted,\n                getValue: () => this.getValue(),\n                setValue: (value: TValue[] | TValue | null) => {\n                    this.setValue(value, true);\n                },\n                setTooltip: (value: string, shouldDisplayTooltip: () => boolean) => {\n                    this.setTooltip({ newTooltipText: value, shouldDisplayTooltip });\n                },\n            });\n        }\n\n        let userCompDetailsPromise: AgPromise<any> | undefined;\n\n        if (userCompDetails) {\n            userCompDetailsPromise = userCompDetails.newAgStackInstance();\n        }\n\n        if (userCompDetailsPromise) {\n            _clearElement(eDisplayField);\n            _bindCellRendererToHtmlElement(userCompDetailsPromise, eDisplayField);\n            userCompDetailsPromise.then((renderer) => {\n                this.addDestroyFunc(() => this.destroyBean(renderer));\n            });\n        } else {\n            if (_exists(this.value)) {\n                eDisplayField.innerText = valueFormatted;\n                eDisplayField.classList.remove('ag-display-as-placeholder');\n            } else {\n                const { placeholder } = config;\n                if (_exists(placeholder)) {\n                    eDisplayField.innerHTML = `${_escapeString(placeholder)}`;\n                    eDisplayField.classList.add('ag-display-as-placeholder');\n                } else {\n                    _clearElement(eDisplayField);\n                }\n            }\n\n            this.setTooltip({\n                newTooltipText: valueFormatted ?? null,\n                shouldDisplayTooltip: () => this.eDisplayField.scrollWidth > this.eDisplayField.clientWidth,\n            });\n        }\n    }\n\n    protected createPickerComponent() {\n        const { values } = this;\n\n        if (values) {\n            this.setValueList({ valueList: values });\n        }\n\n        // do not create the picker every time to save state\n        return this.listComponent!;\n    }\n\n    public setSearchStringCreator(searchStringFn: (values: TValue[]) => string[]): void {\n        this.searchStringCreator = searchStringFn;\n    }\n\n    public setValueList(params: { valueList: TValue[]; refresh?: boolean }): void {\n        const { valueList, refresh } = params;\n\n        if (!this.listComponent || this.listComponent.getCurrentList() === valueList) {\n            return;\n        }\n\n        this.listComponent.setCurrentList(valueList);\n\n        if (refresh) {\n            // if `values` is not present, it means the valuesList was set asynchronously\n            if (!this.values) {\n                this.values = valueList;\n                if (this.isPickerDisplayed) {\n                    this.listComponent.selectValue(this.value);\n                }\n            } else {\n                this.listComponent.refresh(true);\n            }\n        }\n    }\n\n    public override showPicker() {\n        super.showPicker();\n        const { listComponent, value } = this;\n\n        if (!listComponent) {\n            return;\n        }\n\n        let idx = null;\n        if (this.value != null) {\n            listComponent.selectValue(this.value);\n            idx = listComponent.getIndicesForValues(Array.isArray(value) ? value : [value])[0];\n        }\n\n        if (idx != null) {\n            listComponent.highlightIndex(idx);\n        } else {\n            listComponent.refresh();\n        }\n\n        this.displayOrHidePicker();\n    }\n\n    protected override beforeHidePicker(): void {\n        super.beforeHidePicker();\n    }\n\n    private createOrUpdatePillContainer(container: HTMLElement): void {\n        if (!this.pillContainer) {\n            const pillContainer = (this.pillContainer = this.createBean(new AgPillContainer<TValue>()));\n            this.addDestroyFunc(() => {\n                this.destroyBean(this.pillContainer);\n                this.pillContainer = null;\n            });\n\n            _clearElement(container);\n            container.appendChild(pillContainer.getGui());\n\n            pillContainer.init({\n                eWrapper: this.eWrapper,\n                onPillMouseDown: (e: MouseEvent) => {\n                    e.stopImmediatePropagation();\n                },\n                announceItemFocus: () => {\n                    this.ariaAnnouncementService.announceValue(this.ariaDeleteSelection);\n                },\n                getValue: () => this.getValue() as TValue[] | null,\n                setValue: (value: TValue[] | null) => this.setValue(value, true),\n            });\n        }\n\n        this.doWhileBlockingAnnouncement(() => this.pillContainer?.refresh());\n    }\n\n    private doWhileBlockingAnnouncement(func: () => void): void {\n        this.skipWrapperAnnouncement = true;\n        func();\n        this.skipWrapperAnnouncement = false;\n    }\n\n    private onWrapperFocus(): void {\n        const { eInput, config } = this;\n        const { allowTyping, multiSelect, suppressDeselectAll } = config;\n\n        if (allowTyping) {\n            const focusableEl = eInput.getFocusableElement() as HTMLInputElement;\n            focusableEl.focus();\n            focusableEl.select();\n        } else if (multiSelect && !suppressDeselectAll && !this.skipWrapperAnnouncement) {\n            this.ariaAnnouncementService.announceValue(this.ariaDeselectAllItems);\n        }\n    }\n\n    private onWrapperFocusOut(e: FocusEvent): void {\n        if (!this.eWrapper.contains(e.relatedTarget as Element)) {\n            this.hidePicker();\n        }\n    }\n\n    private onDeselectAllMouseDown(e: MouseEvent): void {\n        // don't expand or collapse picker when clicking on deselect all\n        e.stopImmediatePropagation();\n    }\n\n    private onDeselectAllClick(): void {\n        this.setValue([], true);\n    }\n\n    private buildSearchStringFromKeyboardEvent(searchKey: KeyboardEvent) {\n        let { key } = searchKey;\n\n        if (key === KeyCode.BACKSPACE) {\n            this.searchString = this.searchString.slice(0, -1);\n            key = '';\n        } else if (!_isEventFromPrintableCharacter(searchKey)) {\n            return;\n        }\n\n        searchKey.preventDefault();\n\n        this.searchTextFromCharacter(key);\n    }\n\n    private searchTextFromCharacter(char: string): void {\n        this.searchString += char;\n        this.runSearch();\n        this.clearSearchString();\n    }\n\n    public searchTextFromString(str: string | null | undefined): void {\n        if (str == null) {\n            str = '';\n        }\n        this.searchString = str;\n        this.runSearch();\n    }\n\n    private buildSearchStrings(values: TValue[]): string[] | undefined {\n        const { valueFormatter = (value) => value } = this.config;\n\n        let searchStrings: string[] | undefined;\n        if (typeof values[0] === 'number' || typeof values[0] === 'string') {\n            searchStrings = values.map((v) => valueFormatter(v));\n        } else if (typeof values[0] === 'object' && this.searchStringCreator) {\n            searchStrings = this.searchStringCreator(values);\n        }\n\n        return searchStrings;\n    }\n\n    private filterListModel(filteredValues: TValue[]): void {\n        const { filterList } = this.config;\n\n        if (!filterList) {\n            return;\n        }\n\n        this.setValueList({ valueList: filteredValues, refresh: true });\n        this.alignPickerToComponent();\n    }\n\n    private runSearch() {\n        if (!this.listComponent) {\n            return;\n        }\n\n        const { values } = this;\n        const searchStrings = this.buildSearchStrings(values);\n\n        if (!searchStrings) {\n            this.listComponent.highlightIndex(-1);\n            return;\n        }\n\n        const { suggestions, filteredValues } = this.getSuggestionsAndFilteredValues(this.searchString, searchStrings);\n        const { filterList, highlightMatch, searchType = 'fuzzy' } = this.config;\n\n        const filterValueLen = filteredValues.length;\n        const shouldFilter = !!(filterList && this.searchString !== '');\n\n        this.filterListModel(shouldFilter ? filteredValues : values);\n\n        if (suggestions.length) {\n            const topSuggestionIndex = shouldFilter ? 0 : searchStrings.indexOf(suggestions[0]);\n            this.listComponent?.highlightIndex(topSuggestionIndex);\n        } else {\n            this.listComponent?.highlightIndex(-1);\n\n            if (!shouldFilter || filterValueLen) {\n                this.listComponent?.ensureIndexVisible(0);\n            } else if (shouldFilter) {\n                this.getAriaElement().removeAttribute('data-active-option');\n                const eListAriaEl = this.listComponent?.getAriaElement();\n                if (eListAriaEl) {\n                    _setAriaActiveDescendant(eListAriaEl, null);\n                }\n            }\n        }\n\n        if (highlightMatch && searchType !== 'fuzzy') {\n            this.listComponent?.highlightFilterMatch(this.searchString);\n        }\n\n        this.displayOrHidePicker();\n    }\n\n    private getSuggestionsAndFilteredValues(\n        searchValue: string,\n        valueList: string[]\n    ): { suggestions: string[]; filteredValues: TValue[] } {\n        let suggestions: string[] = [];\n        const filteredValues: TValue[] = [];\n\n        if (!searchValue.length) {\n            return { suggestions, filteredValues };\n        }\n\n        const { searchType = 'fuzzy', filterList } = this.config;\n\n        if (searchType === 'fuzzy') {\n            const fuzzySearchResult = _fuzzySuggestions(searchValue, valueList, true);\n            suggestions = fuzzySearchResult.values;\n\n            const indices = fuzzySearchResult.indices;\n            if (filterList && indices.length) {\n                for (let i = 0; i < indices.length; i++) {\n                    filteredValues.push(this.values[indices[i]]);\n                }\n            }\n        } else {\n            suggestions = valueList.filter((val, idx) => {\n                const currentValue = val.toLocaleLowerCase();\n                const valueToMatch = this.searchString.toLocaleLowerCase();\n\n                const isMatch =\n                    searchType === 'match'\n                        ? currentValue.startsWith(valueToMatch)\n                        : currentValue.indexOf(valueToMatch) !== -1;\n                if (filterList && isMatch) {\n                    filteredValues.push(this.values[idx]);\n                }\n                return isMatch;\n            });\n        }\n\n        return { suggestions, filteredValues };\n    }\n\n    private displayOrHidePicker(): void {\n        if (!this.listComponent) {\n            return;\n        }\n\n        const eListGui = this.listComponent.getGui();\n        const list = this.listComponent.getCurrentList();\n        const toggleValue = list ? list.length === 0 : false;\n\n        eListGui.classList.toggle('ag-hidden', toggleValue);\n    }\n\n    private clearSearchString(): void {\n        this.searchString = '';\n    }\n\n    public override setValue(\n        value: TValue[] | TValue | null,\n        silent?: boolean,\n        fromPicker?: boolean,\n        skipRendering?: boolean\n    ): this {\n        if (this.value === value) {\n            return this;\n        }\n\n        const isArray = Array.isArray(value);\n\n        if (value != null) {\n            if (!isArray) {\n                const list = this.listComponent?.getCurrentList();\n                const index = list ? list.indexOf(value) : -1;\n\n                if (index === -1) {\n                    return this;\n                }\n            }\n\n            if (!fromPicker) {\n                this.listComponent?.selectValue(value);\n            }\n        }\n\n        super.setValue(value, silent);\n\n        if (!skipRendering) {\n            this.renderSelectedValue();\n        }\n\n        return this;\n    }\n\n    private onNavigationKeyDown(event: any, key: string, announceItem: () => void): void {\n        // if we don't preventDefault the page body and/or grid scroll will move.\n        event.preventDefault();\n\n        const isDown = key === KeyCode.DOWN;\n\n        if (!this.isPickerDisplayed && isDown) {\n            this.showPicker();\n            return;\n        }\n\n        this.listComponent?.onNavigationKeyDown(key, announceItem);\n    }\n\n    protected onEnterKeyDown(e: KeyboardEvent): void {\n        if (!this.isPickerDisplayed) {\n            return;\n        }\n        e.preventDefault();\n\n        if (this.listComponent?.getCurrentList()) {\n            if (this.config.multiSelect) {\n                this.dispatchPickerEventAndHidePicker(this.value, true);\n            } else {\n                const lastRowHovered = this.listComponent.getLastItemHovered();\n                this.onListValueSelected(new Set<TValue>([lastRowHovered]), true);\n            }\n        }\n    }\n\n    private onDeleteKeyDown(e: KeyboardEvent): void {\n        const { eWrapper, gos } = this;\n        const activeEl = gos.getActiveDomElement();\n\n        if (activeEl === eWrapper) {\n            e.preventDefault();\n            this.setValue([], true);\n        }\n    }\n\n    private onTabKeyDown(): void {\n        const { config, isPickerDisplayed, listComponent } = this;\n        const { multiSelect } = config;\n\n        if (!isPickerDisplayed || !listComponent) {\n            return;\n        }\n\n        if (multiSelect) {\n            const values = this.getValueFromSet(listComponent.getSelectedItems());\n\n            if (values) {\n                this.setValue(values, false, true, true);\n            }\n        } else {\n            this.setValue(listComponent.getLastItemHovered(), false, true);\n        }\n    }\n\n    private getValueFromSet(valueSet: Set<TValue>): TValue[] | TValue | null {\n        const { multiSelect } = this.config;\n        let newValue: TValue[] | TValue | null = null;\n\n        for (const value of valueSet) {\n            if (valueSet.size === 1 && !multiSelect) {\n                newValue = value;\n                break;\n            }\n            if (!newValue) {\n                newValue = [];\n            }\n            (newValue as TValue[]).push(value);\n        }\n\n        if (Array.isArray(newValue)) {\n            newValue.sort();\n        }\n\n        return newValue;\n    }\n\n    private onListValueSelected(valueSet: Set<TValue>, fromEnterKey: boolean): void {\n        const newValue = this.getValueFromSet(valueSet);\n\n        this.setValue(newValue, false, true);\n\n        if (!this.config.multiSelect) {\n            this.dispatchPickerEventAndHidePicker(newValue, fromEnterKey);\n        }\n    }\n\n    private dispatchPickerEventAndHidePicker(value: TValue[] | TValue | null, fromEnterKey: boolean): void {\n        const event: WithoutGridCommon<FieldPickerValueSelectedEvent> = {\n            type: 'fieldPickerValueSelected',\n            fromEnterKey,\n            value,\n        };\n\n        this.dispatchLocalEvent(event);\n        this.hidePicker();\n    }\n\n    public override getFocusableElement(): HTMLElement {\n        const { allowTyping } = this.config;\n\n        if (allowTyping) {\n            return this.eInput.getFocusableElement();\n        }\n\n        return super.getFocusableElement();\n    }\n\n    protected override onKeyDown(e: KeyboardEvent): void {\n        const { key } = e;\n\n        const { isPickerDisplayed, config, listComponent, pickerComponent } = this;\n        const { allowTyping, multiSelect, suppressDeselectAll } = config;\n\n        switch (key) {\n            case KeyCode.LEFT:\n            case KeyCode.RIGHT:\n                if (!allowTyping || this.pillContainer) {\n                    e.preventDefault();\n                    if (this.pillContainer) {\n                        this.listComponent?.highlightIndex(-1);\n                        this.pillContainer.onNavigationKeyDown(e);\n                    }\n                }\n                break;\n            case KeyCode.PAGE_HOME:\n            case KeyCode.PAGE_END:\n                if (allowTyping) {\n                    e.preventDefault();\n                    const inputEl = this.eInput.getInputElement();\n                    const target = key === KeyCode.PAGE_HOME ? 0 : inputEl.value.length;\n                    inputEl.setSelectionRange(target, target);\n                    break;\n                }\n            // Only break here for allowTyping, otherwise use the same logic as PageUp/PageDown\n            // eslint-disable-next-line\n            case KeyCode.PAGE_UP:\n            case KeyCode.PAGE_DOWN:\n                e.preventDefault();\n                if (pickerComponent) {\n                    listComponent?.navigateToPage(key);\n                }\n                break;\n            case KeyCode.DOWN:\n            case KeyCode.UP:\n                this.onNavigationKeyDown(e, key, () => {\n                    if (multiSelect) {\n                        this.doWhileBlockingAnnouncement(() => this.eWrapper.focus());\n                        this.ariaAnnouncementService.announceValue(this.ariaToggleSelection);\n                    }\n                });\n                break;\n            case KeyCode.ESCAPE:\n                if (isPickerDisplayed) {\n                    if (_isVisible(this.listComponent!.getGui())) {\n                        e.preventDefault();\n                        _stopPropagationForAgGrid(e);\n                    }\n                    this.hidePicker();\n                }\n                break;\n            case KeyCode.ENTER:\n                this.onEnterKeyDown(e);\n                break;\n            case KeyCode.SPACE:\n                if (isPickerDisplayed && multiSelect && listComponent) {\n                    e.preventDefault();\n                    const lastItemHovered = listComponent.getLastItemHovered();\n\n                    if (lastItemHovered) {\n                        listComponent.toggleListItemSelection(lastItemHovered);\n                    }\n                }\n                break;\n            case KeyCode.TAB:\n                this.onTabKeyDown();\n                break;\n            case KeyCode.DELETE:\n                if (multiSelect && !suppressDeselectAll) {\n                    this.onDeleteKeyDown(e);\n                }\n                break;\n            default:\n                if (!allowTyping) {\n                    this.buildSearchStringFromKeyboardEvent(e);\n                }\n        }\n    }\n\n    public override destroy(): void {\n        if (this.listComponent) {\n            this.listComponent = this.destroyBean(this.listComponent);\n        }\n\n        super.destroy();\n    }\n}\n", "import type { BeanCollection, FocusService } from '@ag-grid-community/core';\nimport { Component, KeyCode, _clearElement, _setAriaPosInSet, _setAriaSetSize } from '@ag-grid-community/core';\n\nimport { AgPill } from './agPill';\n\nexport interface PillRendererParams<TValue> {\n    eWrapper?: HTMLElement;\n    announceItemFocus?: () => void;\n    onPillMouseDown?: (e: MouseEvent) => void;\n    getValue: () => TValue[] | null;\n    setValue: (value: TValue[] | null) => void;\n}\n\nexport class AgPillContainer<TValue> extends Component {\n    private focusService: FocusService;\n    private params: PillRendererParams<TValue>;\n    private pills: AgPill[] = [];\n\n    public wireBeans(beans: BeanCollection): void {\n        this.focusService = beans.focusService;\n    }\n\n    constructor() {\n        super(/* html */ `\n            <div class=\"ag-pill-container\" role=\"listbox\"></div>\n            `);\n    }\n\n    public init(params: PillRendererParams<TValue>) {\n        this.params = params;\n        this.refresh();\n    }\n\n    public refresh(): void {\n        this.clearPills();\n\n        const { params, onPillKeyDown } = this;\n\n        const values = params.getValue();\n\n        if (!Array.isArray(values)) {\n            return;\n        }\n\n        const len = values.length;\n\n        for (let i = 0; i < len; i++) {\n            const value = values[i];\n            const pill: AgPill = this.createBean(\n                new AgPill({\n                    onButtonClick: () => this.onPillButtonClick(pill),\n                    onKeyDown: onPillKeyDown.bind(this),\n                })\n            );\n\n            const pillGui = pill.getGui();\n\n            _setAriaPosInSet(pillGui, i + 1);\n            _setAriaSetSize(pillGui, len);\n\n            if (params.onPillMouseDown) {\n                pill.addGuiEventListener('mousedown', params.onPillMouseDown);\n            }\n\n            if (params.announceItemFocus) {\n                pill.addGuiEventListener('focus', params.announceItemFocus);\n            }\n\n            pill.setText(value as string);\n            pill.toggleCloseButtonClass('ag-icon-cancel', true);\n            this.appendChild(pillGui);\n            this.pills.push(pill);\n        }\n    }\n\n    public onNavigationKeyDown(e: KeyboardEvent): void {\n        const { key } = e;\n\n        if (!this.pills.length || (key !== KeyCode.LEFT && key !== KeyCode.RIGHT)) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const activeEl = this.gos.getActiveDomElement();\n        const eGui = this.getGui();\n        const { params, focusService } = this;\n\n        if (eGui.contains(activeEl)) {\n            const nextFocusableEl = focusService.findNextFocusableElement(eGui, false, key === KeyCode.LEFT);\n\n            if (nextFocusableEl) {\n                nextFocusableEl.focus();\n            } else if (params.eWrapper) {\n                params.eWrapper.focus();\n            }\n        } else {\n            const focusableElements = focusService.findFocusableElements(eGui);\n            if (focusableElements.length > 0) {\n                focusableElements[key === KeyCode.RIGHT ? 0 : focusableElements.length - 1].focus();\n            }\n        }\n    }\n\n    private clearPills(): void {\n        const eGui = this.getGui();\n\n        if (eGui.contains(this.gos.getActiveDomElement()) && this.params.eWrapper) {\n            this.params.eWrapper.focus();\n        }\n\n        _clearElement(eGui);\n        this.destroyBeans(this.pills);\n        this.pills = [];\n    }\n\n    private onPillButtonClick(pill: AgPill): void {\n        this.deletePill(pill);\n    }\n\n    private onPillKeyDown(e: KeyboardEvent): void {\n        const key = e.key;\n\n        if (key !== KeyCode.DELETE && key !== KeyCode.BACKSPACE) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const eDoc = this.gos.getDocument();\n        const pillIndex = this.pills.findIndex((pill) => pill.getGui().contains(eDoc.activeElement));\n\n        if (pillIndex === -1) {\n            return;\n        }\n\n        const pill = this.pills[pillIndex];\n\n        if (pill) {\n            this.deletePill(pill, pillIndex);\n        }\n    }\n\n    private deletePill(pill: AgPill, restoreFocusToIndex?: number): void {\n        const value = pill.getText();\n        const values = (this.params.getValue() || []).filter((val) => val !== value);\n        this.params.setValue(values);\n\n        if (!values.length && this.params.eWrapper) {\n            this.params.eWrapper.focus();\n        } else if (restoreFocusToIndex != null) {\n            const pill = this.pills[Math.min(restoreFocusToIndex, this.pills.length - 1)];\n            if (pill) {\n                pill.getFocusableElement().focus();\n            }\n        }\n    }\n\n    public override destroy(): void {\n        this.clearPills();\n        super.destroy();\n    }\n}\n", "import { RefPlaceholder } from '@ag-grid-community/core';\nimport { Component } from '@ag-grid-community/core';\n\nexport interface PillConfig {\n    onKeyDown?: (e?: KeyboardEvent) => void;\n    onButtonClick?: (e?: MouseEvent) => void;\n}\n\nexport class AgPill extends Component {\n    private readonly eText: HTMLElement = RefPlaceholder;\n    private readonly eButton: HTMLElement = RefPlaceholder;\n\n    constructor(private readonly config: PillConfig) {\n        super(/* html */ `\n            <div class=\"ag-pill\" role=\"option\">\n                <span class=\"ag-pill-text\" data-ref=\"eText\"></span>\n                <span class=\"ag-button ag-pill-button\" data-ref=\"eButton\" role=\"presentation\"></span>\n            </div>\n        `);\n    }\n\n    public postConstruct() {\n        const { config, eButton } = this;\n        const { onKeyDown, onButtonClick } = config;\n\n        this.getGui().setAttribute('tabindex', String(this.gos.get('tabIndex')));\n\n        this.addGuiEventListener('focus', () => {\n            this.eButton.focus();\n        });\n\n        if (onKeyDown) {\n            this.addGuiEventListener('keydown', onKeyDown);\n        }\n\n        if (onButtonClick) {\n            this.addManagedElementListeners(eButton, {\n                click: onButtonClick,\n            });\n        }\n    }\n\n    public toggleCloseButtonClass(className: string, force?: boolean) {\n        this.eButton.classList.toggle(className, force);\n    }\n\n    public setText(text: string) {\n        this.eText.textContent = text;\n    }\n\n    public getText(): string | null {\n        return this.eText.textContent;\n    }\n}\n", "import type {\n    Component,\n    RichSelectListRowSelectedEvent,\n    RichSelectParams,\n    WithoutGridCommon,\n} from '@ag-grid-community/core';\nimport { KeyCode, _setAriaActiveDescendant, _setAriaControls, _setAriaLabel } from '@ag-grid-community/core';\n\nimport { RichSelectRow } from './agRichSelectRow';\nimport { VirtualList } from './virtualList';\n\nexport type AgRichSelectListEvent = 'fieldPickerValueSelected' | 'richSelectListRowSelected';\n\nconst LIST_COMPONENT_NAME = 'ag-rich-select-list';\nconst ROW_COMPONENT_NAME = 'ag-rich-select-row';\n\nexport class AgRichSelectList<TValue, TEventType extends string = AgRichSelectListEvent> extends VirtualList<\n    Component<TEventType | AgRichSelectListEvent>,\n    TEventType | AgRichSelectListEvent\n> {\n    private eLoading: HTMLElement | undefined;\n    private lastRowHovered: number = -1;\n    private currentList: TValue[] | undefined;\n    private selectedItems: Set<TValue> = new Set<TValue>();\n\n    constructor(\n        private readonly params: RichSelectParams,\n        private readonly richSelectWrapper: HTMLElement,\n        private readonly getSearchString: () => string\n    ) {\n        super({ cssIdentifier: 'rich-select' });\n        this.params = params;\n        this.setComponentCreator(this.createRowComponent.bind(this));\n        /* nothing to update but method required to soft refresh */\n        this.setComponentUpdater(() => {});\n    }\n\n    public override postConstruct(): void {\n        super.postConstruct();\n        this.createLoadingElement();\n\n        const { cellRowHeight, pickerAriaLabelKey, pickerAriaLabelValue } = this.params;\n\n        if (cellRowHeight) {\n            this.setRowHeight(cellRowHeight);\n        }\n\n        const eGui = this.getGui();\n        const eListAriaEl = this.getAriaElement();\n\n        this.addManagedListeners(eGui, {\n            mousemove: this.onMouseMove.bind(this),\n            mouseout: this.onMouseOut.bind(this),\n            mousedown: this.onMouseDown.bind(this),\n            click: this.onClick.bind(this),\n        });\n\n        eGui.classList.add(LIST_COMPONENT_NAME);\n\n        const listId = `${LIST_COMPONENT_NAME}-${this.getCompId()}`;\n        eListAriaEl.setAttribute('id', listId);\n        const translate = this.localeService.getLocaleTextFunc();\n        const ariaLabel = translate(pickerAriaLabelKey, pickerAriaLabelValue);\n\n        _setAriaLabel(eListAriaEl, ariaLabel);\n        _setAriaControls(this.richSelectWrapper, eListAriaEl);\n    }\n\n    public override navigateToPage(key: 'PageUp' | 'PageDown' | 'Home' | 'End'): number | null {\n        const newIndex = super.navigateToPage(key, this.lastRowHovered);\n\n        if (newIndex != null) {\n            this.animationFrameService.requestAnimationFrame(() => {\n                if (!this.isAlive()) {\n                    return null;\n                }\n                this.highlightIndex(newIndex);\n            });\n        }\n\n        return newIndex;\n    }\n\n    protected override drawVirtualRows(softRefresh?: boolean | undefined): void {\n        super.drawVirtualRows(softRefresh);\n\n        this.refreshSelectedItems();\n    }\n\n    public highlightFilterMatch(searchString: string): void {\n        this.forEachRenderedRow((cmp: RichSelectRow<TValue>) => {\n            cmp.highlightString(searchString);\n        });\n    }\n\n    public onNavigationKeyDown(key: string, announceItem: () => void): void {\n        this.animationFrameService.requestAnimationFrame(() => {\n            if (!this.currentList || !this.isAlive()) {\n                return;\n            }\n            const len = this.currentList.length;\n            const oldIndex = this.lastRowHovered;\n\n            const diff = key === KeyCode.DOWN ? 1 : -1;\n            const newIndex = Math.min(Math.max(oldIndex === -1 ? 0 : oldIndex + diff, 0), len - 1);\n            this.highlightIndex(newIndex);\n            announceItem();\n        });\n    }\n\n    public selectValue(value?: TValue[] | TValue): void {\n        if (!this.currentList) {\n            if (this.eLoading) {\n                this.appendChild(this.eLoading);\n            }\n            return;\n        }\n\n        if (this.eLoading?.offsetParent) {\n            this.eLoading.parentElement?.removeChild(this.eLoading);\n        }\n\n        if (value == null) {\n            return;\n        }\n\n        const selectedPositions = this.getIndicesForValues(value);\n        const len = selectedPositions.length;\n\n        if (len > 0) {\n            // make sure the virtual list has been sized correctly\n            this.refresh();\n            this.ensureIndexVisible(selectedPositions[0]);\n            // this second call to refresh is necessary to force scrolled elements\n            // to be rendered with the correct index info.\n            this.refresh(true);\n        }\n\n        this.selectListItems(Array.isArray(value) ? value : [value]);\n    }\n\n    private selectListItems(values: TValue[], append = false): void {\n        if (!append) {\n            this.selectedItems.clear();\n        }\n\n        for (let i = 0; i < values.length; i++) {\n            const currentItem = values[i];\n            if (this.selectedItems.has(currentItem)) {\n                continue;\n            }\n            this.selectedItems.add(currentItem);\n        }\n\n        this.refreshSelectedItems();\n    }\n\n    public getCurrentList(): TValue[] | undefined {\n        return this.currentList;\n    }\n\n    public setCurrentList(list: TValue[]): void {\n        this.currentList = list;\n\n        this.setModel({\n            getRowCount: () => list.length,\n            getRow: (index: number) => list[index],\n            areRowsEqual: (oldRow, newRow) => oldRow === newRow,\n        });\n    }\n\n    public getSelectedItems(): Set<TValue> {\n        return this.selectedItems;\n    }\n\n    public getLastItemHovered(): TValue {\n        return this.currentList![this.lastRowHovered];\n    }\n\n    public highlightIndex(index: number, preventUnnecessaryScroll?: boolean): void {\n        if (!this.currentList) {\n            return;\n        }\n\n        if (index < 0 || index >= this.currentList.length) {\n            this.lastRowHovered = -1;\n        } else {\n            this.lastRowHovered = index;\n\n            const wasScrolled = this.ensureIndexVisible(index, !preventUnnecessaryScroll);\n\n            if (wasScrolled && !preventUnnecessaryScroll) {\n                this.refresh(true);\n            }\n        }\n\n        this.forEachRenderedRow((cmp: RichSelectRow<TValue>, idx: number) => {\n            const highlighted = index === idx;\n\n            cmp.toggleHighlighted(highlighted);\n\n            if (highlighted) {\n                const idForParent = `${ROW_COMPONENT_NAME}-${cmp.getCompId()}`;\n                _setAriaActiveDescendant(this.richSelectWrapper, idForParent);\n                this.richSelectWrapper.setAttribute('data-active-option', idForParent);\n            }\n        });\n    }\n\n    public getIndicesForValues(values?: TValue[] | TValue): number[] {\n        const { currentList } = this;\n\n        if (!currentList || currentList.length === 0 || values == null) {\n            return [];\n        }\n\n        if (!Array.isArray(values)) {\n            values = [values] as TValue[];\n        }\n\n        if (values.length === 0) {\n            return [];\n        }\n\n        const positions: number[] = [];\n\n        for (let i = 0; i < values.length; i++) {\n            const idx = currentList.indexOf(values[i]);\n            if (idx >= 0) {\n                positions.push(idx);\n            }\n        }\n\n        return positions;\n    }\n\n    public toggleListItemSelection(value: TValue): void {\n        if (this.selectedItems.has(value)) {\n            this.selectedItems.delete(value);\n        } else {\n            this.selectedItems.add(value);\n        }\n\n        this.refreshSelectedItems();\n        this.dispatchValueSelected();\n    }\n\n    private refreshSelectedItems(): void {\n        this.forEachRenderedRow((cmp: RichSelectRow<TValue>) => {\n            const selected = this.selectedItems.has(cmp.getValue());\n            cmp.updateSelected(selected);\n        });\n    }\n\n    private createLoadingElement(): void {\n        const eDocument = this.gos.getDocument();\n        const translate = this.localeService.getLocaleTextFunc();\n        const el = eDocument.createElement('div');\n\n        el.classList.add('ag-loading-text');\n        el.innerText = translate('loadingOoo', 'Loading...');\n        this.eLoading = el;\n    }\n\n    private createRowComponent(value: TValue, listItemElement: HTMLElement): Component<AgRichSelectListEvent> {\n        const row = new RichSelectRow<TValue>(this.params);\n        listItemElement.setAttribute('id', `${ROW_COMPONENT_NAME}-${row.getCompId()}`);\n        row.setParentComponent(this);\n        this.createBean(row);\n        row.setState(value);\n\n        const { highlightMatch, searchType = 'fuzzy' } = this.params;\n\n        if (highlightMatch && searchType !== 'fuzzy') {\n            row.highlightString(this.getSearchString());\n        }\n\n        return row;\n    }\n\n    private getRowForMouseEvent(e: MouseEvent): number {\n        const eGui = this.getGui();\n        const rect = eGui.getBoundingClientRect();\n        const scrollTop = this.getScrollTop();\n        const mouseY = e.clientY - rect.top + scrollTop;\n\n        return Math.floor(mouseY / this.getRowHeight());\n    }\n\n    private onMouseMove(e: MouseEvent): void {\n        const row = this.getRowForMouseEvent(e);\n\n        if (row !== -1 && row != this.lastRowHovered) {\n            this.lastRowHovered = row;\n            this.highlightIndex(row, true);\n        }\n    }\n\n    private onMouseDown(e: MouseEvent): void {\n        // this prevents the list from receiving focus as it\n        // should be controlled by the agRichSelect component\n        e.preventDefault();\n    }\n\n    private onMouseOut(e: MouseEvent): void {\n        if (!this.getGui().contains(e.relatedTarget as HTMLElement)) {\n            this.highlightIndex(-1);\n        }\n    }\n\n    private onClick(e: MouseEvent): void {\n        const { multiSelect } = this.params;\n\n        if (!this.currentList) {\n            return;\n        }\n\n        const row = this.getRowForMouseEvent(e);\n        const item = this.currentList[row];\n\n        if (multiSelect) {\n            this.toggleListItemSelection(item);\n        } else {\n            this.selectListItems([item]);\n            this.dispatchValueSelected();\n        }\n    }\n\n    private dispatchValueSelected(): void {\n        const event: WithoutGridCommon<RichSelectListRowSelectedEvent> = {\n            type: 'richSelectListRowSelected',\n            fromEnterKey: false,\n            value: this.selectedItems,\n        };\n\n        this.dispatchLocalEvent(event);\n    }\n\n    public override destroy(): void {\n        super.destroy();\n        this.eLoading = undefined;\n    }\n}\n", "import type {\n    AgPromise,\n    BeanCollection,\n    IRichCellEditorRendererParams,\n    RichSelectParams,\n    UserCompDetails,\n    UserComponentFactory,\n} from '@ag-grid-community/core';\nimport {\n    Component,\n    _bindCellRendererToHtmlElement,\n    _escapeString,\n    _exists,\n    _setAriaSelected,\n} from '@ag-grid-community/core';\n\nimport type { AgRichSelect } from './agRichSelect';\n\nexport class RichSelectRow<TValue> extends Component {\n    private userComponentFactory: UserComponentFactory;\n\n    public wireBeans(beans: BeanCollection) {\n        this.userComponentFactory = beans.userComponentFactory;\n    }\n\n    private value: TValue;\n    private parsedValue: string | null;\n\n    constructor(private readonly params: RichSelectParams<TValue>) {\n        super(/* html */ `<div class=\"ag-rich-select-row\" role=\"presentation\"></div>`);\n    }\n\n    public setState(value: TValue): void {\n        let formattedValue: string = '';\n\n        const { params } = this;\n\n        if (params.valueFormatter) {\n            formattedValue = params.valueFormatter(value);\n        }\n        const rendererSuccessful = this.populateWithRenderer(value, formattedValue);\n        if (!rendererSuccessful) {\n            this.populateWithoutRenderer(value, formattedValue);\n        }\n\n        this.value = value;\n    }\n\n    public highlightString(matchString: string): void {\n        const { parsedValue } = this;\n\n        if (this.params.cellRenderer || !_exists(parsedValue)) {\n            return;\n        }\n\n        let hasMatch = _exists(matchString);\n\n        if (hasMatch) {\n            const index = parsedValue?.toLocaleLowerCase().indexOf(matchString.toLocaleLowerCase());\n            if (index >= 0) {\n                const highlightEndIndex = index + matchString.length;\n                const startPart = _escapeString(parsedValue.slice(0, index), true);\n                const highlightedPart = _escapeString(parsedValue.slice(index, highlightEndIndex), true);\n                const endPart = _escapeString(parsedValue.slice(highlightEndIndex));\n                this.renderValueWithoutRenderer(\n                    /* html */ `${startPart}<span class=\"ag-rich-select-row-text-highlight\">${highlightedPart}</span>${endPart}`\n                );\n            } else {\n                hasMatch = false;\n            }\n        }\n\n        if (!hasMatch) {\n            this.renderValueWithoutRenderer(parsedValue);\n        }\n    }\n\n    public updateSelected(selected: boolean): void {\n        const eGui = this.getGui();\n        _setAriaSelected(eGui.parentElement!, selected);\n\n        this.addOrRemoveCssClass('ag-rich-select-row-selected', selected);\n    }\n\n    public getValue(): TValue {\n        return this.value;\n    }\n\n    public toggleHighlighted(highlighted: boolean): void {\n        this.addOrRemoveCssClass('ag-rich-select-row-highlighted', highlighted);\n    }\n\n    private populateWithoutRenderer(value: any, valueFormatted: any) {\n        const eDocument = this.gos.getDocument();\n        const eGui = this.getGui();\n\n        const span = eDocument.createElement('span');\n        span.style.overflow = 'hidden';\n        span.style.textOverflow = 'ellipsis';\n        const parsedValue = _escapeString(_exists(valueFormatted) ? valueFormatted : value, true);\n        this.parsedValue = _exists(parsedValue) ? parsedValue : null;\n\n        eGui.appendChild(span);\n        this.renderValueWithoutRenderer(parsedValue);\n        this.setTooltip({\n            newTooltipText: this.parsedValue,\n            shouldDisplayTooltip: () => span.scrollWidth > span.clientWidth,\n        });\n    }\n\n    private renderValueWithoutRenderer(value: string | null): void {\n        const span = this.getGui().querySelector('span');\n        if (!span) {\n            return;\n        }\n        span.innerHTML = _exists(value) ? value : '&nbsp;';\n    }\n\n    private populateWithRenderer(value: TValue, valueFormatted: string): boolean {\n        // bad coder here - we are not populating all values of the cellRendererParams\n        let cellRendererPromise: AgPromise<any> | undefined;\n        let userCompDetails: UserCompDetails | undefined;\n\n        if (this.params.cellRenderer) {\n            const richSelect = this.getParentComponent()?.getParentComponent() as AgRichSelect;\n            userCompDetails = this.userComponentFactory.getEditorRendererDetails<\n                RichSelectParams,\n                IRichCellEditorRendererParams<TValue>\n            >(this.params, {\n                value,\n                valueFormatted,\n                getValue: () => richSelect?.getValue(),\n                setValue: (value: TValue[] | TValue | null) => {\n                    richSelect?.setValue(value, true);\n                },\n                setTooltip: (value: string, shouldDisplayTooltip: () => boolean) => {\n                    this.setTooltip({ newTooltipText: value, shouldDisplayTooltip });\n                },\n            });\n        }\n\n        if (userCompDetails) {\n            cellRendererPromise = userCompDetails.newAgStackInstance();\n        }\n\n        if (cellRendererPromise) {\n            _bindCellRendererToHtmlElement(cellRendererPromise, this.getGui());\n        }\n\n        if (cellRendererPromise) {\n            cellRendererPromise.then((childComponent) => {\n                this.addDestroyFunc(() => {\n                    this.destroyBean(childComponent);\n                });\n            });\n            return true;\n        }\n        return false;\n    }\n}\n", "import type {\n    AnimationFrameService,\n    BeanCollection,\n    Component,\n    ComponentEvent,\n    CssVariablesChanged,\n    Environment,\n    ResizeObserverService,\n} from '@ag-grid-community/core';\nimport {\n    KeyCode,\n    RefPlaceholder,\n    TabGuardComp,\n    _getAriaPosInSet,\n    _setAriaLabel,\n    _setAriaPosInSet,\n    _setAriaRole,\n    _setAriaSetSize,\n    _stopPropagationForAgGrid,\n    _waitUntil,\n    _warnOnce,\n} from '@ag-grid-community/core';\n\nimport type { VirtualListModel } from './iVirtualList';\n\ninterface VirtualListParams {\n    cssIdentifier?: string;\n    ariaRole?: string;\n    listName?: string;\n}\n\nfunction getVirtualListTemplate(cssIdentifier: string) {\n    return (\n        /* html */\n        `<div class=\"ag-virtual-list-viewport ag-${cssIdentifier}-virtual-list-viewport\" role=\"presentation\">\n            <div class=\"ag-virtual-list-container ag-${cssIdentifier}-virtual-list-container\" data-ref=\"eContainer\"></div>\n        </div>`\n    );\n}\n\nexport class VirtualList<\n    C extends Component<any> = Component<any>,\n    TEventType extends string = ComponentEvent,\n> extends TabGuardComp<TEventType> {\n    private resizeObserverService: ResizeObserverService;\n    protected animationFrameService: AnimationFrameService;\n    private environment: Environment;\n\n    public wireBeans(beans: BeanCollection): void {\n        this.resizeObserverService = beans.resizeObserverService;\n        this.animationFrameService = beans.animationFrameService;\n        this.environment = beans.environment;\n    }\n\n    private readonly cssIdentifier: string;\n    private readonly ariaRole: string;\n    private listName?: string;\n\n    private model: VirtualListModel;\n    private renderedRows = new Map<number, { rowComponent: C; eDiv: HTMLDivElement; value: any }>();\n    private componentCreator: (value: any, listItemElement: HTMLElement) => C;\n    private componentUpdater: (value: any, component: C) => void;\n    private rowHeight = 20;\n    private pageSize = -1;\n    private isScrolling = false;\n    private lastFocusedRowIndex: number | null;\n    private isHeightFromTheme: boolean = true;\n    private readonly eContainer: HTMLElement = RefPlaceholder;\n\n    constructor(params?: VirtualListParams) {\n        super(getVirtualListTemplate(params?.cssIdentifier || 'default'));\n\n        const { cssIdentifier = 'default', ariaRole = 'listbox', listName } = params || {};\n\n        this.cssIdentifier = cssIdentifier;\n        this.ariaRole = ariaRole;\n        this.listName = listName;\n    }\n\n    public postConstruct(): void {\n        this.addScrollListener();\n        this.rowHeight = this.getItemHeight();\n        this.addResizeObserver();\n\n        this.initialiseTabGuard({\n            onFocusIn: (e: FocusEvent) => this.onFocusIn(e),\n            onFocusOut: (e: FocusEvent) => this.onFocusOut(e),\n            focusInnerElement: (fromBottom: boolean) => this.focusInnerElement(fromBottom),\n            onTabKeyDown: (e) => this.onTabKeyDown(e),\n            handleKeyDown: (e) => this.handleKeyDown(e),\n        });\n\n        this.setAriaProperties();\n        this.addManagedEventListeners({ gridStylesChanged: this.onGridStylesChanged.bind(this) });\n    }\n\n    private onGridStylesChanged(e: CssVariablesChanged): void {\n        if (e.listItemHeightChanged) {\n            this.rowHeight = this.getItemHeight();\n            this.refresh();\n        }\n    }\n\n    private setAriaProperties(): void {\n        const translate = this.localeService.getLocaleTextFunc();\n        const listName = translate('ariaDefaultListName', this.listName || 'List');\n        const ariaEl = this.eContainer;\n\n        _setAriaRole(ariaEl, this.ariaRole);\n        _setAriaLabel(ariaEl, listName);\n    }\n\n    private addResizeObserver(): void {\n        // do this in an animation frame to prevent loops\n        const listener = () => this.animationFrameService.requestAnimationFrame(() => this.drawVirtualRows());\n        const destroyObserver = this.resizeObserverService.observeResize(this.getGui(), listener);\n        this.addDestroyFunc(destroyObserver);\n    }\n\n    protected focusInnerElement(fromBottom: boolean): void {\n        this.focusRow(fromBottom ? this.model.getRowCount() - 1 : 0);\n    }\n\n    protected onFocusIn(e: FocusEvent): void {\n        const target = e.target as HTMLElement;\n\n        if (target.classList.contains('ag-virtual-list-item')) {\n            this.lastFocusedRowIndex = _getAriaPosInSet(target) - 1;\n        }\n    }\n\n    protected onFocusOut(e: FocusEvent): void {\n        if (!this.getFocusableElement().contains(e.relatedTarget as HTMLElement)) {\n            this.lastFocusedRowIndex = null;\n        }\n    }\n\n    protected handleKeyDown(e: KeyboardEvent): void {\n        switch (e.key) {\n            case KeyCode.UP:\n            case KeyCode.DOWN:\n                if (this.navigate(e.key === KeyCode.UP)) {\n                    e.preventDefault();\n                }\n\n                break;\n            case KeyCode.PAGE_HOME:\n            case KeyCode.PAGE_END:\n            case KeyCode.PAGE_UP:\n            case KeyCode.PAGE_DOWN:\n                if (this.navigateToPage(e.key) !== null) {\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n\n    protected onTabKeyDown(e: KeyboardEvent): void {\n        _stopPropagationForAgGrid(e);\n        this.forceFocusOutOfContainer(e.shiftKey);\n    }\n\n    private navigate(up: boolean): boolean {\n        if (this.lastFocusedRowIndex == null) {\n            return false;\n        }\n\n        const nextRow = this.lastFocusedRowIndex + (up ? -1 : 1);\n\n        if (nextRow < 0 || nextRow >= this.model.getRowCount()) {\n            return false;\n        }\n\n        this.focusRow(nextRow);\n\n        return true;\n    }\n\n    public navigateToPage(\n        key: 'Home' | 'PageUp' | 'PageDown' | 'End',\n        fromItem: number | 'focused' = 'focused'\n    ): number | null {\n        let hasFocus = false;\n\n        if (fromItem === 'focused') {\n            fromItem = this.getLastFocusedRow() as number;\n            hasFocus = true;\n        }\n\n        const rowCount = this.model.getRowCount() - 1;\n\n        let newIndex = -1;\n\n        if (key === KeyCode.PAGE_HOME) {\n            newIndex = 0;\n        } else if (key === KeyCode.PAGE_END) {\n            newIndex = rowCount;\n        } else if (key === KeyCode.PAGE_DOWN) {\n            newIndex = Math.min(fromItem + this.pageSize, rowCount);\n        } else if (key === KeyCode.PAGE_UP) {\n            newIndex = Math.max(fromItem - this.pageSize, 0);\n        }\n\n        if (newIndex === -1) {\n            return null;\n        }\n\n        if (hasFocus) {\n            this.focusRow(newIndex);\n        } else {\n            this.ensureIndexVisible(newIndex);\n        }\n\n        return newIndex;\n    }\n\n    public getLastFocusedRow(): number | null {\n        return this.lastFocusedRowIndex;\n    }\n\n    public focusRow(rowNumber: number): void {\n        if (this.isScrolling) {\n            return;\n        }\n        this.isScrolling = true;\n\n        this.ensureIndexVisible(rowNumber);\n\n        this.animationFrameService.requestAnimationFrame(() => {\n            this.isScrolling = false;\n            if (!this.isAlive()) {\n                return;\n            }\n            const renderedRow = this.renderedRows.get(rowNumber);\n\n            if (renderedRow) {\n                renderedRow.eDiv.focus();\n            }\n        });\n    }\n\n    public getComponentAt(rowIndex: number): C | undefined {\n        const comp = this.renderedRows.get(rowIndex);\n\n        return comp && comp.rowComponent;\n    }\n\n    public forEachRenderedRow(func: (comp: C, idx: number) => void): void {\n        this.renderedRows.forEach((value, key) => func(value.rowComponent, key));\n    }\n\n    private getItemHeight(): number {\n        if (!this.isHeightFromTheme) {\n            return this.rowHeight;\n        }\n        return this.environment.getDefaultListItemHeight();\n    }\n\n    /**\n     * Returns true if the view had to be scrolled, otherwise, false.\n     */\n    public ensureIndexVisible(index: number, scrollPartialIntoView: boolean = true): boolean {\n        const lastRow = this.model.getRowCount();\n\n        if (typeof index !== 'number' || index < 0 || index >= lastRow) {\n            _warnOnce('invalid row index for ensureIndexVisible: ', index);\n            return false;\n        }\n\n        const rowTopPixel = index * this.rowHeight;\n        const rowBottomPixel = rowTopPixel + this.rowHeight;\n        const eGui = this.getGui();\n\n        const viewportTopPixel = eGui.scrollTop;\n        const viewportHeight = eGui.offsetHeight;\n        const viewportBottomPixel = viewportTopPixel + viewportHeight;\n\n        const diff = scrollPartialIntoView ? 0 : this.rowHeight;\n        const viewportScrolledPastRow = viewportTopPixel > rowTopPixel + diff;\n        const viewportScrolledBeforeRow = viewportBottomPixel < rowBottomPixel - diff;\n\n        if (viewportScrolledPastRow) {\n            // if row is before, scroll up with row at top\n            eGui.scrollTop = rowTopPixel;\n            return true;\n        }\n\n        if (viewportScrolledBeforeRow) {\n            // if row is below, scroll down with row at bottom\n            const newScrollPosition = rowBottomPixel - viewportHeight;\n            eGui.scrollTop = newScrollPosition;\n            return true;\n        }\n\n        return false;\n    }\n\n    public setComponentCreator(componentCreator: (value: any, listItemElement: HTMLElement) => C): void {\n        this.componentCreator = componentCreator;\n    }\n\n    public setComponentUpdater(componentUpdater: (value: any, component: C) => void): void {\n        this.componentUpdater = componentUpdater;\n    }\n\n    public getRowHeight(): number {\n        return this.rowHeight;\n    }\n\n    public getScrollTop(): number {\n        return this.getGui().scrollTop;\n    }\n\n    public setRowHeight(rowHeight: number): void {\n        this.isHeightFromTheme = false;\n        this.rowHeight = rowHeight;\n        this.refresh();\n    }\n\n    public refresh(softRefresh?: boolean): void {\n        if (this.model == null || !this.isAlive()) {\n            return;\n        }\n\n        const rowCount = this.model.getRowCount();\n        this.eContainer.style.height = `${rowCount * this.rowHeight}px`;\n\n        // ensure height is applied before attempting to redraw rows\n        _waitUntil(\n            () => this.eContainer.clientHeight >= rowCount * this.rowHeight,\n            () => {\n                if (!this.isAlive()) {\n                    return;\n                }\n\n                if (this.canSoftRefresh(softRefresh)) {\n                    this.drawVirtualRows(true);\n                } else {\n                    this.clearVirtualRows();\n                    this.drawVirtualRows();\n                }\n            }\n        );\n    }\n\n    private canSoftRefresh(softRefresh: boolean | undefined): boolean {\n        return !!(\n            softRefresh &&\n            this.renderedRows.size &&\n            typeof this.model.areRowsEqual === 'function' &&\n            this.componentUpdater\n        );\n    }\n\n    private clearVirtualRows() {\n        this.renderedRows.forEach((_, rowIndex) => this.removeRow(rowIndex));\n    }\n\n    protected drawVirtualRows(softRefresh?: boolean) {\n        if (!this.isAlive() || !this.model) {\n            return;\n        }\n\n        const gui = this.getGui();\n        const topPixel = gui.scrollTop;\n        const bottomPixel = topPixel + gui.offsetHeight;\n        const firstRow = Math.floor(topPixel / this.rowHeight);\n        const lastRow = Math.floor(bottomPixel / this.rowHeight);\n        this.pageSize = Math.floor((bottomPixel - topPixel) / this.rowHeight);\n\n        this.ensureRowsRendered(firstRow, lastRow, softRefresh);\n    }\n\n    private ensureRowsRendered(start: number, finish: number, softRefresh?: boolean) {\n        // remove any rows that are no longer required\n        this.renderedRows.forEach((_, rowIndex) => {\n            if ((rowIndex < start || rowIndex > finish) && rowIndex !== this.lastFocusedRowIndex) {\n                this.removeRow(rowIndex);\n            }\n        });\n\n        if (softRefresh) {\n            // refresh any existing rows\n            this.refreshRows();\n        }\n\n        // insert any required new rows\n        for (let rowIndex = start; rowIndex <= finish; rowIndex++) {\n            if (this.renderedRows.has(rowIndex)) {\n                continue;\n            }\n\n            // check this row actually exists (in case overflow buffer window exceeds real data)\n            if (rowIndex < this.model.getRowCount()) {\n                this.insertRow(rowIndex);\n            }\n        }\n    }\n\n    private insertRow(rowIndex: number): void {\n        const value = this.model.getRow(rowIndex);\n        const eDiv = document.createElement('div');\n\n        eDiv.classList.add('ag-virtual-list-item', `ag-${this.cssIdentifier}-virtual-list-item`);\n        _setAriaRole(eDiv, this.ariaRole === 'tree' ? 'treeitem' : 'option');\n        _setAriaSetSize(eDiv, this.model.getRowCount());\n        _setAriaPosInSet(eDiv, rowIndex + 1);\n        eDiv.setAttribute('tabindex', '-1');\n\n        eDiv.style.height = `${this.rowHeight}px`;\n        eDiv.style.top = `${this.rowHeight * rowIndex}px`;\n\n        const rowComponent = this.componentCreator(value, eDiv);\n\n        rowComponent.addGuiEventListener('focusin', () => (this.lastFocusedRowIndex = rowIndex));\n\n        eDiv.appendChild(rowComponent.getGui());\n\n        // keep the DOM order consistent with the order of the rows\n        if (this.renderedRows.has(rowIndex - 1)) {\n            this.renderedRows.get(rowIndex - 1)!.eDiv.insertAdjacentElement('afterend', eDiv);\n        } else if (this.renderedRows.has(rowIndex + 1)) {\n            this.renderedRows.get(rowIndex + 1)!.eDiv.insertAdjacentElement('beforebegin', eDiv);\n        } else {\n            this.eContainer.appendChild(eDiv);\n        }\n\n        this.renderedRows.set(rowIndex, { rowComponent, eDiv, value });\n    }\n\n    private removeRow(rowIndex: number) {\n        const component = this.renderedRows.get(rowIndex)!;\n\n        this.eContainer.removeChild(component.eDiv);\n        this.destroyBean(component.rowComponent);\n        this.renderedRows.delete(rowIndex);\n    }\n\n    private refreshRows(): void {\n        const rowCount = this.model.getRowCount();\n        this.renderedRows.forEach((row, rowIndex) => {\n            if (rowIndex >= rowCount) {\n                this.removeRow(rowIndex);\n            } else {\n                const newValue = this.model.getRow(rowIndex);\n                if (this.model.areRowsEqual?.(row.value, newValue)) {\n                    this.componentUpdater(newValue, row.rowComponent);\n                } else {\n                    // to be replaced later\n                    this.removeRow(rowIndex);\n                }\n            }\n        });\n    }\n\n    private addScrollListener() {\n        this.addGuiEventListener('scroll', () => this.drawVirtualRows(), { passive: true });\n    }\n\n    public setModel(model: VirtualListModel): void {\n        this.model = model;\n    }\n\n    public override getAriaElement(): Element {\n        return this.eContainer;\n    }\n\n    public override destroy(): void {\n        if (!this.isAlive()) {\n            return;\n        }\n\n        this.clearVirtualRows();\n        super.destroy();\n    }\n}\n", "import type {\n    AgEvent,\n    BeanCollection,\n    ComponentSelector,\n    DragAndDropIcon,\n    DragAndDropService,\n    DragItem,\n    DragSource,\n    DragSourceType,\n    DropTarget,\n} from '@ag-grid-community/core';\nimport {\n    Component,\n    KeyCode,\n    RefPlaceholder,\n    TouchListener,\n    _createIconNoSpan,\n    _escapeString,\n    _setAriaLabel,\n    _setDisplayed,\n} from '@ag-grid-community/core';\n\nexport type PillDragCompEvent = 'columnRemove';\nexport abstract class PillDragComp<TItem> extends Component<PillDragCompEvent> {\n    private dragAndDropService: DragAndDropService;\n\n    public wireBeans(beans: BeanCollection) {\n        this.dragAndDropService = beans.dragAndDropService;\n    }\n\n    private readonly eText: HTMLElement = RefPlaceholder;\n    private readonly eDragHandle: HTMLElement = RefPlaceholder;\n    private readonly eButton: HTMLElement = RefPlaceholder;\n\n    public abstract getItem(): TItem;\n    protected abstract getDisplayName(): string;\n    protected abstract getAriaDisplayName(): string;\n    protected abstract getTooltip(): string | null | undefined;\n    protected abstract createGetDragItem(): () => DragItem<TItem>;\n    protected abstract getDragSourceType(): DragSourceType;\n\n    constructor(\n        private dragSourceDropTarget: DropTarget,\n        private ghost: boolean,\n        private horizontal: boolean,\n        private template?: string,\n        private agComponents?: ComponentSelector[]\n    ) {\n        super();\n    }\n\n    public postConstruct(): void {\n        this.setTemplate(\n            this.template ??\n                /* html */ `\n            <span role=\"option\">\n              <span data-ref=\"eDragHandle\" class=\"ag-drag-handle ag-column-drop-cell-drag-handle\" role=\"presentation\"></span>\n              <span data-ref=\"eText\" class=\"ag-column-drop-cell-text\" aria-hidden=\"true\"></span>\n              <span data-ref=\"eButton\" class=\"ag-column-drop-cell-button\" role=\"presentation\"></span>\n            </span>`,\n            this.agComponents\n        );\n        const eGui = this.getGui();\n\n        this.addElementClasses(eGui);\n        this.addElementClasses(this.eDragHandle, 'drag-handle');\n        this.addElementClasses(this.eText, 'text');\n        this.addElementClasses(this.eButton, 'button');\n\n        this.eDragHandle.appendChild(_createIconNoSpan('columnDrag', this.gos)!);\n\n        this.eButton.appendChild(_createIconNoSpan('cancel', this.gos)!);\n\n        this.setupComponents();\n\n        if (!this.ghost && this.isDraggable()) {\n            this.addDragSource();\n        }\n\n        this.setupAria();\n\n        this.setupTooltip();\n        this.activateTabIndex();\n\n        this.refreshDraggable();\n    }\n\n    protected isDraggable(): boolean {\n        return true;\n    }\n\n    protected refreshDraggable(): void {\n        this.eDragHandle.classList.toggle('ag-column-select-column-readonly', !this.isDraggable());\n    }\n\n    protected setupAria() {\n        const translate = this.localeService.getLocaleTextFunc();\n\n        const ariaInstructions = [this.getAriaDisplayName()];\n\n        this.addAdditionalAriaInstructions(ariaInstructions, translate);\n\n        _setAriaLabel(this.getGui(), ariaInstructions.join('. '));\n    }\n\n    protected addAdditionalAriaInstructions(\n        ariaInstructions: string[],\n        translate: (key: string, defaultValue: string) => string\n    ): void {\n        if (this.isRemovable()) {\n            const deleteAria = translate('ariaDropZoneColumnComponentDescription', 'Press DELETE to remove');\n            ariaInstructions.push(deleteAria);\n        }\n    }\n\n    private setupTooltip(): void {\n        const refresh = () => {\n            const newTooltipText = this.getTooltip();\n            this.setTooltip({ newTooltipText });\n        };\n\n        refresh();\n\n        this.addManagedEventListeners({ newColumnsLoaded: refresh });\n    }\n\n    protected getDragSourceId(): string | undefined {\n        return undefined;\n    }\n\n    protected getDefaultIconName(): DragAndDropIcon {\n        return 'notAllowed';\n    }\n\n    private addDragSource(): void {\n        const { dragAndDropService, eDragHandle } = this;\n        const getDragItem = this.createGetDragItem();\n        const defaultIconName = this.getDefaultIconName();\n        const dragSource: DragSource = {\n            type: this.getDragSourceType(),\n            sourceId: this.getDragSourceId(),\n            eElement: eDragHandle,\n            getDefaultIconName: () => defaultIconName,\n            getDragItem,\n            dragItemName: this.getDisplayName(),\n        };\n\n        dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(() => dragAndDropService.removeDragSource(dragSource));\n    }\n\n    protected setupComponents(): void {\n        this.setTextValue();\n        this.setupRemove();\n\n        if (this.ghost) {\n            this.addCssClass('ag-column-drop-cell-ghost');\n        }\n    }\n\n    protected isRemovable(): boolean {\n        return true;\n    }\n\n    protected refreshRemove(): void {\n        _setDisplayed(this.eButton, this.isRemovable());\n    }\n\n    private setupRemove(): void {\n        this.refreshRemove();\n\n        const agEvent: AgEvent<PillDragCompEvent> = { type: 'columnRemove' };\n\n        this.addGuiEventListener('keydown', (e: KeyboardEvent) => this.onKeyDown(e));\n\n        this.addManagedElementListeners(this.eButton, {\n            click: (mouseEvent: MouseEvent) => {\n                this.dispatchLocalEvent(agEvent);\n                mouseEvent.stopPropagation();\n            },\n        });\n\n        const touchListener = new TouchListener(this.eButton);\n        this.addManagedListeners(touchListener, {\n            tap: () => this.dispatchLocalEvent(agEvent),\n        });\n        this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n    }\n\n    protected onKeyDown(e: KeyboardEvent): void {\n        const isDelete = e.key === KeyCode.DELETE;\n\n        if (isDelete) {\n            if (this.isRemovable()) {\n                e.preventDefault();\n                this.dispatchLocalEvent({ type: 'columnRemove' });\n            }\n        }\n    }\n\n    protected getDisplayValue(): string {\n        return this.getDisplayName();\n    }\n\n    private setTextValue(): void {\n        const displayValue = this.getDisplayValue();\n        const displayValueSanitised: any = _escapeString(displayValue);\n\n        this.eText.innerHTML = displayValueSanitised;\n    }\n\n    private addElementClasses(el: HTMLElement, suffix?: string) {\n        suffix = suffix ? `-${suffix}` : '';\n        const direction = this.horizontal ? 'horizontal' : 'vertical';\n        el.classList.add(`ag-column-drop-cell${suffix}`, `ag-column-drop-${direction}-cell${suffix}`);\n    }\n\n    public override destroy(): void {\n        super.destroy();\n        (this.dragSourceDropTarget as any) = null;\n    }\n}\n", "import type {\n    BeanCollection,\n    DragAndDropService,\n    DragItem,\n    DragSourceType,\n    DraggingEvent,\n    DropTarget,\n    FocusService,\n} from '@ag-grid-community/core';\nimport {\n    Component,\n    KeyCode,\n    ManagedFocusFeature,\n    PositionableFeature,\n    _areEqual,\n    _clearElement,\n    _createIconNoSpan,\n    _existsAndNotEmpty,\n    _includes,\n    _insertArrayIntoArray,\n    _last,\n    _setAriaHidden,\n    _setAriaLabel,\n    _setAriaPosInSet,\n    _setAriaRole,\n    _setAriaSetSize,\n} from '@ag-grid-community/core';\n\nimport type { PillDragComp } from './pillDragComp';\n\nexport interface PillDropZonePanelParams {\n    emptyMessage?: string;\n    title?: string;\n    icon?: Element;\n}\n\ntype PillState = 'notDragging' | 'newItemsIn' | 'rearrangeItems';\n\nexport abstract class PillDropZonePanel<TPill extends PillDragComp<TItem>, TItem> extends Component {\n    private focusService: FocusService;\n    private dragAndDropService: DragAndDropService;\n\n    public wireBeans(beans: BeanCollection) {\n        this.focusService = beans.focusService;\n        this.dragAndDropService = beans.dragAndDropService;\n    }\n\n    private state: PillState = 'notDragging';\n\n    private dropTarget: DropTarget;\n\n    // when we are considering a drop from a dnd event,\n    // the items to be dropped go in here\n    private potentialDndItems: TItem[];\n\n    private guiDestroyFunctions: (() => void)[] = [];\n\n    private params: PillDropZonePanelParams;\n\n    private childPillComponents: TPill[] = [];\n    private insertIndex: number;\n\n    // when this component is refreshed, we rip out all DOM elements and build it up\n    // again from scratch. one exception is ePillDropList, as we want to maintain the\n    // scroll position between the refreshes, so we create one instance of it here and\n    // reuse it.\n    private ePillDropList: HTMLElement;\n\n    private positionableFeature: PositionableFeature;\n    private resizeEnabled: boolean = false;\n\n    protected abstract isItemDroppable(item: TItem, draggingEvent: DraggingEvent): boolean;\n    protected abstract updateItems(items: TItem[]): void;\n    protected abstract getExistingItems(): TItem[];\n    protected abstract getIconName(): string;\n    protected abstract getAriaLabel(): string;\n    protected abstract createPillComponent(\n        item: TItem,\n        dropTarget: DropTarget,\n        ghost: boolean,\n        horizontal: boolean\n    ): TPill;\n    protected abstract getItems(dragItem: DragItem<TItem>): TItem[];\n    protected abstract isInterestedIn(type: DragSourceType): boolean;\n\n    constructor(private horizontal: boolean) {\n        super(/* html */ `<div class=\"ag-unselectable\" role=\"presentation\"></div>`);\n        this.addElementClasses(this.getGui());\n        this.ePillDropList = document.createElement('div');\n        this.addElementClasses(this.ePillDropList, 'list');\n        _setAriaRole(this.ePillDropList, 'listbox');\n    }\n\n    public isHorizontal(): boolean {\n        return this.horizontal;\n    }\n\n    public toggleResizable(resizable: boolean) {\n        this.positionableFeature.setResizable(resizable ? { bottom: true } : false);\n        this.resizeEnabled = resizable;\n    }\n\n    protected isSourceEventFromTarget(draggingEvent: DraggingEvent): boolean {\n        const { dropZoneTarget, dragSource } = draggingEvent;\n        return dropZoneTarget.contains(dragSource.eElement);\n    }\n\n    public override destroy(): void {\n        this.destroyGui();\n        super.destroy();\n    }\n\n    private destroyGui(): void {\n        this.guiDestroyFunctions.forEach((func) => func());\n        this.guiDestroyFunctions.length = 0;\n        this.childPillComponents.length = 0;\n        _clearElement(this.getGui());\n        _clearElement(this.ePillDropList);\n    }\n\n    public init(params?: PillDropZonePanelParams): void {\n        this.params = params ?? {};\n\n        this.createManagedBean(\n            new ManagedFocusFeature(this.getFocusableElement(), {\n                onTabKeyDown: this.onTabKeyDown.bind(this),\n                handleKeyDown: this.onKeyDown.bind(this),\n            })\n        );\n\n        this.setupDropTarget();\n\n        this.positionableFeature = new PositionableFeature(this.getGui(), { minHeight: 100 });\n        this.createManagedBean(this.positionableFeature);\n\n        this.refreshGui();\n        _setAriaLabel(this.ePillDropList, this.getAriaLabel());\n    }\n\n    private onTabKeyDown(e: KeyboardEvent): void {\n        const focusableElements = this.focusService.findFocusableElements(this.getFocusableElement(), null, true);\n        const len = focusableElements.length;\n\n        if (len === 0) {\n            return;\n        }\n\n        const { shiftKey } = e;\n        const activeEl = this.gos.getActiveDomElement();\n\n        const isFirstFocused = activeEl === focusableElements[0];\n        const isLastFocused = activeEl === _last(focusableElements);\n        const shouldAllowDefaultTab = len === 1 || (isFirstFocused && shiftKey) || (isLastFocused && !shiftKey);\n\n        if (!shouldAllowDefaultTab) {\n            focusableElements[shiftKey ? 0 : len - 1].focus();\n        }\n    }\n\n    private onKeyDown(e: KeyboardEvent) {\n        const { key } = e;\n        const isVertical = !this.horizontal;\n\n        let isNext = key === KeyCode.DOWN;\n        let isPrevious = key === KeyCode.UP;\n\n        if (!isVertical) {\n            const isRtl = this.gos.get('enableRtl');\n            isNext = (!isRtl && key === KeyCode.RIGHT) || (isRtl && key === KeyCode.LEFT);\n            isPrevious = (!isRtl && key === KeyCode.LEFT) || (isRtl && key === KeyCode.RIGHT);\n        }\n\n        if (!isNext && !isPrevious) {\n            return;\n        }\n\n        const el = this.focusService.findNextFocusableElement(this.getFocusableElement(), false, isPrevious);\n\n        if (el) {\n            e.preventDefault();\n            el.focus();\n        }\n    }\n\n    private addElementClasses(el: Element, suffix?: string) {\n        suffix = suffix ? `-${suffix}` : '';\n        const direction = this.horizontal ? 'horizontal' : 'vertical';\n        el.classList.add(`ag-column-drop${suffix}`, `ag-column-drop-${direction}${suffix}`);\n    }\n\n    private setupDropTarget(): void {\n        this.dropTarget = {\n            getContainer: this.getGui.bind(this),\n            getIconName: this.getIconName.bind(this),\n            onDragging: this.onDragging.bind(this),\n            onDragEnter: this.onDragEnter.bind(this),\n            onDragLeave: this.onDragLeave.bind(this),\n            onDragStop: this.onDragStop.bind(this),\n            isInterestedIn: this.isInterestedIn.bind(this),\n        };\n\n        this.dragAndDropService.addDropTarget(this.dropTarget);\n    }\n\n    protected minimumAllowedNewInsertIndex(): number {\n        return 0;\n    }\n\n    private checkInsertIndex(draggingEvent: DraggingEvent): boolean {\n        const newIndex = this.getNewInsertIndex(draggingEvent);\n\n        // <0 happens when drag is no a direction we are interested in, eg drag is up/down but in horizontal panel\n        if (newIndex < 0) {\n            return false;\n        }\n\n        const minimumAllowedIndex = this.minimumAllowedNewInsertIndex();\n        const newAdjustedIndex = Math.max(minimumAllowedIndex, newIndex);\n\n        const changed = newAdjustedIndex !== this.insertIndex;\n\n        if (changed) {\n            this.insertIndex = newAdjustedIndex;\n        }\n\n        return changed;\n    }\n\n    private getNewInsertIndex(draggingEvent: DraggingEvent): number {\n        const mouseEvent = draggingEvent.event;\n        const mouseLocation = this.horizontal ? mouseEvent.clientX : mouseEvent.clientY;\n\n        const boundsList = this.childPillComponents.map((comp) => comp.getGui().getBoundingClientRect());\n        // find the non-ghost component we're hovering\n        const hoveredIndex = boundsList.findIndex((rect) =>\n            this.horizontal\n                ? rect.right > mouseLocation && rect.left < mouseLocation\n                : rect.top < mouseLocation && rect.bottom > mouseLocation\n        );\n\n        // not hovering a non-ghost component\n        if (hoveredIndex === -1) {\n            const enableRtl = this.gos.get('enableRtl');\n\n            // if mouse is below or right of all components then new index should be placed last\n            const isLast = boundsList.every((rect) => mouseLocation > (this.horizontal ? rect.right : rect.bottom));\n\n            if (isLast) {\n                return enableRtl && this.horizontal ? 0 : this.childPillComponents.length;\n            }\n\n            // if mouse is above or left of all components, new index is first\n            const isFirst = boundsList.every((rect) => mouseLocation < (this.horizontal ? rect.left : rect.top));\n\n            if (isFirst) {\n                return enableRtl && this.horizontal ? this.childPillComponents.length : 0;\n            }\n\n            // must be hovering a ghost, don't change the index\n            return this.insertIndex;\n        }\n\n        // if the old index is equal to or less than the index of our new target\n        // we need to shift right, to insert after rather than before\n        if (this.insertIndex <= hoveredIndex) {\n            return hoveredIndex + 1;\n        }\n        return hoveredIndex;\n    }\n\n    private checkDragStartedBySelf(draggingEvent: DraggingEvent): void {\n        if (this.state !== 'notDragging') {\n            return;\n        }\n\n        this.state = 'rearrangeItems';\n\n        this.potentialDndItems = this.getItems(draggingEvent.dragSource.getDragItem());\n        this.refreshGui();\n\n        this.checkInsertIndex(draggingEvent);\n        this.refreshGui();\n    }\n\n    private onDragging(draggingEvent: DraggingEvent): void {\n        this.checkDragStartedBySelf(draggingEvent);\n\n        if (this.checkInsertIndex(draggingEvent)) {\n            this.refreshGui();\n        }\n    }\n\n    protected handleDragEnterEnd(draggingEvent: DraggingEvent): void {}\n\n    private onDragEnter(draggingEvent: DraggingEvent): void {\n        // this will contain all items that are potential drops\n        const dragItems = this.getItems(draggingEvent.dragSource.getDragItem());\n        this.state = 'newItemsIn';\n        // take out items that are not droppable\n        const goodDragItems = dragItems.filter((item) => this.isItemDroppable(item, draggingEvent));\n        const alreadyPresent = goodDragItems.every(\n            (item) => this.childPillComponents.map((cmp) => cmp.getItem()).indexOf(item) !== -1\n        );\n\n        if (goodDragItems.length === 0) {\n            return;\n        }\n\n        this.potentialDndItems = goodDragItems;\n\n        if (alreadyPresent) {\n            this.state = 'notDragging';\n            return;\n        }\n\n        this.handleDragEnterEnd(draggingEvent);\n\n        this.checkInsertIndex(draggingEvent);\n        this.refreshGui();\n    }\n\n    protected isPotentialDndItems(): boolean {\n        return _existsAndNotEmpty(this.potentialDndItems);\n    }\n\n    protected handleDragLeaveEnd(draggingEvent: DraggingEvent): void {}\n\n    private onDragLeave(draggingEvent: DraggingEvent): void {\n        // if the dragging started from us, we remove the group, however if it started\n        // some place else, then we don't, as it was only 'asking'\n\n        if (this.state === 'rearrangeItems') {\n            const items = this.getItems(draggingEvent.dragSource.getDragItem());\n            this.removeItems(items);\n        }\n\n        if (this.isPotentialDndItems()) {\n            this.handleDragLeaveEnd(draggingEvent);\n\n            this.potentialDndItems = [];\n            this.refreshGui();\n        }\n\n        this.state = 'notDragging';\n    }\n\n    private onDragStop(): void {\n        if (this.isPotentialDndItems()) {\n            if (this.state === 'newItemsIn') {\n                this.addItems(this.potentialDndItems);\n            } else {\n                this.rearrangeItems(this.potentialDndItems);\n            }\n\n            this.potentialDndItems = [];\n            this.refreshGui();\n        }\n\n        this.state = 'notDragging';\n    }\n\n    private removeItems(itemsToRemove: TItem[]): void {\n        const newItemList = this.getExistingItems().filter((item) => !_includes(itemsToRemove, item));\n        this.updateItems(newItemList);\n    }\n\n    private addItems(itemsToAdd: TItem[]): void {\n        if (!itemsToAdd) {\n            return;\n        }\n        const newItemList = this.getExistingItems().slice();\n        const itemsToAddNoDuplicates = itemsToAdd.filter((item) => newItemList.indexOf(item) < 0);\n        _insertArrayIntoArray(newItemList, itemsToAddNoDuplicates, this.insertIndex);\n        this.updateItems(newItemList);\n    }\n\n    public addItem(item: TItem): void {\n        this.insertIndex = this.getExistingItems().length;\n        this.addItems([item]);\n        this.refreshGui();\n    }\n\n    private rearrangeItems(itemsToAdd: TItem[]): boolean {\n        const newItemList = this.getNonGhostItems().slice();\n        _insertArrayIntoArray(newItemList, itemsToAdd, this.insertIndex);\n\n        if (_areEqual(newItemList, this.getExistingItems())) {\n            return false;\n        }\n\n        this.updateItems(newItemList);\n        return true;\n    }\n\n    public refreshGui(): void {\n        // we reset the scroll position after the refresh.\n        // if we don't do this, then the list will always scroll to the top\n        // each time we refresh it. this is because part of the refresh empties\n        // out the list which sets scroll to zero. so the user could be just\n        // reordering the list - we want to prevent the resetting of the scroll.\n        // this is relevant for vertical display only (as horizontal has no scroll)\n        const scrollTop = this.ePillDropList.scrollTop;\n        const resizeEnabled = this.resizeEnabled;\n        const focusedIndex = this.getFocusedItem();\n\n        let alternateElement = this.focusService.findNextFocusableElement();\n\n        if (!alternateElement) {\n            alternateElement = this.focusService.findNextFocusableElement(undefined, false, true);\n        }\n\n        this.toggleResizable(false);\n        this.destroyGui();\n\n        this.addIconAndTitleToGui();\n        this.addEmptyMessageToGui();\n        this.addItemsToGui();\n\n        if (!this.isHorizontal()) {\n            this.ePillDropList.scrollTop = scrollTop;\n        }\n\n        if (resizeEnabled) {\n            this.toggleResizable(resizeEnabled);\n        }\n\n        // focus should only be restored when keyboard mode\n        // otherwise mouse clicks will cause containers to scroll\n        // without no apparent reason.\n        if (this.focusService.isKeyboardMode()) {\n            this.restoreFocus(focusedIndex, alternateElement!);\n        }\n    }\n\n    private getFocusedItem(): number {\n        const eGui = this.getGui();\n        const activeElement = this.gos.getActiveDomElement();\n\n        if (!eGui.contains(activeElement)) {\n            return -1;\n        }\n\n        const items = Array.from(eGui.querySelectorAll('.ag-column-drop-cell'));\n\n        return items.indexOf(activeElement as HTMLElement);\n    }\n\n    private restoreFocus(index: number, alternateElement: HTMLElement): void {\n        const eGui = this.getGui();\n        const items = Array.from(eGui.querySelectorAll('.ag-column-drop-cell'));\n\n        if (index === -1) {\n            return;\n        }\n\n        if (items.length === 0) {\n            alternateElement.focus();\n        }\n\n        const indexToFocus = Math.min(items.length - 1, index);\n        const el = items[indexToFocus] as HTMLElement;\n\n        if (el) {\n            el.focus();\n        }\n    }\n\n    public focusList(fromBottom?: boolean): void {\n        const index = fromBottom ? this.childPillComponents.length - 1 : 0;\n        this.restoreFocus(index, this.getFocusableElement());\n    }\n\n    private getNonGhostItems(): TItem[] {\n        const existingItems = this.getExistingItems();\n\n        if (this.isPotentialDndItems()) {\n            return existingItems.filter((item) => !_includes(this.potentialDndItems, item));\n        }\n        return existingItems;\n    }\n\n    private addItemsToGui(): void {\n        const nonGhostItems = this.getNonGhostItems();\n        const itemsToAddToGui: TPill[] = nonGhostItems.map((item) => this.createItemComponent(item, false));\n\n        if (this.isPotentialDndItems()) {\n            const dndItems = this.potentialDndItems.map((item) => this.createItemComponent(item, true));\n            if (this.insertIndex >= itemsToAddToGui.length) {\n                itemsToAddToGui.push(...dndItems);\n            } else {\n                itemsToAddToGui.splice(this.insertIndex, 0, ...dndItems);\n            }\n        }\n\n        this.appendChild(this.ePillDropList);\n\n        itemsToAddToGui.forEach((itemComponent, index) => {\n            if (index > 0) {\n                this.addArrow(this.ePillDropList);\n            }\n\n            this.ePillDropList.appendChild(itemComponent.getGui());\n        });\n\n        this.addAriaLabelsToComponents();\n    }\n\n    private addAriaLabelsToComponents(): void {\n        this.childPillComponents.forEach((comp, idx) => {\n            const eGui = comp.getGui();\n            _setAriaPosInSet(eGui, idx + 1);\n            _setAriaSetSize(eGui, this.childPillComponents.length);\n        });\n    }\n\n    private createItemComponent(item: TItem, ghost: boolean): TPill {\n        const itemComponent = this.createPillComponent(item, this.dropTarget, ghost, this.horizontal);\n        itemComponent.addEventListener('columnRemove', this.removeItems.bind(this, [item]));\n\n        this.createBean(itemComponent);\n        this.guiDestroyFunctions.push(() => this.destroyBean(itemComponent));\n\n        if (!ghost) {\n            this.childPillComponents.push(itemComponent);\n        }\n\n        return itemComponent;\n    }\n\n    private addIconAndTitleToGui(): void {\n        const { title, icon: eGroupIcon } = this.params;\n        if (!title || !eGroupIcon) {\n            return;\n        }\n        const eTitleBar = document.createElement('div');\n        _setAriaHidden(eTitleBar, true);\n        this.addElementClasses(eTitleBar, 'title-bar');\n        this.addElementClasses(eGroupIcon, 'icon');\n        this.addOrRemoveCssClass('ag-column-drop-empty', this.isExistingItemsEmpty());\n\n        eTitleBar.appendChild(eGroupIcon);\n\n        if (!this.horizontal) {\n            const eTitle = document.createElement('span');\n            this.addElementClasses(eTitle, 'title');\n            eTitle.innerHTML = title;\n\n            eTitleBar.appendChild(eTitle);\n        }\n\n        this.appendChild(eTitleBar);\n    }\n\n    private isExistingItemsEmpty(): boolean {\n        return this.getExistingItems().length === 0;\n    }\n\n    private addEmptyMessageToGui(): void {\n        const { emptyMessage } = this.params;\n        if (!emptyMessage || !this.isExistingItemsEmpty() || this.isPotentialDndItems()) {\n            return;\n        }\n\n        const eMessage = document.createElement('span');\n        eMessage.innerHTML = emptyMessage;\n        this.addElementClasses(eMessage, 'empty-message');\n        this.ePillDropList.appendChild(eMessage);\n    }\n\n    private addArrow(eParent: HTMLElement): void {\n        // only add the arrows if the layout is horizontal\n        if (this.horizontal) {\n            // for RTL it's a left arrow, otherwise it's a right arrow\n            const enableRtl = this.gos.get('enableRtl');\n            const icon = _createIconNoSpan(enableRtl ? 'smallLeft' : 'smallRight', this.gos)!;\n            this.addElementClasses(icon, 'cell-separator');\n            eParent.appendChild(icon);\n        }\n    }\n}\n", "import type {\n    BeanCollection,\n    FocusService,\n    FocusableContainer,\n    PopupService,\n    ResizableStructure,\n} from '@ag-grid-community/core';\nimport { Component, TabGuardFeature, _createIconNoSpan, _setDisplayed } from '@ag-grid-community/core';\n\nimport type { PanelOptions } from './agPanel';\nimport { AgPanel } from './agPanel';\n\nexport type ResizableSides =\n    | 'topLeft'\n    | 'top'\n    | 'topRight'\n    | 'right'\n    | 'bottomRight'\n    | 'bottom'\n    | 'bottomLeft'\n    | 'left';\n\nexport interface DialogOptions extends PanelOptions {\n    eWrapper?: HTMLElement;\n    modal?: boolean;\n    movable?: boolean;\n    alwaysOnTop?: boolean;\n    maximizable?: boolean;\n    afterGuiAttached?: () => void;\n    closedCallback?: (event?: MouseEvent | TouchEvent | KeyboardEvent) => void;\n}\n\nexport class AgDialog extends AgPanel<DialogOptions> implements FocusableContainer {\n    private popupService: PopupService;\n    private focusService: FocusService;\n\n    public wireBeans(beans: BeanCollection) {\n        this.popupService = beans.popupService;\n        this.focusService = beans.focusService;\n    }\n\n    private tabGuardFeature: TabGuardFeature;\n    private isMaximizable: boolean = false;\n    private isMaximized: boolean = false;\n    private maximizeListeners: (() => void)[] = [];\n    private maximizeButtonComp: Component | undefined;\n    private maximizeIcon: Element | undefined;\n    private minimizeIcon: Element | undefined;\n    private resizeListenerDestroy: (() => void) | null | undefined = null;\n\n    private lastPosition = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n\n    constructor(config: DialogOptions) {\n        super({ ...config, popup: true });\n    }\n\n    public override postConstruct() {\n        const eGui = this.getGui();\n        const { movable, resizable, maximizable, modal } = this.config;\n\n        this.addCssClass('ag-dialog');\n\n        super.postConstruct();\n\n        this.tabGuardFeature = this.createManagedBean(new TabGuardFeature(this));\n        this.tabGuardFeature.initialiseTabGuard({\n            isFocusableContainer: true,\n            onFocusIn: () => {\n                const eDocument = this.gos.getDocument();\n                const { activeElement } = eDocument;\n                const restoreFocus = this.popupService.bringPopupToFront(eGui);\n                // if popup is brought to front, need to put focus back\n                if (restoreFocus && activeElement !== eDocument.body) {\n                    (activeElement as HTMLElement)?.focus?.();\n                }\n            },\n            onTabKeyDown: (e) => {\n                if (modal) {\n                    return;\n                }\n                const backwards = e.shiftKey;\n                const nextFocusableElement = this.focusService.findNextFocusableElement(eGui, false, backwards);\n                if (!nextFocusableElement || this.tabGuardFeature.getTabGuardCtrl().isTabGuard(nextFocusableElement)) {\n                    if (this.focusService.focusNextGridCoreContainer(backwards)) {\n                        e.preventDefault();\n                    }\n                }\n            },\n        });\n\n        if (movable) {\n            this.setMovable(movable);\n        }\n        if (maximizable) {\n            this.setMaximizable(maximizable);\n        }\n        if (resizable) {\n            this.setResizable(resizable);\n        }\n\n        if (!this.config.modal) {\n            const { focusService } = this;\n            focusService.addFocusableContainer(this);\n            this.addDestroyFunc(() => focusService.removeFocusableContainer(this));\n        }\n    }\n\n    public setAllowFocus(allowFocus: boolean): void {\n        this.tabGuardFeature.getTabGuardCtrl().setAllowFocus(allowFocus);\n    }\n\n    protected override renderComponent() {\n        const eGui = this.getGui();\n        const { alwaysOnTop, modal, title, afterGuiAttached } = this.config;\n        const translate = this.localeService.getLocaleTextFunc();\n\n        const addPopupRes = this.popupService.addPopup({\n            modal,\n            eChild: eGui,\n            closeOnEsc: true,\n            closedCallback: this.onClosed.bind(this),\n            alwaysOnTop,\n            ariaLabel: title || translate('ariaLabelDialog', 'Dialog'),\n            afterGuiAttached,\n        });\n\n        if (addPopupRes) {\n            this.close = addPopupRes.hideFunc;\n        }\n    }\n\n    private onClosed(event?: MouseEvent | TouchEvent | KeyboardEvent): void {\n        this.destroy();\n        this.config.closedCallback?.(event);\n    }\n\n    private toggleMaximize() {\n        const position = this.positionableFeature.getPosition();\n        if (this.isMaximized) {\n            const { x, y, width, height } = this.lastPosition;\n            this.setWidth(width);\n            this.setHeight(height);\n            this.positionableFeature.offsetElement(x, y);\n        } else {\n            this.lastPosition.width = this.getWidth()!;\n            this.lastPosition.height = this.getHeight()!;\n            this.lastPosition.x = position.x;\n            this.lastPosition.y = position.y;\n            this.positionableFeature.offsetElement(0, 0);\n            this.setHeight('100%');\n            this.setWidth('100%');\n        }\n\n        this.isMaximized = !this.isMaximized;\n        this.refreshMaximizeIcon();\n    }\n\n    private refreshMaximizeIcon() {\n        _setDisplayed(this.maximizeIcon!, !this.isMaximized);\n        _setDisplayed(this.minimizeIcon!, this.isMaximized);\n    }\n\n    private clearMaximizebleListeners() {\n        if (this.maximizeListeners.length) {\n            this.maximizeListeners.forEach((destroyListener) => destroyListener());\n            this.maximizeListeners.length = 0;\n        }\n\n        if (this.resizeListenerDestroy) {\n            this.resizeListenerDestroy();\n            this.resizeListenerDestroy = null;\n        }\n    }\n\n    public override destroy(): void {\n        this.maximizeButtonComp = this.destroyBean(this.maximizeButtonComp);\n\n        this.clearMaximizebleListeners();\n        super.destroy();\n    }\n\n    public setResizable(resizable: boolean | ResizableStructure) {\n        this.positionableFeature.setResizable(resizable);\n    }\n\n    public setMovable(movable: boolean) {\n        this.positionableFeature.setMovable(movable, this.eTitleBar);\n    }\n\n    public setMaximizable(maximizable: boolean) {\n        if (!maximizable) {\n            this.clearMaximizebleListeners();\n\n            if (this.maximizeButtonComp) {\n                this.destroyBean(this.maximizeButtonComp);\n                this.maximizeButtonComp = this.maximizeIcon = this.minimizeIcon = undefined;\n            }\n            return;\n        }\n\n        const eTitleBar = this.eTitleBar;\n\n        if (!eTitleBar || maximizable === this.isMaximizable) {\n            return;\n        }\n\n        const maximizeButtonComp = this.buildMaximizeAndMinimizeElements();\n        this.refreshMaximizeIcon();\n\n        maximizeButtonComp.addManagedElementListeners(maximizeButtonComp.getGui(), {\n            click: this.toggleMaximize.bind(this),\n        });\n\n        this.addTitleBarButton(maximizeButtonComp, 0);\n\n        this.maximizeListeners.push(\n            ...this.addManagedElementListeners(eTitleBar, {\n                dblclick: this.toggleMaximize.bind(this),\n            })\n        );\n\n        [this.resizeListenerDestroy] = this.addManagedListeners(this.positionableFeature, {\n            resize: () => {\n                this.isMaximized = false;\n                this.refreshMaximizeIcon();\n            },\n        });\n    }\n\n    private buildMaximizeAndMinimizeElements(): Component {\n        const maximizeButtonComp = (this.maximizeButtonComp = this.createBean(\n            new Component(/* html */ `<div class=\"ag-dialog-button\"></span>`)\n        ));\n\n        const eGui = maximizeButtonComp.getGui();\n\n        this.maximizeIcon = _createIconNoSpan('maximize', this.gos)!;\n        eGui.appendChild(this.maximizeIcon);\n        this.maximizeIcon.classList.add('ag-panel-title-bar-button-icon');\n\n        this.minimizeIcon = _createIconNoSpan('minimize', this.gos)!;\n        eGui.appendChild(this.minimizeIcon);\n        this.minimizeIcon.classList.add('ag-panel-title-bar-button-icon');\n\n        return maximizeButtonComp;\n    }\n}\n", "import type { PositionableOptions, ResizableStructure } from '@ag-grid-community/core';\nimport {\n    Component,\n    PositionableFeature,\n    RefPlaceholder,\n    _createIconNoSpan,\n    _getInnerHeight,\n    _getInnerWidth,\n    _isVisible,\n    _setDisplayed,\n} from '@ag-grid-community/core';\n\nexport interface PanelOptions extends PositionableOptions {\n    component?: Component<any>;\n    hideTitleBar?: boolean | null;\n    closable?: boolean | null;\n    resizable?: boolean | ResizableStructure;\n    title?: string | null;\n    cssIdentifier?: string | null;\n}\nfunction getTemplate(config: PanelOptions) {\n    const cssIdentifier = config.cssIdentifier || 'default';\n    return /* html */ `<div class=\"ag-panel ag-${cssIdentifier}-panel\" tabindex=\"-1\">\n        <div data-ref=\"eTitleBar\" class=\"ag-panel-title-bar ag-${cssIdentifier}-panel-title-bar ag-unselectable\">\n            <span data-ref=\"eTitle\" class=\"ag-panel-title-bar-title ag-${cssIdentifier}-panel-title-bar-title\"></span>\n            <div data-ref=\"eTitleBarButtons\" class=\"ag-panel-title-bar-buttons ag-${cssIdentifier}-panel-title-bar-buttons\"></div>\n        </div>\n        <div data-ref=\"eContentWrapper\" class=\"ag-panel-content-wrapper ag-${cssIdentifier}-panel-content-wrapper\"></div>\n    </div>`;\n}\n\nexport class AgPanel<TConfig extends PanelOptions = PanelOptions> extends Component {\n    protected static CLOSE_BTN_TEMPLATE = /* html */ `<div class=\"ag-button\"></div>`;\n    protected closable = true;\n\n    protected closeButtonComp: Component | undefined;\n    protected positionableFeature: PositionableFeature;\n    public close: () => void;\n\n    protected readonly eContentWrapper: HTMLElement = RefPlaceholder;\n    protected readonly eTitleBar: HTMLElement = RefPlaceholder;\n    protected readonly eTitleBarButtons: HTMLElement = RefPlaceholder;\n    protected readonly eTitle: HTMLElement = RefPlaceholder;\n\n    constructor(protected readonly config: TConfig) {\n        super(getTemplate(config));\n    }\n\n    public postConstruct() {\n        const {\n            component,\n            closable,\n            hideTitleBar,\n            title,\n            minWidth = 250,\n            width,\n            minHeight = 250,\n            height,\n            centered,\n            popup,\n            x,\n            y,\n        } = this.config;\n\n        this.positionableFeature = new PositionableFeature(this.getGui(), {\n            minWidth,\n            width,\n            minHeight,\n            height,\n            centered,\n            x,\n            y,\n            popup,\n            calculateTopBuffer: () => this.positionableFeature.getHeight()! - this.getBodyHeight(),\n        });\n\n        this.createManagedBean(this.positionableFeature);\n\n        const eGui = this.getGui();\n\n        if (component) {\n            this.setBodyComponent(component);\n        }\n\n        if (!hideTitleBar) {\n            if (title) {\n                this.setTitle(title);\n            }\n            this.setClosable(closable != null ? closable : this.closable);\n        } else {\n            _setDisplayed(this.eTitleBar, false);\n        }\n\n        this.addManagedElementListeners(this.eTitleBar, {\n            mousedown: (e: MouseEvent) => {\n                if (\n                    eGui.contains(e.relatedTarget as HTMLElement) ||\n                    eGui.contains(this.gos.getActiveDomElement()) ||\n                    this.eTitleBarButtons.contains(e.target as HTMLElement)\n                ) {\n                    e.preventDefault();\n                    return;\n                }\n\n                const focusEl = this.eContentWrapper.querySelector(\n                    'button, [href], input, select, textarea, [tabindex]'\n                );\n\n                if (focusEl) {\n                    (focusEl as HTMLElement).focus();\n                }\n            },\n        });\n\n        if (popup && this.positionableFeature.isPositioned()) {\n            return;\n        }\n\n        if (this.renderComponent) {\n            this.renderComponent();\n        }\n\n        this.positionableFeature.initialisePosition();\n        this.eContentWrapper.style.height = '0';\n    }\n\n    protected renderComponent() {\n        const eGui = this.getGui();\n        eGui.focus();\n\n        this.close = () => {\n            eGui.parentElement!.removeChild(eGui);\n            this.destroy();\n        };\n    }\n\n    public getHeight(): number | undefined {\n        return this.positionableFeature.getHeight();\n    }\n\n    public setHeight(height: number | string): void {\n        this.positionableFeature.setHeight(height);\n    }\n\n    public getWidth(): number | undefined {\n        return this.positionableFeature.getWidth();\n    }\n\n    public setWidth(width: number | string): void {\n        this.positionableFeature.setWidth(width);\n    }\n\n    public setClosable(closable: boolean) {\n        if (closable !== this.closable) {\n            this.closable = closable;\n        }\n\n        if (closable) {\n            const closeButtonComp = (this.closeButtonComp = new Component(AgPanel.CLOSE_BTN_TEMPLATE));\n            this.createBean(closeButtonComp);\n\n            const eGui = closeButtonComp.getGui();\n            const child = _createIconNoSpan('close', this.gos)!;\n            child.classList.add('ag-panel-title-bar-button-icon');\n            eGui.appendChild(child);\n\n            this.addTitleBarButton(closeButtonComp);\n            closeButtonComp.addManagedElementListeners(eGui, { click: this.onBtClose.bind(this) });\n        } else if (this.closeButtonComp) {\n            const eGui = this.closeButtonComp.getGui();\n            eGui.parentElement!.removeChild(eGui);\n\n            this.closeButtonComp = this.destroyBean(this.closeButtonComp);\n        }\n    }\n\n    public setBodyComponent(bodyComponent: Component<any>) {\n        bodyComponent.setParentComponent(this);\n        this.eContentWrapper.appendChild(bodyComponent.getGui());\n    }\n\n    public addTitleBarButton(button: Component, position?: number) {\n        const eTitleBarButtons = this.eTitleBarButtons;\n        const buttons = eTitleBarButtons.children;\n        const len = buttons.length;\n\n        if (position == null) {\n            position = len;\n        }\n\n        position = Math.max(0, Math.min(position, len));\n\n        button.addCssClass('ag-panel-title-bar-button');\n\n        const eGui = button.getGui();\n\n        if (position === 0) {\n            eTitleBarButtons.insertAdjacentElement('afterbegin', eGui);\n        } else if (position === len) {\n            eTitleBarButtons.insertAdjacentElement('beforeend', eGui);\n        } else {\n            buttons[position - 1].insertAdjacentElement('afterend', eGui);\n        }\n\n        button.setParentComponent(this);\n    }\n\n    public getBodyHeight(): number {\n        return _getInnerHeight(this.eContentWrapper);\n    }\n\n    public getBodyWidth(): number {\n        return _getInnerWidth(this.eContentWrapper);\n    }\n\n    public setTitle(title: string) {\n        this.eTitle.innerText = title;\n    }\n\n    // called when user hits the 'x' in the top right\n    private onBtClose() {\n        this.close();\n    }\n\n    public override destroy(): void {\n        if (this.closeButtonComp) {\n            this.closeButtonComp = this.destroyBean(this.closeButtonComp);\n        }\n\n        const eGui = this.getGui();\n\n        if (eGui && _isVisible(eGui)) {\n            this.close();\n        }\n\n        super.destroy();\n    }\n}\n", "import type {\n    AgEvent,\n    AgPromise,\n    BeanCollection,\n    Component,\n    IComponent,\n    IMenuActionParams,\n    IMenuConfigParams,\n    IMenuItemComp,\n    MenuItemDef,\n    PopupService,\n    UserComponentFactory,\n    WithoutGridCommon,\n} from '@ag-grid-community/core';\nimport {\n    BeanStub,\n    KeyCode,\n    TooltipFeature,\n    _loadTemplate,\n    _setAriaDisabled,\n    _setAriaExpanded,\n    _setAriaLevel,\n    _setAriaRole,\n} from '@ag-grid-community/core';\n\nimport { AgMenuList } from './agMenuList';\nimport { AgMenuPanel } from './agMenuPanel';\n\nexport interface CloseMenuEvent extends AgEvent<'closeMenu'> {\n    mouseEvent?: MouseEvent;\n    keyboardEvent?: KeyboardEvent;\n}\n\nexport interface MenuItemActivatedEvent extends AgEvent<'menuItemActivated'> {\n    menuItem: AgMenuItemComponent;\n}\n\ninterface AgMenuItemComponentParams {\n    menuItemDef: MenuItemDef;\n    isAnotherSubMenuOpen: () => boolean;\n    level: number;\n    childComponent?: IComponent<any>;\n    contextParams: WithoutGridCommon<IMenuActionParams>;\n}\n\nexport type AgMenuItemComponentEvent = 'closeMenu' | 'menuItemActivated';\n\nexport class AgMenuItemComponent extends BeanStub<AgMenuItemComponentEvent> {\n    private popupService: PopupService;\n    private userComponentFactory: UserComponentFactory;\n\n    public wireBeans(beans: BeanCollection) {\n        this.popupService = beans.popupService;\n        this.userComponentFactory = beans.userComponentFactory;\n    }\n\n    private ACTIVATION_DELAY = 80;\n\n    private eGui?: HTMLElement;\n    private params: MenuItemDef;\n    private isAnotherSubMenuOpen: () => boolean;\n    private level: number;\n    private childComponent?: IComponent<any>;\n    private contextParams: WithoutGridCommon<IMenuActionParams>;\n    private menuItemComp: IMenuItemComp;\n    private isActive = false;\n    private hideSubMenu: (() => void) | null;\n    private subMenuIsOpen = false;\n    private subMenuIsOpening = false;\n    private activateTimeoutId: number;\n    private deactivateTimeoutId: number;\n    private parentComponent?: Component<any>;\n    private tooltip?: string;\n    private tooltipFeature?: TooltipFeature;\n    private suppressRootStyles: boolean = true;\n    private suppressAria: boolean = true;\n    private suppressFocus: boolean = true;\n    private cssClassPrefix: string;\n    private eSubMenuGui?: HTMLElement;\n\n    public init(params: AgMenuItemComponentParams): AgPromise<void> {\n        const { menuItemDef, isAnotherSubMenuOpen, level, childComponent, contextParams } = params;\n        this.params = params.menuItemDef;\n        this.level = level;\n        this.isAnotherSubMenuOpen = isAnotherSubMenuOpen;\n        this.childComponent = childComponent;\n        this.contextParams = contextParams;\n        this.cssClassPrefix = this.params.menuItemParams?.cssClassPrefix ?? 'ag-menu-option';\n        const compDetails = this.userComponentFactory.getMenuItemCompDetails(this.params, {\n            ...menuItemDef,\n            level,\n            isAnotherSubMenuOpen,\n            openSubMenu: (activateFirstItem) => this.openSubMenu(activateFirstItem),\n            closeSubMenu: () => this.closeSubMenu(),\n            closeMenu: (event) => this.closeMenu(event),\n            updateTooltip: (tooltip?: string, shouldDisplayTooltip?: () => boolean) =>\n                this.refreshTooltip(tooltip, shouldDisplayTooltip),\n            onItemActivated: () => this.onItemActivated(),\n        });\n        return compDetails.newAgStackInstance().then((comp: IMenuItemComp) => {\n            this.menuItemComp = comp;\n            const configureDefaults = comp.configureDefaults?.();\n            if (configureDefaults) {\n                this.configureDefaults(configureDefaults === true ? undefined : configureDefaults);\n            }\n        });\n    }\n\n    private addListeners(eGui: HTMLElement, params?: IMenuConfigParams): void {\n        if (!params?.suppressClick) {\n            this.addManagedElementListeners(eGui, { click: (e) => this.onItemSelected(e!) });\n        }\n        if (!params?.suppressKeyboardSelect) {\n            this.addManagedElementListeners(eGui, {\n                keydown: (e: KeyboardEvent) => {\n                    if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\n                        e.preventDefault();\n                        this.onItemSelected(e);\n                    }\n                },\n            });\n        }\n        if (!params?.suppressMouseDown) {\n            this.addManagedElementListeners(eGui, {\n                mousedown: (e: MouseEvent) => {\n                    // Prevent event bubbling to other event handlers such as PopupService triggering\n                    // premature closing of any open sub-menu popup.\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n            });\n        }\n        if (!params?.suppressMouseOver) {\n            this.addManagedElementListeners(eGui, {\n                mouseenter: () => this.onMouseEnter(),\n                mouseleave: () => this.onMouseLeave(),\n            });\n        }\n    }\n\n    public isDisabled(): boolean {\n        return !!this.params.disabled;\n    }\n\n    public openSubMenu(activateFirstItem = false): void {\n        this.closeSubMenu();\n\n        if (!this.params.subMenu) {\n            return;\n        }\n\n        this.subMenuIsOpening = true;\n\n        const ePopup = _loadTemplate(/* html */ `<div class=\"ag-menu\" role=\"presentation\"></div>`);\n        this.eSubMenuGui = ePopup;\n        let destroySubMenu: () => void;\n        let afterGuiAttached = () => {\n            this.subMenuIsOpening = false;\n        };\n\n        if (this.childComponent) {\n            const menuPanel = this.createBean(new AgMenuPanel(this.childComponent));\n            menuPanel.setParentComponent(this as any);\n\n            const subMenuGui = menuPanel.getGui();\n            const mouseEvent = 'mouseenter';\n            const mouseEnterListener = () => this.cancelDeactivate();\n\n            subMenuGui.addEventListener(mouseEvent, mouseEnterListener);\n\n            destroySubMenu = () => subMenuGui.removeEventListener(mouseEvent, mouseEnterListener);\n\n            ePopup.appendChild(subMenuGui);\n\n            if ((this.childComponent as any).afterGuiAttached) {\n                afterGuiAttached = () => {\n                    (this.childComponent as any).afterGuiAttached!();\n                    this.subMenuIsOpening = false;\n                };\n            }\n        } else if (this.params.subMenu) {\n            const childMenu = this.createBean(new AgMenuList(this.level + 1, this.contextParams));\n\n            childMenu.setParentComponent(this as any);\n            childMenu.addMenuItems(this.params.subMenu);\n            ePopup.appendChild(childMenu.getGui());\n\n            // bubble menu item selected events\n            this.addManagedListeners(childMenu, { closeMenu: (e) => this.dispatchLocalEvent(e) });\n            childMenu.addGuiEventListener('mouseenter', () => this.cancelDeactivate());\n\n            destroySubMenu = () => this.destroyBean(childMenu);\n\n            if (activateFirstItem) {\n                afterGuiAttached = () => {\n                    childMenu.activateFirstItem();\n                    this.subMenuIsOpening = false;\n                };\n            }\n        }\n\n        const positionCallback = this.popupService.positionPopupForMenu.bind(this.popupService, {\n            eventSource: this.eGui,\n            ePopup,\n        });\n\n        const translate = this.localeService.getLocaleTextFunc();\n\n        const addPopupRes = this.popupService.addPopup({\n            modal: true,\n            eChild: ePopup,\n            positionCallback: positionCallback,\n            anchorToElement: this.eGui,\n            ariaLabel: translate('ariaLabelSubMenu', 'SubMenu'),\n            afterGuiAttached,\n        });\n\n        this.subMenuIsOpen = true;\n        this.setAriaExpanded(true);\n\n        this.hideSubMenu = () => {\n            if (addPopupRes) {\n                addPopupRes.hideFunc();\n            }\n            this.subMenuIsOpen = false;\n            this.setAriaExpanded(false);\n            destroySubMenu();\n            this.menuItemComp.setExpanded?.(false);\n            this.eSubMenuGui = undefined;\n        };\n\n        this.menuItemComp.setExpanded?.(true);\n    }\n\n    private setAriaExpanded(expanded: boolean): void {\n        if (!this.suppressAria) {\n            _setAriaExpanded(this.eGui!, expanded);\n        }\n    }\n\n    public closeSubMenu(): void {\n        if (!this.hideSubMenu) {\n            return;\n        }\n        this.hideSubMenu();\n        this.hideSubMenu = null;\n        this.setAriaExpanded(false);\n    }\n\n    public isSubMenuOpen(): boolean {\n        return this.subMenuIsOpen;\n    }\n\n    public isSubMenuOpening(): boolean {\n        return this.subMenuIsOpening;\n    }\n\n    public activate(openSubMenu?: boolean): void {\n        this.cancelActivate();\n\n        if (this.params.disabled) {\n            return;\n        }\n\n        this.isActive = true;\n        if (!this.suppressRootStyles) {\n            this.eGui!.classList.add(`${this.cssClassPrefix}-active`);\n        }\n        this.menuItemComp.setActive?.(true);\n        if (!this.suppressFocus) {\n            this.eGui!.focus({ preventScroll: true });\n        }\n\n        if (openSubMenu && this.params.subMenu) {\n            window.setTimeout(() => {\n                if (this.isAlive() && this.isActive) {\n                    this.openSubMenu();\n                }\n            }, 300);\n        }\n\n        this.onItemActivated();\n    }\n\n    public deactivate() {\n        this.cancelDeactivate();\n        if (!this.suppressRootStyles) {\n            this.eGui!.classList.remove(`${this.cssClassPrefix}-active`);\n        }\n        this.menuItemComp.setActive?.(false);\n        this.isActive = false;\n\n        if (this.subMenuIsOpen) {\n            this.hideSubMenu!();\n        }\n    }\n\n    public getGui(): HTMLElement {\n        return this.menuItemComp.getGui();\n    }\n\n    public getParentComponent(): Component | undefined {\n        return this.parentComponent;\n    }\n\n    public setParentComponent(component: Component<any>): void {\n        this.parentComponent = component;\n    }\n\n    public getSubMenuGui(): HTMLElement | undefined {\n        return this.eSubMenuGui;\n    }\n\n    private onItemSelected(event: MouseEvent | KeyboardEvent): void {\n        this.menuItemComp.select?.();\n        if (this.params.action) {\n            this.getFrameworkOverrides().wrapOutgoing(() =>\n                this.params.action!(\n                    this.gos.addGridCommonParams({\n                        ...this.contextParams,\n                    })\n                )\n            );\n        } else {\n            this.openSubMenu(event && event.type === 'keydown');\n        }\n\n        if ((this.params.subMenu && !this.params.action) || this.params.suppressCloseOnSelect) {\n            return;\n        }\n\n        this.closeMenu(event);\n    }\n\n    private closeMenu(event?: MouseEvent | KeyboardEvent): void {\n        const e: CloseMenuEvent = {\n            type: 'closeMenu',\n        };\n\n        if (event) {\n            if (event instanceof MouseEvent) {\n                e.mouseEvent = event;\n            } else {\n                e.keyboardEvent = event;\n            }\n        }\n\n        this.dispatchLocalEvent(e);\n    }\n\n    private onItemActivated(): void {\n        const event: MenuItemActivatedEvent = {\n            type: 'menuItemActivated',\n            menuItem: this,\n        };\n\n        this.dispatchLocalEvent(event);\n    }\n\n    private cancelActivate(): void {\n        if (this.activateTimeoutId) {\n            window.clearTimeout(this.activateTimeoutId);\n            this.activateTimeoutId = 0;\n        }\n    }\n\n    private cancelDeactivate(): void {\n        if (this.deactivateTimeoutId) {\n            window.clearTimeout(this.deactivateTimeoutId);\n            this.deactivateTimeoutId = 0;\n        }\n    }\n\n    private onMouseEnter(): void {\n        this.cancelDeactivate();\n\n        if (this.isAnotherSubMenuOpen()) {\n            // wait to see if the user enters the open sub-menu\n            this.activateTimeoutId = window.setTimeout(() => this.activate(true), this.ACTIVATION_DELAY);\n        } else {\n            // activate immediately\n            this.activate(true);\n        }\n    }\n\n    private onMouseLeave(): void {\n        this.cancelActivate();\n\n        if (this.isSubMenuOpen()) {\n            // wait to see if the user enters the sub-menu\n            this.deactivateTimeoutId = window.setTimeout(() => this.deactivate(), this.ACTIVATION_DELAY);\n        } else {\n            // de-activate immediately\n            this.deactivate();\n        }\n    }\n\n    private configureDefaults(params?: IMenuConfigParams): void {\n        if (!this.menuItemComp) {\n            // need to wait for init to complete\n            setTimeout(() => this.configureDefaults(params));\n            return;\n        }\n\n        let eGui = this.menuItemComp.getGui();\n        // in some frameworks, `getGui` might be a framework element\n        const rootElement = (this.menuItemComp as any).getRootElement?.() as HTMLElement | undefined;\n        if (rootElement) {\n            if (!params?.suppressRootStyles) {\n                eGui.classList.add('ag-menu-option-custom');\n            }\n            eGui = rootElement;\n        }\n        this.eGui = eGui;\n\n        this.suppressRootStyles = !!params?.suppressRootStyles;\n        if (!this.suppressRootStyles) {\n            eGui.classList.add(this.cssClassPrefix);\n            this.params.cssClasses?.forEach((it) => eGui.classList.add(it));\n            if (this.params.disabled) {\n                eGui.classList.add(`${this.cssClassPrefix}-disabled`);\n            }\n        }\n        if (!params?.suppressTooltip) {\n            this.refreshTooltip(this.params.tooltip);\n        }\n        this.suppressAria = !!params?.suppressAria;\n        if (!this.suppressAria) {\n            _setAriaRole(eGui, 'treeitem');\n            _setAriaLevel(eGui, this.level + 1);\n            if (this.params.disabled) {\n                _setAriaDisabled(eGui, true);\n            }\n        }\n        if (!params?.suppressTabIndex) {\n            eGui.setAttribute('tabindex', '-1');\n        }\n        if (!this.params.disabled) {\n            this.addListeners(eGui, params);\n        }\n        this.suppressFocus = !!params?.suppressFocus;\n    }\n\n    private refreshTooltip(tooltip?: string, shouldDisplayTooltip?: () => boolean): void {\n        this.tooltip = tooltip;\n\n        if (this.tooltipFeature) {\n            this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n        }\n\n        if (!tooltip || !this.menuItemComp) {\n            return;\n        }\n\n        this.tooltipFeature = this.createBean(\n            new TooltipFeature({\n                getGui: () => this.getGui(),\n                getTooltipValue: () => this.tooltip,\n                getLocation: () => 'menu',\n                shouldDisplayTooltip,\n            })\n        );\n    }\n\n    public override destroy(): void {\n        if (this.tooltipFeature) {\n            this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n        }\n        super.destroy();\n    }\n}\n", "import type { BeanStub, IMenuActionParams, MenuItemDef, WithoutGridCommon } from '@ag-grid-community/core';\nimport {\n    AgPromise,\n    KeyCode,\n    TabGuardComp,\n    _last,\n    _loadTemplate,\n    _stopPropagationForAgGrid,\n    _warnOnce,\n} from '@ag-grid-community/core';\n\nimport type { AgMenuItemComponentEvent, CloseMenuEvent, MenuItemActivatedEvent } from './agMenuItemComponent';\nimport { AgMenuItemComponent } from './agMenuItemComponent';\n\nexport type AgMenuListEvent = AgMenuItemComponentEvent;\n\nexport class AgMenuList extends TabGuardComp<AgMenuListEvent> {\n    private menuItems: AgMenuItemComponent[] = [];\n    private activeMenuItem: AgMenuItemComponent | null;\n    private params: WithoutGridCommon<IMenuActionParams>;\n\n    constructor(\n        private readonly level = 0,\n        params?: WithoutGridCommon<IMenuActionParams>\n    ) {\n        super(/* html */ `<div class=\"ag-menu-list\" role=\"tree\"></div>`);\n        this.params = params ?? {\n            column: null,\n            node: null,\n            value: null,\n        };\n    }\n\n    public postConstruct() {\n        this.initialiseTabGuard({\n            onTabKeyDown: (e) => this.onTabKeyDown(e),\n            handleKeyDown: (e) => this.handleKeyDown(e),\n            onFocusIn: (e) => this.handleFocusIn(e),\n            onFocusOut: (e) => this.handleFocusOut(e),\n        });\n    }\n\n    private onTabKeyDown(e: KeyboardEvent) {\n        const parent = this.getParentComponent();\n        const parentGui = parent && parent.getGui();\n        const isManaged = parentGui && parentGui.classList.contains('ag-focus-managed');\n\n        if (!isManaged) {\n            e.preventDefault();\n        }\n\n        if (e.shiftKey) {\n            this.closeIfIsChild(e);\n        }\n    }\n\n    private handleKeyDown(e: KeyboardEvent): void {\n        switch (e.key) {\n            case KeyCode.UP:\n            case KeyCode.RIGHT:\n            case KeyCode.DOWN:\n            case KeyCode.LEFT:\n                e.preventDefault();\n                this.handleNavKey(e.key);\n                break;\n            case KeyCode.ESCAPE:\n                if (this.closeIfIsChild()) {\n                    _stopPropagationForAgGrid(e);\n                }\n                break;\n        }\n    }\n\n    private handleFocusIn(e: FocusEvent): void {\n        // if focus is coming from outside the menu list, then re-activate an item\n        const oldFocusedElement = e.relatedTarget as HTMLElement;\n        if (\n            !this.tabGuardFeature.getTabGuardCtrl().isTabGuard(oldFocusedElement) &&\n            (this.getGui().contains(oldFocusedElement) ||\n                this.activeMenuItem?.getSubMenuGui()?.contains(oldFocusedElement))\n        ) {\n            return;\n        }\n        if (this.activeMenuItem) {\n            this.activeMenuItem.activate();\n        } else {\n            this.activateFirstItem();\n        }\n    }\n\n    private handleFocusOut(e: FocusEvent): void {\n        // if focus is going outside the menu list, deactivate the current item\n        const newFocusedElement = e.relatedTarget as HTMLElement;\n        if (\n            !this.activeMenuItem ||\n            this.getGui().contains(newFocusedElement) ||\n            this.activeMenuItem.getSubMenuGui()?.contains(newFocusedElement)\n        ) {\n            return;\n        }\n        if (!this.activeMenuItem.isSubMenuOpening()) {\n            this.activeMenuItem.deactivate();\n        }\n    }\n\n    public clearActiveItem(): void {\n        if (this.activeMenuItem) {\n            this.activeMenuItem.deactivate();\n            this.activeMenuItem = null;\n        }\n    }\n\n    public addMenuItems(menuItems?: (MenuItemDef | string)[]): void {\n        if (menuItems == null) {\n            return;\n        }\n\n        AgPromise.all(\n            menuItems.map<AgPromise<{ eGui: HTMLElement | null; comp?: AgMenuItemComponent }>>((menuItemOrString) => {\n                if (menuItemOrString === 'separator') {\n                    return AgPromise.resolve({ eGui: this.createSeparator() });\n                } else if (typeof menuItemOrString === 'string') {\n                    _warnOnce(`unrecognised menu item ${menuItemOrString}`);\n                    return AgPromise.resolve({ eGui: null });\n                } else {\n                    return this.addItem(menuItemOrString);\n                }\n            })\n        ).then((elements) => {\n            elements!.forEach((element) => {\n                if (element?.eGui) {\n                    this.appendChild(element.eGui);\n                    if (element.comp) {\n                        this.menuItems.push(element.comp);\n                    }\n                }\n            });\n        });\n    }\n\n    private addItem(menuItemDef: MenuItemDef): AgPromise<{ comp: AgMenuItemComponent; eGui: HTMLElement }> {\n        const menuItem = this.createManagedBean(new AgMenuItemComponent());\n        return menuItem\n            .init({\n                menuItemDef,\n                isAnotherSubMenuOpen: () => this.menuItems.some((m) => m.isSubMenuOpen()),\n                level: this.level,\n                contextParams: this.params,\n            })\n            .then(() => {\n                menuItem.setParentComponent(this);\n\n                this.addManagedListeners(menuItem, {\n                    closeMenu: (event: CloseMenuEvent) => {\n                        this.dispatchLocalEvent(event);\n                    },\n                    menuItemActivated: (event: MenuItemActivatedEvent) => {\n                        if (this.activeMenuItem && this.activeMenuItem !== event.menuItem) {\n                            this.activeMenuItem.deactivate();\n                        }\n\n                        this.activeMenuItem = event.menuItem;\n                    },\n                });\n\n                return {\n                    comp: menuItem,\n                    eGui: menuItem.getGui(),\n                };\n            });\n    }\n\n    public activateFirstItem(): void {\n        const item = this.menuItems.filter((currentItem) => !currentItem.isDisabled())[0];\n\n        if (!item) {\n            return;\n        }\n\n        item.activate();\n    }\n\n    private createSeparator(): HTMLElement {\n        const separatorHtml = /* html */ `\n            <div class=\"ag-menu-separator\" aria-hidden=\"true\">\n                <div class=\"ag-menu-separator-part\"></div>\n                <div class=\"ag-menu-separator-part\"></div>\n                <div class=\"ag-menu-separator-part\"></div>\n                <div class=\"ag-menu-separator-part\"></div>\n            </div>`;\n\n        return _loadTemplate(separatorHtml);\n    }\n\n    private handleNavKey(key: string): void {\n        switch (key) {\n            case KeyCode.UP:\n            case KeyCode.DOWN: {\n                const nextItem = this.findNextItem(key === KeyCode.UP);\n\n                if (nextItem && nextItem !== this.activeMenuItem) {\n                    nextItem.activate();\n                }\n\n                return;\n            }\n        }\n\n        const left = this.gos.get('enableRtl') ? KeyCode.RIGHT : KeyCode.LEFT;\n\n        if (key === left) {\n            this.closeIfIsChild();\n        } else {\n            this.openChild();\n        }\n    }\n\n    private closeIfIsChild(e?: KeyboardEvent): boolean {\n        const parentItem = this.getParentComponent() as BeanStub;\n\n        if (parentItem && parentItem instanceof AgMenuItemComponent) {\n            if (e) {\n                e.preventDefault();\n            }\n\n            parentItem.closeSubMenu();\n            parentItem.getGui().focus();\n            return true;\n        }\n        return false;\n    }\n\n    private openChild(): void {\n        if (this.activeMenuItem) {\n            this.activeMenuItem.openSubMenu(true);\n        }\n    }\n\n    private findNextItem(up?: boolean): AgMenuItemComponent | undefined {\n        const items = this.menuItems.filter((item) => !item.isDisabled());\n\n        if (!items.length) {\n            return;\n        }\n\n        if (!this.activeMenuItem) {\n            return up ? _last(items) : items[0];\n        }\n\n        if (up) {\n            items.reverse();\n        }\n\n        let nextItem: AgMenuItemComponent | undefined;\n        let foundCurrent = false;\n\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n\n            if (!foundCurrent) {\n                if (item === this.activeMenuItem) {\n                    foundCurrent = true;\n                }\n                continue;\n            }\n\n            nextItem = item;\n            break;\n        }\n\n        if (foundCurrent && !nextItem) {\n            // start again from the beginning (/end)\n            return items[0];\n        }\n\n        return nextItem! || this.activeMenuItem;\n    }\n\n    public override destroy(): void {\n        this.clearActiveItem();\n        super.destroy();\n    }\n}\n", "import type { IComponent } from '@ag-grid-community/core';\nimport { KeyCode, TabGuardComp } from '@ag-grid-community/core';\n\nimport type { AgMenuItemComponent } from './agMenuItemComponent';\n\nexport class AgMenuPanel extends TabGuardComp {\n    constructor(private readonly wrappedComponent: IComponent<any>) {\n        super();\n\n        this.setTemplateFromElement(wrappedComponent.getGui());\n    }\n\n    public postConstruct() {\n        this.initialiseTabGuard({\n            onTabKeyDown: (e) => this.onTabKeyDown(e),\n            handleKeyDown: (e) => this.handleKeyDown(e),\n        });\n    }\n\n    private handleKeyDown(e: KeyboardEvent): void {\n        if (e.key === KeyCode.ESCAPE) {\n            this.closePanel();\n        }\n    }\n\n    private onTabKeyDown(e: KeyboardEvent): void {\n        if (e.defaultPrevented) {\n            return;\n        }\n\n        this.closePanel();\n        e.preventDefault();\n    }\n\n    private closePanel(): void {\n        const menuItem = this.parentComponent as unknown as AgMenuItemComponent;\n        menuItem.closeSubMenu();\n        setTimeout(() => menuItem.getGui().focus(), 0);\n    }\n}\n", "import type {\n    AgEvent,\n    BeanCollection,\n    Component,\n    DragAndDropService,\n    DragSourceType,\n    DraggingEvent,\n    DropTarget,\n} from '@ag-grid-community/core';\nimport { AutoScrollService, BeanStub, _radioCssClass } from '@ag-grid-community/core';\n\nimport type { VirtualList } from '../widgets/virtualList';\nimport type { VirtualListDragItem, VirtualListDragParams } from './iVirtualListDragFeature';\n\nconst LIST_ITEM_HOVERED = 'ag-list-item-hovered';\n\nexport class VirtualListDragFeature<\n    C extends Component<any>,\n    R extends Component<any>,\n    V,\n    E extends AgEvent,\n> extends BeanStub {\n    private dragAndDropService: DragAndDropService;\n\n    public wireBeans(beans: BeanCollection): void {\n        this.dragAndDropService = beans.dragAndDropService;\n    }\n\n    private currentDragValue: V | null = null;\n    private lastHoveredListItem: VirtualListDragItem<R> | null = null;\n    private autoScrollService: AutoScrollService;\n    private moveBlocked: boolean;\n\n    constructor(\n        private readonly comp: C,\n        private readonly virtualList: VirtualList<any>,\n        private readonly params: VirtualListDragParams<C, R, V, E>\n    ) {\n        super();\n    }\n\n    public postConstruct(): void {\n        this.addManagedListeners(this.params.eventSource, {\n            [this.params.listItemDragStartEvent]: this.listItemDragStart.bind(this),\n            [this.params.listItemDragEndEvent]: this.listItemDragEnd.bind(this),\n        });\n\n        this.createDropTarget();\n        this.createAutoScrollService();\n    }\n\n    private listItemDragStart(event: E): void {\n        this.currentDragValue = this.params.getCurrentDragValue(event);\n        this.moveBlocked = this.params.isMoveBlocked(this.currentDragValue);\n    }\n\n    private listItemDragEnd(): void {\n        window.setTimeout(() => {\n            this.currentDragValue = null;\n            this.moveBlocked = false;\n        }, 10);\n    }\n\n    private createDropTarget(): void {\n        const dropTarget: DropTarget = {\n            isInterestedIn: (type: DragSourceType) => type === this.params.dragSourceType,\n            getIconName: () => (this.moveBlocked ? 'pinned' : 'move'),\n            getContainer: () => this.comp.getGui(),\n            onDragging: (e) => this.onDragging(e),\n            onDragStop: () => this.onDragStop(),\n            onDragLeave: () => this.onDragLeave(),\n        };\n\n        this.dragAndDropService.addDropTarget(dropTarget);\n    }\n\n    private createAutoScrollService(): void {\n        const virtualListGui = this.virtualList.getGui();\n        this.autoScrollService = new AutoScrollService({\n            scrollContainer: virtualListGui,\n            scrollAxis: 'y',\n            getVerticalPosition: () => virtualListGui.scrollTop,\n            setVerticalPosition: (position) => (virtualListGui.scrollTop = position),\n        });\n    }\n\n    private onDragging(e: DraggingEvent) {\n        if (!this.currentDragValue || this.moveBlocked) {\n            return;\n        }\n\n        const hoveredListItem = this.getListDragItem(e);\n        const comp = this.virtualList.getComponentAt(hoveredListItem.rowIndex);\n\n        if (!comp) {\n            return;\n        }\n\n        const el = comp!.getGui().parentElement as HTMLElement;\n\n        if (\n            this.lastHoveredListItem &&\n            this.lastHoveredListItem.rowIndex === hoveredListItem.rowIndex &&\n            this.lastHoveredListItem.position === hoveredListItem.position\n        ) {\n            return;\n        }\n\n        this.autoScrollService.check(e.event);\n        this.clearHoveredItems();\n        this.lastHoveredListItem = hoveredListItem;\n\n        _radioCssClass(el, LIST_ITEM_HOVERED);\n        _radioCssClass(el, `ag-item-highlight-${hoveredListItem.position}`);\n    }\n\n    private getListDragItem(e: DraggingEvent): VirtualListDragItem<R> {\n        const virtualListGui = this.virtualList.getGui();\n        const paddingTop = parseFloat(window.getComputedStyle(virtualListGui).paddingTop as string);\n        const rowHeight = this.virtualList.getRowHeight();\n        const scrollTop = this.virtualList.getScrollTop();\n        const rowIndex = Math.max(0, (e.y - paddingTop + scrollTop) / rowHeight);\n        const maxLen = this.params.getNumRows(this.comp) - 1;\n        const normalizedRowIndex = Math.min(maxLen, rowIndex) | 0;\n\n        return {\n            rowIndex: normalizedRowIndex,\n            position: Math.round(rowIndex) > rowIndex || rowIndex > maxLen ? 'bottom' : 'top',\n            component: this.virtualList.getComponentAt(normalizedRowIndex) as R,\n        };\n    }\n\n    private onDragStop() {\n        if (this.moveBlocked) {\n            return;\n        }\n\n        this.params.moveItem(this.currentDragValue, this.lastHoveredListItem);\n\n        this.clearHoveredItems();\n        this.autoScrollService.ensureCleared();\n    }\n\n    private onDragLeave() {\n        this.clearHoveredItems();\n        this.autoScrollService.ensureCleared();\n    }\n\n    private clearHoveredItems(): void {\n        const virtualListGui = this.virtualList.getGui();\n        virtualListGui.querySelectorAll(`.${LIST_ITEM_HOVERED}`).forEach((el) => {\n            [LIST_ITEM_HOVERED, 'ag-item-highlight-top', 'ag-item-highlight-bottom'].forEach((cls) => {\n                (el as HTMLElement).classList.remove(cls);\n            });\n        });\n        this.lastHoveredListItem = null;\n    }\n}\n", "import type { BeanCollection, FocusService, IAfterGuiAttachedParams } from '@ag-grid-community/core';\nimport {\n    KeyCode,\n    RefPlaceholder,\n    TabGuardComp,\n    _clearElement,\n    _createIconNoSpan,\n    _setAriaLabel,\n    _setAriaRole,\n} from '@ag-grid-community/core';\n\nimport type { TabbedItem, TabbedLayoutParams } from './iTabbedLayout';\n\ninterface TabbedItemWrapper {\n    tabbedItem: TabbedItem;\n    eHeaderButton: HTMLElement;\n}\n\nfunction getTabbedLayoutTemplate(cssClass?: string) {\n    return /* html */ `<div class=\"ag-tabs ${cssClass}\">\n        <div data-ref=\"eHeader\"></div>\n        <div data-ref=\"eBody\" role=\"presentation\" class=\"ag-tabs-body ${cssClass ? `${cssClass}-body` : ''}\"></div>\n    </div>`;\n}\n\nexport class TabbedLayout extends TabGuardComp {\n    private focusService: FocusService;\n\n    public wireBeans(beans: BeanCollection): void {\n        this.focusService = beans.focusService;\n    }\n\n    private readonly eHeader: HTMLElement = RefPlaceholder;\n    private readonly eBody: HTMLElement = RefPlaceholder;\n\n    private eTabHeader: HTMLElement;\n    private eCloseButton?: HTMLElement;\n\n    private params: TabbedLayoutParams;\n    private afterAttachedParams: IAfterGuiAttachedParams;\n    private items: TabbedItemWrapper[] = [];\n    private activeItem: TabbedItemWrapper;\n    private lastScrollListener: (() => null) | null | undefined;\n    private readonly tabbedItemScrollMap = new Map<string, number>();\n\n    constructor(params: TabbedLayoutParams) {\n        super(getTabbedLayoutTemplate(params.cssClass));\n        this.params = params;\n    }\n\n    public postConstruct() {\n        this.setupHeader();\n\n        if (this.params.items) {\n            this.params.items.forEach((item) => this.addItem(item));\n        }\n\n        this.initialiseTabGuard({\n            onTabKeyDown: this.onTabKeyDown.bind(this),\n            handleKeyDown: this.handleKeyDown.bind(this),\n            focusInnerElement: this.focusInnerElement.bind(this),\n            focusTrapActive: true,\n        });\n\n        this.addDestroyFunc(() => this.activeItem?.tabbedItem?.afterDetachedCallback?.());\n    }\n\n    private setupHeader(): void {\n        const { enableCloseButton, cssClass } = this.params;\n        const addCssClasses = (el: HTMLElement, suffix: string) => {\n            el.classList.add(`ag-tabs-${suffix}`);\n            if (cssClass) {\n                el.classList.add(`${cssClass}-${suffix}`);\n            }\n        };\n        if (enableCloseButton) {\n            this.setupCloseButton(addCssClasses);\n            this.eTabHeader = this.gos.getDocument().createElement('div');\n            addCssClasses(this.eHeader, 'header-wrapper');\n            _setAriaRole(this.eHeader, 'presentation');\n            this.eHeader.appendChild(this.eTabHeader);\n        } else {\n            this.eTabHeader = this.eHeader;\n        }\n        _setAriaRole(this.eTabHeader, 'tablist');\n        addCssClasses(this.eTabHeader, 'header');\n    }\n\n    private setupCloseButton(addCssClasses: (el: HTMLElement, suffix: string) => void): void {\n        const eDocument = this.gos.getDocument();\n        const eCloseButton = eDocument.createElement('button');\n        addCssClasses(eCloseButton, 'close-button');\n        const eIcon = _createIconNoSpan('close', this.gos, undefined, true)!;\n        _setAriaLabel(eCloseButton, this.params.closeButtonAriaLabel);\n        eCloseButton.appendChild(eIcon);\n        this.addManagedElementListeners(eCloseButton, { click: () => this.params.onCloseClicked?.() });\n        const eCloseButtonWrapper = eDocument.createElement('div');\n        addCssClasses(eCloseButtonWrapper, 'close-button-wrapper');\n        _setAriaRole(eCloseButtonWrapper, 'presentation');\n        eCloseButtonWrapper.appendChild(eCloseButton);\n        this.eHeader.appendChild(eCloseButtonWrapper);\n        this.eCloseButton = eCloseButton;\n    }\n\n    protected handleKeyDown(e: KeyboardEvent): void {\n        switch (e.key) {\n            case KeyCode.RIGHT:\n            case KeyCode.LEFT: {\n                if (!this.eTabHeader.contains(this.gos.getActiveDomElement())) {\n                    return;\n                }\n                const isRightKey = e.key === KeyCode.RIGHT;\n                const isRtl = this.gos.get('enableRtl');\n                const currentPosition = this.items.indexOf(this.activeItem);\n                const nextPosition =\n                    isRightKey !== isRtl\n                        ? Math.min(currentPosition + 1, this.items.length - 1)\n                        : Math.max(currentPosition - 1, 0);\n\n                if (currentPosition === nextPosition) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                const nextItem = this.items[nextPosition];\n\n                this.showItemWrapper(nextItem);\n                nextItem.eHeaderButton.focus();\n                break;\n            }\n            case KeyCode.UP:\n            case KeyCode.DOWN:\n                e.stopPropagation();\n                break;\n        }\n    }\n\n    protected onTabKeyDown(e: KeyboardEvent) {\n        if (e.defaultPrevented) {\n            return;\n        }\n\n        const { focusService, eHeader, eBody, activeItem, params } = this;\n        const { suppressTrapFocus, enableCloseButton } = params;\n\n        const activeElement = this.gos.getActiveDomElement();\n        const target = e.target as HTMLElement;\n        const backwards = e.shiftKey;\n\n        if (eHeader.contains(activeElement)) {\n            e.preventDefault();\n            if (enableCloseButton && backwards && !this.eCloseButton?.contains(activeElement)) {\n                this.eCloseButton?.focus();\n            } else if (suppressTrapFocus && backwards) {\n                this.focusService.findFocusableElementBeforeTabGuard(this.gos.getDocument().body, target)?.focus();\n            } else {\n                // focus is in header, move into body of popup\n                this.focusBody(e.shiftKey);\n            }\n            return;\n        }\n\n        let nextEl: HTMLElement | null = null;\n\n        if (focusService.isTargetUnderManagedComponent(eBody, target)) {\n            if (backwards) {\n                nextEl = this.focusService.findFocusableElementBeforeTabGuard(eBody, target);\n            }\n\n            if (!nextEl && !suppressTrapFocus) {\n                nextEl = activeItem.eHeaderButton;\n            }\n        }\n\n        if (!nextEl && eBody.contains(activeElement)) {\n            nextEl = focusService.findNextFocusableElement(eBody, false, backwards);\n\n            if (!nextEl) {\n                if (suppressTrapFocus && !backwards) {\n                    this.forceFocusOutOfContainer(backwards);\n                } else if (enableCloseButton && !backwards) {\n                    e.preventDefault();\n                    this.eCloseButton?.focus();\n                } else {\n                    e.preventDefault();\n                    this.focusHeader();\n                }\n                return;\n            }\n        }\n\n        if (nextEl) {\n            e.preventDefault();\n            nextEl.focus();\n        }\n    }\n\n    private focusInnerElement(fromBottom?: boolean): void {\n        if (fromBottom) {\n            this.focusBody(true);\n        } else {\n            this.focusHeader();\n        }\n    }\n\n    public focusHeader(preventScroll?: boolean): void {\n        this.activeItem.eHeaderButton.focus({ preventScroll });\n    }\n\n    private focusBody(fromBottom?: boolean): void {\n        this.focusService.focusInto(this.eBody, fromBottom);\n    }\n\n    public setAfterAttachedParams(params: IAfterGuiAttachedParams): void {\n        this.afterAttachedParams = params;\n    }\n\n    public showFirstItem(): void {\n        if (this.items.length > 0) {\n            this.showItemWrapper(this.items[0]);\n        }\n    }\n\n    private addItem(item: TabbedItem): void {\n        const eHeaderButton = document.createElement('span');\n\n        _setAriaRole(eHeaderButton, 'tab');\n        eHeaderButton.setAttribute('tabindex', '-1');\n        eHeaderButton.appendChild(item.title);\n        eHeaderButton.classList.add('ag-tab');\n\n        this.eTabHeader.appendChild(eHeaderButton);\n        _setAriaLabel(eHeaderButton, item.titleLabel);\n\n        const wrapper: TabbedItemWrapper = {\n            tabbedItem: item,\n            eHeaderButton: eHeaderButton,\n        };\n        this.items.push(wrapper);\n\n        eHeaderButton.addEventListener('click', this.showItemWrapper.bind(this, wrapper));\n    }\n\n    public showItem(tabbedItem: TabbedItem): void {\n        const itemWrapper = this.items.find((wrapper) => wrapper.tabbedItem === tabbedItem);\n\n        if (itemWrapper) {\n            this.showItemWrapper(itemWrapper);\n        }\n    }\n\n    private showItemWrapper(wrapper: TabbedItemWrapper): void {\n        const { tabbedItem, eHeaderButton } = wrapper;\n\n        this.params.onItemClicked?.({ item: tabbedItem });\n\n        if (this.activeItem === wrapper) {\n            this.params.onActiveItemClicked?.();\n            return;\n        }\n\n        if (this.lastScrollListener) {\n            this.lastScrollListener = this.lastScrollListener();\n        }\n\n        _clearElement(this.eBody);\n\n        tabbedItem.bodyPromise.then((body: HTMLElement) => {\n            this.eBody.appendChild(body);\n            const onlyUnmanaged = !this.focusService.isKeyboardMode();\n\n            if (!this.params.suppressFocusBodyOnOpen) {\n                this.focusService.focusInto(this.eBody, false, onlyUnmanaged);\n            }\n\n            if (tabbedItem.afterAttachedCallback) {\n                tabbedItem.afterAttachedCallback(this.afterAttachedParams);\n            }\n\n            if (this.params.keepScrollPosition) {\n                const scrollableContainer =\n                    (tabbedItem.getScrollableContainer && tabbedItem.getScrollableContainer()) || body;\n                [this.lastScrollListener] = this.addManagedElementListeners(scrollableContainer, {\n                    scroll: () => {\n                        this.tabbedItemScrollMap.set(tabbedItem.name, scrollableContainer.scrollTop);\n                    },\n                });\n                const scrollPosition = this.tabbedItemScrollMap.get(tabbedItem.name);\n                if (scrollPosition !== undefined) {\n                    // Safari needs a small timeout or it will fire a scroll event to position 0\n                    setTimeout(() => {\n                        scrollableContainer.scrollTop = scrollPosition;\n                    }, 0);\n                }\n            }\n        });\n\n        if (this.activeItem) {\n            this.activeItem.eHeaderButton.classList.remove('ag-tab-selected');\n            this.activeItem.tabbedItem.afterDetachedCallback?.();\n        }\n\n        eHeaderButton.classList.add('ag-tab-selected');\n\n        this.activeItem = wrapper;\n    }\n}\n", "import type {\n    GroupCellRendererParams,\n    ICellRendererComp,\n    IGroupCellRenderer,\n    UserCompDetails,\n} from '@ag-grid-community/core';\nimport { Component, RefPlaceholder, _setAriaRole, _setDisplayed } from '@ag-grid-community/core';\n\nimport { GroupCellRendererCtrl } from './groupCellRendererCtrl';\n\nconst groupTemplate =\n    /* html */\n    `<span class=\"ag-cell-wrapper\">\n        <span class=\"ag-group-expanded\" data-ref=\"eExpanded\"></span>\n        <span class=\"ag-group-contracted\" data-ref=\"eContracted\"></span>\n        <span class=\"ag-group-checkbox ag-invisible\" data-ref=\"eCheckbox\"></span>\n        <span class=\"ag-group-value\" data-ref=\"eValue\"></span>\n        <span class=\"ag-group-child-count\" data-ref=\"eChildCount\"></span>\n    </span>`;\n\nexport class GroupCellRenderer extends Component implements ICellRendererComp {\n    private readonly eExpanded: HTMLElement = RefPlaceholder;\n    private readonly eContracted: HTMLElement = RefPlaceholder;\n    private readonly eCheckbox: HTMLElement = RefPlaceholder;\n    private readonly eValue: HTMLElement = RefPlaceholder;\n    private readonly eChildCount: HTMLElement = RefPlaceholder;\n\n    // this cell renderer\n    private innerCellRenderer: ICellRendererComp;\n\n    constructor() {\n        super(groupTemplate);\n    }\n\n    public init(params: GroupCellRendererParams): void {\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (compDetails, valueToDisplay) => this.setRenderDetails(compDetails, valueToDisplay),\n            setChildCount: (count) => (this.eChildCount.textContent = count),\n            addOrRemoveCssClass: (cssClass, value) => this.addOrRemoveCssClass(cssClass, value),\n            setContractedDisplayed: (expanded) => _setDisplayed(this.eContracted, expanded),\n            setExpandedDisplayed: (expanded) => _setDisplayed(this.eExpanded, expanded),\n            setCheckboxVisible: (visible) => this.eCheckbox.classList.toggle('ag-invisible', !visible),\n        };\n\n        const ctrl = this.createManagedBean(new GroupCellRendererCtrl());\n        const fullWidth = !params.colDef;\n        const eGui = this.getGui();\n        ctrl.init(compProxy, eGui, this.eCheckbox, this.eExpanded, this.eContracted, this.constructor, params);\n\n        if (fullWidth) {\n            _setAriaRole(eGui, ctrl.getCellAriaRole());\n        }\n    }\n\n    private setRenderDetails(compDetails: UserCompDetails | undefined, valueToDisplay: any): void {\n        if (compDetails) {\n            const componentPromise = compDetails.newAgStackInstance();\n            if (componentPromise == null) {\n                return;\n            }\n            componentPromise.then((comp) => {\n                if (!comp) {\n                    return;\n                }\n                const destroyComp = () => this.destroyBean(comp);\n                if (this.isAlive()) {\n                    this.eValue.appendChild(comp.getGui());\n                    this.addDestroyFunc(destroyComp);\n                } else {\n                    destroyComp();\n                }\n            });\n        } else {\n            this.eValue.innerText = valueToDisplay;\n        }\n    }\n\n    // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n    // so we need to have public here instead of private or protected\n    public override destroy(): void {\n        this.destroyBean(this.innerCellRenderer);\n        super.destroy();\n    }\n\n    public refresh(): boolean {\n        return false;\n    }\n}\n", "import type {\n    AgColumn,\n    BeanCollection,\n    ColumnModel,\n    CtrlsService,\n    ExpressionService,\n    FuncColsService,\n    GroupCellRendererParams,\n    IGroupCellRenderer,\n    IGroupCellRendererCtrl,\n    IRowNode,\n    RowNode,\n    UserCompDetails,\n    UserComponentFactory,\n    ValueService,\n    VisibleColsService,\n} from '@ag-grid-community/core';\nimport {\n    BeanStub,\n    CheckboxSelectionComponent,\n    KeyCode,\n    RowDragComp,\n    _cloneObject,\n    _createIconNoSpan,\n    _isElementInEventPath,\n    _isStopPropagationForAgGrid,\n    _missing,\n    _removeAriaExpanded,\n    _setAriaExpanded,\n    _stopPropagationForAgGrid,\n    _warnOnce,\n} from '@ag-grid-community/core';\n\nexport class GroupCellRendererCtrl extends BeanStub implements IGroupCellRendererCtrl {\n    private expressionService: ExpressionService;\n    private valueService: ValueService;\n    private columnModel: ColumnModel;\n    private visibleColsService: VisibleColsService;\n    private userComponentFactory: UserComponentFactory;\n    private ctrlsService: CtrlsService;\n    private funcColsService: FuncColsService;\n\n    public wireBeans(beans: BeanCollection): void {\n        this.expressionService = beans.expressionService;\n        this.valueService = beans.valueService;\n        this.columnModel = beans.columnModel;\n        this.visibleColsService = beans.visibleColsService;\n        this.userComponentFactory = beans.userComponentFactory;\n        this.ctrlsService = beans.ctrlsService;\n        this.funcColsService = beans.funcColsService;\n    }\n\n    private params: GroupCellRendererParams;\n\n    // will be true if the node was pulled down\n    private showingValueForOpenedParent: boolean;\n\n    // this is normally the rowNode of this row, however when doing hideOpenParents, it will\n    // be the parent who's details we are actually showing if the data was pulled down.\n    private displayedGroupNode: RowNode;\n\n    private eGui: HTMLElement;\n    private eExpanded: HTMLElement;\n    private eContracted: HTMLElement;\n    private eCheckbox: HTMLElement;\n    private expandListener: (() => null) | null;\n\n    // keep reference to this, so we can remove again when indent changes\n    private indentClass: string;\n\n    private comp: IGroupCellRenderer;\n    private compClass: any;\n\n    public init(\n        comp: IGroupCellRenderer,\n        eGui: HTMLElement,\n        eCheckbox: HTMLElement,\n        eExpanded: HTMLElement,\n        eContracted: HTMLElement,\n        compClass: any,\n        params: GroupCellRendererParams\n    ): void {\n        this.params = params;\n        this.eGui = eGui;\n        this.eCheckbox = eCheckbox;\n        this.eExpanded = eExpanded;\n        this.eContracted = eContracted;\n        this.comp = comp;\n        this.compClass = compClass;\n\n        const { node, colDef } = params;\n        const topLevelFooter = this.isTopLevelFooter();\n\n        // logic for skipping cells follows, never skip top level footer cell.\n        if (!topLevelFooter) {\n            const embeddedRowMismatch = this.isEmbeddedRowMismatch();\n            if (embeddedRowMismatch) {\n                return;\n            }\n\n            // this footer should only be non-top level. Don't need to check groupIncludeFooter\n            // as we won't have footer rows in that instance.\n            if (node.footer && this.gos.get('groupHideOpenParents')) {\n                const showRowGroup = colDef && colDef.showRowGroup;\n                const rowGroupColumnId = node.rowGroupColumn && node.rowGroupColumn.getColId();\n\n                // if the groupCellRenderer is inside of a footer and groupHideOpenParents is true\n                // we should only display the groupCellRenderer if the current column is the rowGroupedColumn\n                if (showRowGroup !== rowGroupColumnId) {\n                    return;\n                }\n            }\n        }\n\n        this.setupShowingValueForOpenedParent();\n        this.findDisplayedGroupNode();\n\n        if (!topLevelFooter) {\n            const showingFooterTotal =\n                params.node.footer &&\n                params.node.rowGroupIndex ===\n                    this.funcColsService\n                        .getRowGroupColumns()\n                        .findIndex((c) => c.getColId() === params.colDef?.showRowGroup);\n            // if we're always showing a group value\n            const isAlwaysShowing = this.gos.get('groupDisplayType') != 'multipleColumns' || this.gos.get('treeData');\n            // if the cell is populated with a parent value due to `showOpenedGroup`\n            const showOpenGroupValue =\n                isAlwaysShowing ||\n                (this.gos.get('showOpenedGroup') &&\n                    !params.node.footer &&\n                    (!params.node.group ||\n                        (params.node.rowGroupIndex != null &&\n                            params.node.rowGroupIndex >\n                                this.funcColsService\n                                    .getRowGroupColumns()\n                                    .findIndex((c) => c.getColId() === params.colDef?.showRowGroup))));\n            // not showing a leaf value (field/valueGetter)\n            const leafWithValues = !node.group && (this.params.colDef?.field || this.params.colDef?.valueGetter);\n            // doesn't have expand/collapse chevron\n            const isExpandable = this.isExpandable();\n            // is showing pivot leaf cell\n            const showPivotModeLeafValue =\n                this.columnModel.isPivotMode() &&\n                node.leafGroup &&\n                node.rowGroupColumn?.getColId() === params.column?.getColDef().showRowGroup;\n\n            // if not showing any values or chevron, skip cell.\n            const canSkipRenderingCell =\n                !this.showingValueForOpenedParent &&\n                !isExpandable &&\n                !leafWithValues &&\n                !showOpenGroupValue &&\n                !showingFooterTotal &&\n                !showPivotModeLeafValue;\n            if (canSkipRenderingCell) {\n                return;\n            }\n        }\n\n        this.addExpandAndContract();\n        this.addFullWidthRowDraggerIfNeeded();\n        this.addCheckboxIfNeeded();\n        this.addValueElement();\n        this.setupIndent();\n        this.refreshAriaExpanded();\n    }\n\n    public getCellAriaRole(): string {\n        const colDefAriaRole = this.params.colDef?.cellAriaRole;\n        const columnColDefAriaRole = this.params.column?.getColDef().cellAriaRole;\n        return colDefAriaRole || columnColDefAriaRole || 'gridcell';\n    }\n\n    public override destroy(): void {\n        super.destroy();\n        // property cleanup to avoid memory leaks\n        this.expandListener = null;\n    }\n\n    private refreshAriaExpanded(): void {\n        const { node, eGridCell } = this.params;\n\n        if (this.expandListener) {\n            this.expandListener = this.expandListener();\n        }\n\n        if (!this.isExpandable()) {\n            _removeAriaExpanded(eGridCell);\n            return;\n        }\n\n        const listener = () => {\n            // for react, we don't use JSX, as setting attributes via jsx is slower\n            _setAriaExpanded(eGridCell, !!node.expanded);\n        };\n\n        [this.expandListener] = this.addManagedListeners(node, { expandedChanged: listener }) || null;\n        listener();\n    }\n\n    private isTopLevelFooter(): boolean {\n        const totalRow = this.gos.getGrandTotalRow();\n        if (!totalRow) {\n            return false;\n        }\n\n        if (this.params.value != null || this.params.node.level != -1) {\n            return false;\n        }\n\n        // at this point, we know it's the root node and there is no value present, so it's a footer cell.\n        // the only thing to work out is if we are displaying groups  across multiple\n        // columns (groupDisplayType: 'multipleColumns'), we only want 'total' to appear in the first column.\n\n        const colDef = this.params.colDef;\n        const doingFullWidth = colDef == null;\n        if (doingFullWidth) {\n            return true;\n        }\n\n        if (colDef!.showRowGroup === true) {\n            return true;\n        }\n\n        const rowGroupCols = this.funcColsService.getRowGroupColumns();\n        // this is a sanity check, rowGroupCols should always be present\n        if (!rowGroupCols || rowGroupCols.length === 0) {\n            return true;\n        }\n\n        const firstRowGroupCol = rowGroupCols[0];\n\n        return firstRowGroupCol.getId() === colDef!.showRowGroup;\n    }\n\n    // if we are doing embedded full width rows, we only show the renderer when\n    // in the body, or if pinning in the pinned section, or if pinning and RTL,\n    // in the right section. otherwise we would have the cell repeated in each section.\n    private isEmbeddedRowMismatch(): boolean {\n        if (!this.params.fullWidth || !this.gos.get('embedFullWidthRows')) {\n            return false;\n        }\n\n        const pinnedLeftCell = this.params.pinned === 'left';\n        const pinnedRightCell = this.params.pinned === 'right';\n        const bodyCell = !pinnedLeftCell && !pinnedRightCell;\n\n        if (this.gos.get('enableRtl')) {\n            if (this.visibleColsService.isPinningLeft()) {\n                return !pinnedRightCell;\n            }\n            return !bodyCell;\n        }\n\n        if (this.visibleColsService.isPinningLeft()) {\n            return !pinnedLeftCell;\n        }\n\n        return !bodyCell;\n    }\n\n    private findDisplayedGroupNode(): void {\n        const column = this.params.column;\n        const rowNode = this.params.node as RowNode;\n\n        if (this.showingValueForOpenedParent) {\n            let pointer = rowNode.parent;\n\n            while (pointer != null) {\n                if (pointer.rowGroupColumn && column!.isRowGroupDisplayed(pointer.rowGroupColumn.getId())) {\n                    this.displayedGroupNode = pointer;\n                    break;\n                }\n                pointer = pointer.parent;\n            }\n        }\n\n        // if we didn't find a displayed group, set it to the row node\n        if (_missing(this.displayedGroupNode)) {\n            this.displayedGroupNode = rowNode;\n        }\n    }\n\n    private setupShowingValueForOpenedParent(): void {\n        // note - this code depends on sortService.updateGroupDataForHiddenOpenParents, where group data\n        // is updated to reflect the dragged down parents\n        const rowNode = this.params.node;\n        const column = this.params.column as AgColumn;\n\n        if (!this.gos.get('groupHideOpenParents')) {\n            this.showingValueForOpenedParent = false;\n            return;\n        }\n\n        // hideOpenParents means rowNode.groupData can have data for the group this column is displaying, even though\n        // this rowNode isn't grouping by the column we are displaying\n\n        // if no groupData at all, we are not showing a parent value\n        if (!rowNode.groupData) {\n            this.showingValueForOpenedParent = false;\n            return;\n        }\n\n        // this is the normal case, in that we are showing a group for which this column is configured. note that\n        // this means the Row Group is closed (if it was open, we would not be displaying it)\n        const showingGroupNode = rowNode.rowGroupColumn != null;\n        if (showingGroupNode) {\n            const keyOfGroupingColumn = rowNode.rowGroupColumn!.getId();\n            const configuredToShowThisGroupLevel = column.isRowGroupDisplayed(keyOfGroupingColumn);\n            // if showing group as normal, we didn't take group info from parent\n            if (configuredToShowThisGroupLevel) {\n                this.showingValueForOpenedParent = false;\n                return;\n            }\n        }\n\n        // see if we are showing a Group Value for the Displayed Group. if we are showing a group value, and this Row Node\n        // is not grouping by this Displayed Group, we must of gotten the value from a parent node\n        const valPresent = rowNode.groupData[column.getId()] != null;\n\n        this.showingValueForOpenedParent = valPresent;\n    }\n\n    private addValueElement(): void {\n        if (this.displayedGroupNode.footer) {\n            this.addFooterValue();\n        } else {\n            this.addGroupValue();\n            this.addChildCount();\n        }\n    }\n\n    private addGroupValue(): void {\n        // we try and use the cellRenderer of the column used for the grouping if we can\n        const paramsAdjusted = this.adjustParamsWithDetailsFromRelatedColumn();\n        const innerCompDetails = this.getInnerCompDetails(paramsAdjusted);\n\n        const { valueFormatted, value } = paramsAdjusted;\n\n        let valueWhenNoRenderer = valueFormatted;\n        if (valueWhenNoRenderer == null) {\n            const isGroupColForNode =\n                this.displayedGroupNode.rowGroupColumn &&\n                this.params.column?.isRowGroupDisplayed(this.displayedGroupNode.rowGroupColumn.getId());\n\n            if (this.displayedGroupNode.key === '' && this.displayedGroupNode.group && isGroupColForNode) {\n                const localeTextFunc = this.localeService.getLocaleTextFunc();\n                valueWhenNoRenderer = localeTextFunc('blanks', '(Blanks)');\n            } else {\n                valueWhenNoRenderer = value ?? null;\n            }\n        }\n\n        this.comp.setInnerRenderer(innerCompDetails, valueWhenNoRenderer);\n    }\n\n    private adjustParamsWithDetailsFromRelatedColumn(): GroupCellRendererParams {\n        const relatedColumn = this.displayedGroupNode.rowGroupColumn;\n        const column = this.params.column;\n\n        if (!relatedColumn) {\n            return this.params;\n        }\n\n        const notFullWidth = column != null;\n        if (notFullWidth) {\n            const showingThisRowGroup = column!.isRowGroupDisplayed(relatedColumn.getId());\n            if (!showingThisRowGroup) {\n                return this.params;\n            }\n        }\n\n        const params = this.params;\n\n        const { value, node } = this.params;\n        const valueFormatted = this.valueService.formatValue(relatedColumn, node, value);\n\n        // we don't update the original params, as they could of come through React,\n        // as react has RowGroupCellRenderer, which means the params could be props which\n        // would be read only\n        const paramsAdjusted = {\n            ...params,\n            valueFormatted: valueFormatted,\n        };\n\n        return paramsAdjusted;\n    }\n\n    private addFooterValue(): void {\n        let footerValueGetter = this.params.totalValueGetter;\n        if (!footerValueGetter) {\n            const legacyGetter = this.params.footerValueGetter;\n            if (legacyGetter) {\n                footerValueGetter = legacyGetter;\n                _warnOnce('As of v31.3, footerValueGetter is deprecated. Use `totalValueGetter` instead.');\n            }\n        }\n        let footerValue = '';\n\n        if (footerValueGetter) {\n            // params is same as we were given, except we set the value as the item to display\n            const paramsClone = _cloneObject(this.params);\n            paramsClone.value = this.params.value;\n\n            if (typeof footerValueGetter === 'function') {\n                footerValue = footerValueGetter(paramsClone);\n            } else if (typeof footerValueGetter === 'string') {\n                footerValue = this.expressionService.evaluate(footerValueGetter, paramsClone);\n            } else {\n                _warnOnce('footerValueGetter should be either a function or a string (expression)');\n            }\n        } else {\n            const localeTextFunc = this.localeService.getLocaleTextFunc();\n            const footerTotalPrefix = localeTextFunc('footerTotal', 'Total');\n            footerValue = footerTotalPrefix + ' ' + (this.params.value != null ? this.params.value : '');\n        }\n\n        const innerCompDetails = this.getInnerCompDetails(this.params);\n\n        this.comp.setInnerRenderer(innerCompDetails, footerValue);\n    }\n\n    private getInnerCompDetails(params: GroupCellRendererParams): UserCompDetails | undefined {\n        // for full width rows, we don't do any of the below\n        if (params.fullWidth) {\n            return this.userComponentFactory.getFullWidthGroupRowInnerCellRenderer(\n                this.gos.get('groupRowRendererParams'),\n                params\n            );\n        }\n\n        // when grouping, the normal case is we use the cell renderer of the grouped column. eg if grouping by country\n        // and then rating, we will use the country cell renderer for each country group row and likewise the rating\n        // cell renderer for each rating group row.\n        //\n        // however if the user has innerCellRenderer defined, this gets preference and we don't use cell renderers\n        // of the grouped columns.\n        //\n        // so we check and use in the following order:\n        //\n        // 1) thisColDef.cellRendererParams.innerRenderer of the column showing the groups (eg auto group column)\n        // 2) groupedColDef.cellRenderer of the grouped column\n        // 3) groupedColDef.cellRendererParams.innerRenderer\n\n        // we check if cell renderer provided for the group cell renderer, eg colDef.cellRendererParams.innerRenderer\n        const innerCompDetails = this.userComponentFactory.getInnerRendererDetails(params, params);\n\n        // avoid using GroupCellRenderer again, otherwise stack overflow, as we insert same renderer again and again.\n        // this covers off chance user is grouping by a column that is also configured with GroupCellRenderer\n        const isGroupRowRenderer = (details: UserCompDetails | undefined) =>\n            details && details.componentClass == this.compClass;\n\n        if (innerCompDetails && !isGroupRowRenderer(innerCompDetails)) {\n            // use the renderer defined in cellRendererParams.innerRenderer\n            return innerCompDetails;\n        }\n\n        const relatedColumn = this.displayedGroupNode.rowGroupColumn;\n        const relatedColDef = relatedColumn ? relatedColumn.getColDef() : undefined;\n\n        if (!relatedColDef) {\n            return;\n        }\n\n        // otherwise see if we can use the cellRenderer of the column we are grouping by\n        const relatedCompDetails = this.userComponentFactory.getCellRendererDetails(relatedColDef, params);\n\n        if (relatedCompDetails && !isGroupRowRenderer(relatedCompDetails)) {\n            // Only if the original column is using a specific renderer, it it is a using a DEFAULT one ignore it\n            return relatedCompDetails;\n        }\n\n        if (\n            isGroupRowRenderer(relatedCompDetails) &&\n            relatedColDef.cellRendererParams &&\n            relatedColDef.cellRendererParams.innerRenderer\n        ) {\n            // edge case - this comes from a column which has been grouped dynamically, that has a renderer 'group'\n            // and has an inner cell renderer\n            const res = this.userComponentFactory.getInnerRendererDetails(relatedColDef.cellRendererParams, params);\n            return res;\n        }\n    }\n\n    private addChildCount(): void {\n        // only include the child count if it's included, eg if user doing custom aggregation,\n        // then this could be left out, or set to -1, ie no child count\n        if (this.params.suppressCount) {\n            return;\n        }\n\n        this.addManagedListeners(this.displayedGroupNode, {\n            allChildrenCountChanged: this.updateChildCount.bind(this),\n        });\n\n        // filtering changes the child count, so need to cater for it\n        this.updateChildCount();\n    }\n\n    private updateChildCount(): void {\n        const allChildrenCount = this.displayedGroupNode.allChildrenCount;\n        const showingGroupForThisNode = this.isShowRowGroupForThisRow();\n        const showCount = showingGroupForThisNode && allChildrenCount != null && allChildrenCount >= 0;\n        const countString = showCount ? `(${allChildrenCount})` : ``;\n        this.comp.setChildCount(countString);\n    }\n\n    private isShowRowGroupForThisRow(): boolean {\n        if (this.gos.get('treeData')) {\n            return true;\n        }\n\n        const rowGroupColumn = this.displayedGroupNode.rowGroupColumn;\n\n        if (!rowGroupColumn) {\n            return false;\n        }\n\n        // column is null for fullWidthRows\n        const column = this.params.column;\n        const thisColumnIsInterested = column == null || column.isRowGroupDisplayed(rowGroupColumn.getId());\n\n        return thisColumnIsInterested;\n    }\n\n    private addExpandAndContract(): void {\n        const params = this.params;\n        const eExpandedIcon = _createIconNoSpan('groupExpanded', this.gos, null);\n        const eContractedIcon = _createIconNoSpan('groupContracted', this.gos, null);\n\n        if (eExpandedIcon) {\n            this.eExpanded.appendChild(eExpandedIcon);\n        }\n\n        if (eContractedIcon) {\n            this.eContracted.appendChild(eContractedIcon);\n        }\n\n        const eGroupCell = params.eGridCell;\n\n        // if editing groups, then double click is to start editing\n        const isDoubleClickEdit = this.params.column?.isCellEditable(params.node) && this.gos.get('enableGroupEdit');\n        if (!isDoubleClickEdit && this.isExpandable() && !params.suppressDoubleClickExpand) {\n            this.addManagedListeners(eGroupCell, { dblclick: this.onCellDblClicked.bind(this) });\n        }\n\n        this.addManagedListeners(this.eExpanded, { click: this.onExpandClicked.bind(this) });\n        this.addManagedListeners(this.eContracted, { click: this.onExpandClicked.bind(this) });\n\n        // expand / contract as the user hits enter\n        this.addManagedListeners(eGroupCell, { keydown: this.onKeyDown.bind(this) });\n        this.addManagedListeners(params.node, { expandedChanged: this.showExpandAndContractIcons.bind(this) });\n\n        this.showExpandAndContractIcons();\n\n        // because we don't show the expand / contract when there are no children, we need to check every time\n        // the number of children change.\n        const expandableChangedListener = this.onRowNodeIsExpandableChanged.bind(this);\n        this.addManagedListeners(this.displayedGroupNode, {\n            allChildrenCountChanged: expandableChangedListener,\n            masterChanged: expandableChangedListener,\n            groupChanged: expandableChangedListener,\n            hasChildrenChanged: expandableChangedListener,\n        });\n    }\n\n    private onExpandClicked(mouseEvent: MouseEvent): void {\n        if (_isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n\n        // so if we expand a node, it does not also get selected.\n        _stopPropagationForAgGrid(mouseEvent);\n\n        this.onExpandOrContract(mouseEvent);\n    }\n\n    private onExpandOrContract(e: MouseEvent | KeyboardEvent): void {\n        // must use the displayedGroup, so if data was dragged down, we expand the parent, not this row\n        const rowNode: RowNode = this.displayedGroupNode;\n        const nextExpandState = !rowNode.expanded;\n\n        if (!nextExpandState && rowNode.sticky) {\n            this.scrollToStickyNode(rowNode);\n        }\n\n        rowNode.setExpanded(nextExpandState, e);\n    }\n\n    private scrollToStickyNode(rowNode: RowNode): void {\n        const gridBodyCtrl = this.ctrlsService.getGridBodyCtrl();\n        const scrollFeature = gridBodyCtrl.getScrollFeature();\n\n        scrollFeature.setVerticalScrollPosition(rowNode.rowTop! - rowNode.stickyRowTop);\n    }\n\n    private isExpandable(): boolean {\n        if (this.showingValueForOpenedParent) {\n            return true;\n        }\n\n        const rowNode = this.displayedGroupNode;\n        const reducedLeafNode = this.columnModel.isPivotMode() && rowNode.leafGroup;\n        const expandableGroup = rowNode.isExpandable() && !rowNode.footer && !reducedLeafNode;\n\n        if (!expandableGroup) {\n            return false;\n        }\n\n        // column is null for fullWidthRows\n        const column = this.params.column;\n        const displayingForOneColumnOnly = column != null && typeof column.getColDef().showRowGroup === 'string';\n\n        if (displayingForOneColumnOnly) {\n            const showing = this.isShowRowGroupForThisRow();\n            return showing;\n        }\n\n        return true;\n    }\n\n    private showExpandAndContractIcons(): void {\n        const { params, displayedGroupNode: displayedGroup, columnModel } = this;\n        const { node } = params;\n\n        const isExpandable = this.isExpandable();\n\n        if (isExpandable) {\n            // if expandable, show one based on expand state.\n            // if we were dragged down, means our parent is always expanded\n            const expanded = this.showingValueForOpenedParent ? true : node.expanded;\n            this.comp.setExpandedDisplayed(expanded);\n            this.comp.setContractedDisplayed(!expanded);\n        } else {\n            // it not expandable, show neither\n            this.comp.setExpandedDisplayed(false);\n            this.comp.setContractedDisplayed(false);\n        }\n\n        // compensation padding for leaf nodes, so there is blank space instead of the expand icon\n        const pivotMode = columnModel.isPivotMode();\n        const pivotModeAndLeafGroup = pivotMode && displayedGroup.leafGroup;\n        const addExpandableCss = isExpandable && !pivotModeAndLeafGroup;\n        const isTotalFooterNode = node.footer && node.level === -1;\n\n        this.comp.addOrRemoveCssClass('ag-cell-expandable', addExpandableCss);\n        this.comp.addOrRemoveCssClass('ag-row-group', addExpandableCss);\n\n        if (pivotMode) {\n            this.comp.addOrRemoveCssClass('ag-pivot-leaf-group', !!pivotModeAndLeafGroup);\n        } else if (!isTotalFooterNode) {\n            this.comp.addOrRemoveCssClass('ag-row-group-leaf-indent', !addExpandableCss);\n        }\n    }\n\n    private onRowNodeIsExpandableChanged(): void {\n        // maybe if no children now, we should hide the expand / contract icons\n        this.showExpandAndContractIcons();\n\n        // if we have no children, this impacts the indent\n        this.setIndent();\n\n        this.refreshAriaExpanded();\n    }\n\n    private setupIndent(): void {\n        // only do this if an indent - as this overwrites the padding that\n        // the theme set, which will make things look 'not aligned' for the\n        // first group level.\n        const node: RowNode = this.params.node as RowNode;\n        const suppressPadding = this.params.suppressPadding;\n\n        if (!suppressPadding) {\n            this.addManagedListeners(node, { uiLevelChanged: this.setIndent.bind(this) });\n            this.setIndent();\n        }\n    }\n\n    private setIndent(): void {\n        if (this.gos.get('groupHideOpenParents')) {\n            return;\n        }\n\n        const params = this.params;\n        const rowNode: IRowNode = params.node;\n        // if we are only showing one group column, we don't want to be indenting based on level\n        const fullWithRow = !!params.colDef;\n        const treeData = this.gos.get('treeData');\n        const manyDimensionThisColumn = !fullWithRow || treeData || params.colDef!.showRowGroup === true;\n        const paddingCount = manyDimensionThisColumn ? rowNode.uiLevel : 0;\n\n        if (this.indentClass) {\n            this.comp.addOrRemoveCssClass(this.indentClass, false);\n        }\n\n        this.indentClass = 'ag-row-group-indent-' + paddingCount;\n        this.comp.addOrRemoveCssClass(this.indentClass, true);\n        this.eGui.style.setProperty('--ag-indentation-level', String(paddingCount));\n    }\n\n    private addFullWidthRowDraggerIfNeeded(): void {\n        if (!this.params.fullWidth || !this.params.rowDrag) {\n            return;\n        }\n\n        const rowDragComp = new RowDragComp(() => this.params.value, this.params.node as RowNode);\n        this.createManagedBean(rowDragComp);\n\n        this.eGui.insertAdjacentElement('afterbegin', rowDragComp.getGui());\n    }\n\n    private isUserWantsSelected(): boolean {\n        const paramsCheckbox = this.params.checkbox;\n\n        // if a function, we always return true as change detection can show or hide the checkbox.\n        return typeof paramsCheckbox === 'function' || paramsCheckbox === true;\n    }\n\n    private addCheckboxIfNeeded(): void {\n        const rowNode = this.displayedGroupNode;\n        const checkboxNeeded =\n            this.isUserWantsSelected() &&\n            // footers cannot be selected\n            !rowNode.footer &&\n            // pinned rows cannot be selected\n            !rowNode.rowPinned &&\n            // details cannot be selected\n            !rowNode.detail;\n\n        if (checkboxNeeded) {\n            const cbSelectionComponent = new CheckboxSelectionComponent();\n            this.createBean(cbSelectionComponent);\n\n            cbSelectionComponent.init({\n                rowNode: this.params.node as RowNode, // when groupHideOpenParents = true and group expanded, we want the checkbox to refer to leaf node state (not group node state)\n                column: this.params.column as AgColumn,\n                overrides: {\n                    isVisible: this.params.checkbox,\n                    callbackParams: this.params,\n                    removeHidden: true,\n                },\n            });\n            this.eCheckbox.appendChild(cbSelectionComponent.getGui());\n            this.addDestroyFunc(() => this.destroyBean(cbSelectionComponent));\n        }\n\n        this.comp.setCheckboxVisible(checkboxNeeded);\n    }\n\n    private onKeyDown(event: KeyboardEvent): void {\n        const isEnterKey = event.key === KeyCode.ENTER;\n\n        if (!isEnterKey || this.params.suppressEnterExpand) {\n            return;\n        }\n\n        const cellEditable = this.params.column && this.params.column.isCellEditable(this.params.node);\n\n        if (cellEditable) {\n            return;\n        }\n\n        this.onExpandOrContract(event);\n    }\n\n    private onCellDblClicked(mouseEvent: MouseEvent): void {\n        if (_isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n\n        // we want to avoid acting on double click events on the expand / contract icon,\n        // as that icons already has expand / collapse functionality on it. otherwise if\n        // the icon was double clicked, we would get 'click', 'click', 'dblclick' which\n        // is open->close->open, however double click should be open->close only.\n        const targetIsExpandIcon =\n            _isElementInEventPath(this.eExpanded, mouseEvent) || _isElementInEventPath(this.eContracted, mouseEvent);\n\n        if (!targetIsExpandIcon) {\n            this.onExpandOrContract(mouseEvent);\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": ["import_core", "import_core", "document", "import_core", "import_core", "import_core", "import_core", "import_core", "import_core", "pill", "import_core", "import_core", "value", "import_core", "value", "import_core", "import_core", "import_core", "import_core", "import_core", "import_core", "import_core", "import_core", "import_core", "import_core", "import_core"]
}
